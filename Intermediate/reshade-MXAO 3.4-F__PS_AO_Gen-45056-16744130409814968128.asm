//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float fMXAOAmbientOcclusionAmount; // Offset:    0 Size:     4 [unused]
//   float fMXAOSampleRadius;           // Offset:    4 Size:     4
//   float iMXAOSampleCount;            // Offset:    8 Size:     4
//   float iMXAOBayerDitherLevel;       // Offset:   12 Size:     4 [unused]
//   float fMXAONormalBias;             // Offset:   16 Size:     4
//   bool bMXAOSmoothNormalsEnable;     // Offset:   20 Size:     4
//   float fMXAOBlurSharpness;          // Offset:   24 Size:     4 [unused]
//   float fMXAOBlurSteps;              // Offset:   28 Size:     4 [unused]
//   bool bMXAODebugViewEnable;         // Offset:   32 Size:     4 [unused]
//   float fMXAOFadeoutStart;           // Offset:   36 Size:     4 [unused]
//   float fMXAOFadeoutEnd;             // Offset:   40 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__texDistance                  texture  float4          2d             t6      1 
// __V__texSurfaceNormal             texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t8.xyzw, s0
mad r1.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t6.yzwx, s0, l(0.000000)
mad r2.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mov r2.z, l(1.000000)
mul r2.xyz, r1.wwww, r2.xyzx
if_nz cb0[1].y
  mov r3.z, l(1.000000)
  mov r4.xyz, l(0,0,0,0)
  mov r2.w, l(0)
  mov r5.x, l(-3.000000)
  loop 
    lt r3.w, l(3.000000), r5.x
    breakc_nz r3.w
    mov r6.xyz, r4.xyzx
    mov r3.w, r2.w
    mov r5.y, l(-3.000000)
    loop 
      lt r4.w, l(3.000000), r5.y
      breakc_nz r4.w
      mad r5.zw, r5.xxxy, l(0.000000, 0.000000, 0.001823, 0.003241), v1.xxxy
      sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zwzz, t8.xyzw, s0, l(2.000000)
      mad r7.xyz, r7.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      dp3 r4.w, r7.xyzx, r7.xyzx
      rsq r4.w, r4.w
      mul r7.xyz, r4.wwww, r7.xyzx
      mad r3.xy, r5.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t6.yzwx, s0, l(2.000000)
      mad r8.xyz, -r3.xyzx, r4.wwww, r2.xyzx
      dp3 r3.x, r8.xyzx, r8.xyzx
      sqrt r3.x, r3.x
      mad r3.x, -r3.x, l(1.200000), l(1.000000)
      max r3.x, r3.x, l(0.000000)
      dp3 r3.y, r7.xyzx, r1.xyzx
      add r3.y, r3.y, l(-0.500000)
      add_sat r3.y, r3.y, r3.y
      mad r4.w, r3.y, l(-2.000000), l(3.000000)
      mul r3.y, r3.y, r3.y
      mul r3.y, r3.y, r4.w
      mul r4.w, r3.y, r3.x
      mad r6.xyz, r7.xyzx, r4.wwww, r6.xyzx
      mad r3.w, r3.x, r3.y, r3.w
      add r5.y, r5.y, l(1.000000)
    endloop 
    mov r4.xyz, r6.xyzx
    mov r2.w, r3.w
    add r5.x, r5.x, l(1.000000)
  endloop 
  add r2.w, r2.w, l(0.000100)
  div r3.xyz, r4.xyzx, r2.wwww
  mad r3.xyz, r1.xyzx, l(0.050000, 0.050000, 0.050000, 0.000000), r3.xyzx
  dp3 r2.w, r3.xyzx, r3.xyzx
  rsq r2.w, r2.w
  mul r1.xyz, r2.wwww, r3.xyzx
endif 
mul r1.w, r1.w, l(0.001000)
mad r2.xyz, r1.xyzx, r1.wwww, r2.xyzx
mul r1.w, cb0[0].y, cb0[0].y
mul r2.w, r1.w, l(0.200000)
mul r3.x, r2.z, cb0[0].z
div r2.w, r2.w, r3.x
mul r3.x, r2.w, l(3200.000000)
mul r3.y, r0.w, l(6.283185)
sincos r4.x, r5.x, r3.y
div r1.w, l(-1.000000), r1.w
mov r5.y, r4.x
mul r3.yz, r2.wwww, r5.xxyx
mov r4.z, l(1.000000)
mov r5.xy, r3.yzyy
mov r2.w, l(0)
mov r3.w, l(0)
loop 
  itof r4.w, r3.w
  ge r5.z, r4.w, cb0[0].z
  breakc_nz r5.z
  dp2 r6.x, r5.xyxx, l(0.575000, -0.818150, 0.000000, 0.000000)
  dp2 r6.y, r5.xyxx, l(0.818150, 0.575000, 0.000000, 0.000000)
  mul r5.zw, r6.xxxy, l(0.000000, 0.000000, 1.000000, 1.777778)
  add r6.z, r0.w, r4.w
  mad r5.zw, r5.zzzw, r6.zzzz, v1.xxxy
  mul r4.w, r3.x, r4.w
  log r4.w, r4.w
  mad_sat r4.w, r4.w, l(0.200000), l(-0.600000)
  mul r4.w, r4.w, l(5.000000)
  mad r4.xy, r5.zwzz, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  round_z r4.w, r4.w
  sample_l_indexable(texture2d)(float,float,float,float) r4.w, r5.zwzz, t6.yzwx, s0, r4.w
  mad r4.xyw, r4.xyxz, r4.wwww, -r2.xyxz
  dp3 r5.z, r4.xywx, r4.xywx
  rsq r5.z, r5.z
  dp3 r4.x, r4.xywx, r1.xyzx
  div r4.y, r1.w, r5.z
  add r4.y, r4.y, l(1.000000)
  max r4.y, r4.y, l(0.000000)
  mad_sat r4.x, r4.x, r5.z, -cb0[1].x
  mad r2.w, r4.y, r4.x, r2.w
  iadd r3.w, r3.w, l(1)
  mov r5.xy, r6.xyxx
endloop 
add r0.w, -cb0[1].x, l(1.000000)
mul r0.w, r0.w, cb0[0].z
mul r0.w, r0.w, l(0.400000)
sqrt r1.x, cb0[0].y
mul r0.w, r0.w, r1.x
div_sat r0.w, r2.w, r0.w
sqrt o0.w, r0.w
mov o0.xyz, r0.xyzx
ret 
// Approximately 108 instruction slots used
