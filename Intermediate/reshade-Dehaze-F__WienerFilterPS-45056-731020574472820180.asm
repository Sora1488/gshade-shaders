//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Alpha;                       // Offset:    0 Size:     4
//   float TransmissionMultiplier;      // Offset:    4 Size:     4
//   float DepthMultiplier;             // Offset:    8 Size:     4
//   bool IgnoreSky;                    // Offset:   12 Size:     4
//   int Debug;                         // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__BackBuffer                   texture  float4          2d             t4      1 
// __V__Mean                         texture  float4          2d             t6      1 
// __V__Variance                     texture  float4          2d             t8      1 
// __V__Maximum                      texture  float4          2d            t14      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 3
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
ge r0.y, r0.x, l(1.000000)
ine r0.z, cb0[0].w, l(0)
and r0.y, r0.y, r0.z
discard_nz r0.y
sample_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t6.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t8.yzxw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t8.yzwx, s0, l(7.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t4.xyzw, s0
min r1.w, r1.y, r1.x
min r1.w, r1.z, r1.w
sample_l_indexable(texture2d)(float,float,float,float) r2.x, v1.xyxx, t6.xyzw, s0, l(7.000000)
max r2.y, r1.y, r1.x
max r2.y, r1.z, r2.y
sample_l_indexable(texture2d)(float,float,float,float) r2.z, v1.xyxx, t14.yzxw, s0, l(4.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.w, v1.xyxx, t14.yzwx, s0, l(5.000000)
add r2.z, r2.w, r2.z
sample_l_indexable(texture2d)(float,float,float,float) r2.w, v1.xyxx, t14.yzwx, s0, l(6.000000)
add r2.z, r2.w, r2.z
sample_l_indexable(texture2d)(float,float,float,float) r2.w, v1.xyxx, t14.yzwx, s0, l(7.000000)
add r2.z, r2.w, r2.z
mul r2.z, r2.z, l(0.250000)
add r0.w, -r0.w, r0.z
max r0.w, r0.w, l(0.000000)
div r0.z, r0.w, r0.z
add r0.w, -r0.y, r1.w
mul_sat r0.z, r0.w, r0.z
add_sat r0.y, r0.z, r0.y
max r0.z, r2.z, l(0.050000)
min r0.z, r0.z, l(1.000000)
add r0.w, -r0.z, r2.y
add r2.x, -r2.x, r0.z
ge r2.z, l(0.250000), r2.x
lt r2.w, r2.x, l(0.350000)
add r2.x, r2.x, l(0.400000)
movc r2.x, r2.w, r2.x, l(0.750000)
movc r2.x, r2.z, l(0.550000), r2.x
mul r0.y, r1.w, r0.y
div r0.y, r0.y, r0.z
lt r0.w, r0.w, r2.x
div r1.w, r2.x, r2.y
mul r1.w, r0.y, r1.w
min r1.w, r1.w, l(1.000000)
movc r0.y, r0.w, r1.w, r0.y
add r0.y, -r0.y, l(1.000000)
mul r0.x, r0.x, -cb0[0].z
mul r0.x, r0.x, l(0.577078)
exp r0.x, r0.x
mul r0.x, r0.x, r0.y
mul r0.y, cb0[0].y, l(-0.577078)
exp r0.y, r0.y
mul r0.x, r0.y, r0.x
max r0.x, r0.x, l(0.050000)
min r0.x, r0.x, l(1.000000)
dp3 r0.y, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
add r0.y, -r0.z, r0.y
div r0.y, r0.y, r0.x
add r0.y, r0.z, r0.y
mul r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.331264, 0.418688)
mad r0.z, r1.x, l(-0.168736), -r0.z
mad r0.z, r1.z, l(0.500000), r0.z
mad r0.w, r1.x, l(0.500000), -r0.w
mad r0.w, -r1.z, l(0.081312), r0.w
mad r2.x, r0.w, l(1.402000), r0.y
mad r1.w, -r0.z, l(0.344136), r0.y
mad r2.y, -r0.w, l(0.714136), r1.w
mad r2.z, r0.z, l(1.772000), r0.y
add r0.yzw, -r1.xxyz, r2.xxyz
mad r0.yzw, cb0[0].xxxx, r0.yyzw, r1.xxyz
ieq r1.x, cb0[1].x, l(1)
movc o0.xyz, r1.xxxx, r0.xxxx, r0.yzwy
ret 
// Approximately 74 instruction slots used
