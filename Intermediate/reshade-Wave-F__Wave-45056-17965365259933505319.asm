//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texColorBuffer               texture  float4          2d             t4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s1
mad r0.y, v1.x, l(1.777778), l(-0.888889)
add r0.z, v1.y, l(-0.500000)
mul r0.z, r0.z, l(30.000000)
sincos r0.z, null, r0.z
mad r2.x, r0.z, l(0.075000), r0.y
mov r2.y, v1.y
add r2.xy, r2.xyxx, l(0.888889, 0.000000, 0.000000, 0.000000)
mul r2.z, r2.x, l(0.562500)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, r2.zyzz, t2.yxzw, s0, l(0.000000)
mad r0.z, -r0.y, l(999.000000), l(1000.000000)
div r0.y, r0.y, r0.z
ge r0.z, r0.y, l(0.000000)
ge r0.y, l(1.000000), r0.y
and r0.y, r0.y, r0.z
if_nz r0.y
  mul r2.w, r2.x, l(0.562500)
  sample_indexable(texture2d)(float,float,float,float) o0.xyzw, r2.wyww, t4.xyzw, s1
else 
  mov o0.xyzw, r1.xyzw
endif 
lt r0.x, r0.x, l(0.000000)
if_nz r0.x
  mov o0.xyzw, r1.xyzw
endif 
ret 
// Approximately 29 instruction slots used
