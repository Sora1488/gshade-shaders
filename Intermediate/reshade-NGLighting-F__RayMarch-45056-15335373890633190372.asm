//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Hints;                         // Offset:    0 Size:     4 [unused]
//   int Credits;                       // Offset:    4 Size:     4 [unused]
//   int Preprocessordefinitionstooltip;// Offset:    8 Size:     4 [unused]
//   float Timer;                       // Offset:   12 Size:     4 [unused]
//   float Frame;                       // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__TexColor                     texture  float4          2d             t4      1 
// __V__SSSR_NormTex                 texture  float4          2d            t26      1 
// __V__SSSR_LowResDepthTex          texture  float4          2d            t30      1 
// __V__SSSR_HLTex0                  texture  float4          2d            t34      1 
// __V__SSSR_BlueNoise               texture  float4          2d            t40      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   x           1   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t30
dcl_resource_texture2d (float,float,float,float) t34
dcl_resource_texture2d (float,float,float,float) t40
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.x
dcl_temps 8
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t26.wxyz, s0
lt r0.y, l(0.990000), r0.x
if_nz r0.y
  mov o0.xyzw, l(0,0,0,1.000000)
  mov o1.x, l(0)
else 
  sample_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t34.yxzw, s0
  max r0.y, r0.y, l(1.000000)
  mul r1.xyzw, v1.xyxy, l(1920.000000, 1080.000000, 245760.000000, 138240.000000)
  ge r2.xyzw, r1.zwzw, -r1.zwzw
  movc r2.xyzw, r2.xyzw, l(128.000000,128.000000,0.007812,0.007812), l(-128.000000,-128.000000,-0.007812,-0.007812)
  mul r0.zw, r1.xxxy, r2.zzzw
  frc r0.zw, r0.zzzw
  mul r1.x, cb0[1].x, l(64.000000)
  ge r1.x, r1.x, -r1.x
  movc r1.xy, r1.xxxx, l(64.000000,0.015625,0,0), l(-64.000000,-0.015625,0,0)
  mul r1.y, r1.y, cb0[1].x
  frc r1.y, r1.y
  mul r1.x, r1.y, r1.x
  mul r1.yzw, r1.xxxx, l(0.000000, 8.000000, 0.125000, 5.588238)
  ge r1.y, r1.y, -r1.y
  movc r2.zw, r1.yyyy, l(0,0,8.000000,0.125000), l(0,0,-8.000000,-0.125000)
  mul r1.x, r1.x, r2.w
  frc r1.x, r1.x
  mul r1.x, r1.x, r2.z
  round_ni r1.z, r1.z
  mul r2.z, r1.z, l(8.000000)
  ge r2.z, r2.z, -r2.z
  movc r2.zw, r2.zzzz, l(0,0,8.000000,0.125000), l(0,0,-8.000000,-0.125000)
  mul r1.z, r1.z, r2.w
  frc r1.z, r1.z
  mul r1.z, r1.z, r2.z
  ftoi r1.xy, r1.xzxx
  ishl r1.xy, r1.xyxx, l(7, 7, 0, 0)
  itof r1.xy, r1.xyxx
  mad r0.zw, r2.xxxy, r0.zzzw, r1.xxxy
  mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000977, 0.000977)
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t40.xyzw, s2
  mad r0.zw, v1.xxxy, l(0.000000, 0.000000, 1920.000000, 1080.000000), r1.wwww
  dp2 r0.z, r0.zwzz, l(0.067111, 0.005837, 0.000000, 0.000000)
  frc r0.z, r0.z
  mul r0.z, r0.z, l(52.982918)
  frc r0.z, r0.z
  mul r0.w, r0.y, cb0[1].x
  ge r0.w, r0.w, -r0.w
  movc r0.w, r0.w, r0.y, -r0.y
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
  mul r1.w, r1.w, cb0[1].x
  frc r1.w, r1.w
  mul r0.w, r0.w, r1.w
  mad r2.xyzw, r0.wwww, l(0.008309, 0.008309, 0.008309, 0.008309), v1.xyxy
  dp2 r0.w, r2.zwzz, l(1.000000, 73.000000, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(437580.531250)
  frc r3.x, r0.w
  add r2.xyzw, r2.xyzw, l(0.643217, 0.643217, 0.192168, 0.192168)
  dp2 r0.w, r2.xyxx, l(1.000000, 73.000000, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(437580.531250)
  frc r3.y, r0.w
  dp2 r0.w, r2.zwzz, l(1.000000, 73.000000, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(437580.531250)
  frc r3.z, r0.w
  lt r0.y, l(64.000000), r0.y
  movc r1.xyz, r0.yyyy, r3.xyzx, r1.xyzx
  mad r0.yw, v1.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, -1.000000, 0.000000, -1.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
  mad r2.x, -r1.w, l(999.000000), l(1000.000000)
  div r1.w, r1.w, r2.x
  mul r2.z, r1.w, l(1000.000000)
  mul r0.yw, r0.yyyw, r2.zzzz
  mul r2.xy, r0.ywyy, l(0.872665, 0.872665, 0.000000, 0.000000)
  mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  dp3 r0.y, r1.xyzx, r1.xyzx
  rsq r0.y, r0.y
  mul r1.xyz, r0.yyyy, r1.xyzx
  add r3.xyzw, v1.xyxy, l(0.000000, 0.000926, -0.000000, -0.000926)
  mad r4.xyzw, r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, r3.xyxx, t2.yxzw, s0, l(0.000000)
  mad r0.w, -r0.y, l(999.000000), l(1000.000000)
  div r0.y, r0.y, r0.w
  mul r5.zw, r0.yyyy, l(0.000000, 0.000000, 1000.000000, 2000.000000)
  mul r0.yw, r4.xxxy, r5.zzzz
  mul r5.xy, r0.ywyy, l(0.872665, 0.872665, 0.000000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, r3.zwzz, t2.yxzw, s0, l(0.000000)
  mad r0.w, -r0.y, l(999.000000), l(1000.000000)
  div r0.y, r0.y, r0.w
  mul r3.zw, r0.yyyy, l(0.000000, 0.000000, 1000.000000, 2000.000000)
  mul r0.yw, r3.zzzz, r4.zzzw
  mul r3.xy, r0.ywyy, l(0.872665, 0.872665, 0.000000, 0.000000)
  add r4.xyzw, v1.xyxy, l(0.000521, 0.000000, -0.000521, -0.000000)
  mad r6.xyzw, r4.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, r4.xyxx, t2.yxzw, s0, l(0.000000)
  mad r0.w, -r0.y, l(999.000000), l(1000.000000)
  div r0.y, r0.y, r0.w
  mul r7.zw, r0.yyyy, l(0.000000, 0.000000, 1000.000000, 2000.000000)
  mul r0.yw, r6.xxxy, r7.zzzz
  mul r7.xy, r0.ywyy, l(0.872665, 0.872665, 0.000000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, r4.zwzz, t2.yxzw, s0, l(0.000000)
  mad r0.w, -r0.y, l(999.000000), l(1000.000000)
  div r0.y, r0.y, r0.w
  mul r4.zw, r0.yyyy, l(0.000000, 0.000000, 1000.000000, 2000.000000)
  mul r0.yw, r4.zzzz, r6.zzzw
  mul r4.xy, r0.ywyy, l(0.872665, 0.872665, 0.000000, 0.000000)
  add r6.xyzw, v1.xyxy, l(0.000000, 0.001852, -0.000000, -0.001852)
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, r6.xyxx, t2.yxzw, s0, l(0.000000)
  mad r0.w, -r0.y, l(999.000000), l(1000.000000)
  div r0.y, r0.y, r0.w
  sample_l_indexable(texture2d)(float,float,float,float) r0.w, r6.zwzz, t2.yzwx, s0, l(0.000000)
  mad r2.w, -r0.w, l(999.000000), l(1000.000000)
  div r0.w, r0.w, r2.w
  add r6.xyzw, v1.xyxy, l(0.001042, 0.000000, -0.001042, -0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r2.w, r6.xyxx, t2.yzwx, s0, l(0.000000)
  mad r6.x, -r2.w, l(999.000000), l(1000.000000)
  div r2.w, r2.w, r6.x
  sample_l_indexable(texture2d)(float,float,float,float) r6.x, r6.zwzz, t2.xyzw, s0, l(0.000000)
  mad r6.y, -r6.x, l(999.000000), l(1000.000000)
  div r6.x, r6.x, r6.y
  mad r0.y, -r0.y, l(1000.000000), r5.w
  mad r0.w, -r0.w, l(1000.000000), r3.w
  mad r2.w, -r2.w, l(1000.000000), r7.w
  mad r3.w, -r6.x, l(1000.000000), r4.w
  add r5.xyz, -r2.zxyz, r5.zxyz
  add r4.xyz, -r2.yzxy, r4.yzxy
  mad r0.w, -r1.w, l(1000.000000), r0.w
  mad r0.y, -r1.w, l(1000.000000), r0.y
  lt r0.y, |r0.w|, |r0.y|
  add r3.xyz, r2.zxyz, -r3.zxyz
  movc r3.xyz, r0.yyyy, r3.xyzx, r5.xyzx
  mad r0.y, -r1.w, l(1000.000000), r2.w
  mad r0.w, -r1.w, l(1000.000000), r3.w
  lt r0.y, |r0.y|, |r0.w|
  add r5.xyz, r2.yzxy, -r7.yzxy
  movc r4.xyz, r0.yyyy, r5.xyzx, r4.xyzx
  mul r5.xyz, r3.xyzx, r4.xyzx
  mad r3.xyz, r3.zxyz, r4.yzxy, -r5.xyzx
  dp3 r0.y, r3.xyzx, r3.xyzx
  rsq r0.y, r0.y
  mul r3.xyz, r0.yyyy, r3.xyzx
  dp3 r0.y, r1.xyzx, r3.xyzx
  lt r0.y, l(0.000000), r0.y
  movc r1.xyz, r0.yyyy, -r1.xyzx, r1.xyzx
  add r0.y, r0.z, l(1.000000)
  mul r0.y, r2.z, r0.y
  mul r0.y, r0.y, l(0.010000)
  mad r3.xyz, r1.xyzx, r0.yyyy, r2.xyzx
  mov r0.zw, l(0,0,0,0)
  mov r2.w, l(0)
  mov r4.xyz, r3.xyzx
  mov r3.w, r0.y
  mov r4.w, l(0)
  mov r5.x, l(-1)
  loop 
    breakc_z r5.x
    mul r5.yz, r4.xxyx, l(0.000000, 1.145916, 1.145916, 0.000000)
    div r5.yz, r5.yyzy, r4.zzzz
    mad r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.w, r5.yzyy, t30.yzwx, s0, l(0.000000)
    add r5.w, -r4.z, r5.w
    lt r6.x, r5.w, -r1.w
    max r6.y, r3.w, l(1.000000)
    mul r6.y, r6.y, l(-5.000000)
    lt r5.w, r6.y, r5.w
    and r5.w, r5.w, r6.x
    if_nz r5.w
      mov r0.zw, r5.yyyz
      mov r2.w, l(1.000000)
      break 
    endif 
    mad r4.xyz, r1.xyzx, r3.wwww, r4.xyzx
    mul r3.w, r3.w, l(1.140000)
    iadd r4.w, r4.w, l(1)
    ult r5.x, r4.w, l(65)
    mov r0.zw, r5.yyyz
    mov r2.w, l(0)
  endloop 
  ge r0.y, r0.z, l(1.000000)
  ge r1.x, l(0.000000), r0.w
  or r0.y, r0.y, r1.x
  if_nz r0.y
    mov r1.xyz, l(0,0,0,0)
  else 
    sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t4.wxyz, s0
    mul r1.xyz, r2.wwww, r0.yzwy
  endif 
  add r0.yzw, -r2.xxyz, r4.xxyz
  dp3 r0.y, r0.yzwy, r0.yzwy
  sqrt r0.y, r0.y
  ne r0.z, l(0.000000, 0.000000, 0.000000, 0.000000), r2.w
  movc r0.y, r0.z, r0.y, l(1000.000000)
  max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  log r1.xyz, r1.xyzx
  mul r1.xyz, r1.xyzx, l(0.454545, 0.454545, 0.454545, 0.000000)
  exp r1.xyz, r1.xyzx
  max r0.z, r1.y, r1.x
  max r0.z, r1.z, r0.z
  add r0.z, -r0.z, l(1.000010)
  div r1.xyz, r1.xyzx, r0.zzzz
  add r0.z, r1.y, r1.x
  add r0.z, r1.z, r0.z
  mul r0.w, r0.z, l(0.333333)
  div r1.xyz, r1.xyzx, r0.wwww
  lt r0.z, l(300.000000), r0.z
  movc r0.z, r0.z, l(100.000000), r0.w
  mul r1.xyz, r0.zzzz, r1.xyzx
  max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  log r0.x, r0.x
  mul r0.xz, r0.xxyx, l(3.980099, 0.000000, 0.020000, 0.000000)
  exp r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  min r0.z, r0.z, l(1.000000)
  mul r1.xyz, r2.wwww, r1.xyzx
  mul o0.xyz, r0.xxxx, r1.xyzx
  add r0.z, r0.z, l(-1.000000)
  mad o0.w, r0.x, r0.z, l(1.000000)
  mov o1.x, r0.y
endif 
ret 
// Approximately 219 instruction slots used
