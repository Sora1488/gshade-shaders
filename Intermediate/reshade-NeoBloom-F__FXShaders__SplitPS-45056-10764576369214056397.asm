//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int _1312;                         // Offset:    0 Size:     4 [unused]
//   float uIntensity;                  // Offset:    4 Size:     4 [unused]
//   float uSaturation;                 // Offset:    8 Size:     4 [unused]
//   float3 ColorFilter;                // Offset:   16 Size:    12 [unused]
//   int BloomBlendMode;                // Offset:   28 Size:     4 [unused]
//   float uLensDirtAmount;             // Offset:   32 Size:     4 [unused]
//   int AdaptMode;                     // Offset:   36 Size:     4 [unused]
//   float uAdaptAmount;                // Offset:   40 Size:     4 [unused]
//   float uAdaptSensitivity;           // Offset:   44 Size:     4 [unused]
//   float uAdaptExposure;              // Offset:   48 Size:     4 [unused]
//   bool uAdaptUseLimits;              // Offset:   52 Size:     4 [unused]
//   float2 uAdaptLimits;               // Offset:   56 Size:     8 [unused]
//   float uAdaptTime;                  // Offset:   64 Size:     4 [unused]
//   float uAdaptPrecision;             // Offset:   68 Size:     4 [unused]
//   int uAdaptFormula;                 // Offset:   72 Size:     4 [unused]
//   float uMean;                       // Offset:   76 Size:     4 [unused]
//   float uVariance;                   // Offset:   80 Size:     4 [unused]
//   float uGhostingAmount;             // Offset:   84 Size:     4 [unused]
//   float3 DepthMultiplier;            // Offset:   96 Size:    12 [unused]
//   float2 DepthRange;                 // Offset:  112 Size:     8 [unused]
//   float DepthSmoothness;             // Offset:  120 Size:     4 [unused]
//   float uMaxBrightness;              // Offset:  124 Size:     4 [unused]
//   bool uNormalizeBrightness;         // Offset:  128 Size:     4 [unused]
//   bool MagicMode;                    // Offset:  132 Size:     4 [unused]
//   float uSigma;                      // Offset:  136 Size:     4 [unused]
//   float uPadding;                    // Offset:  140 Size:     4
//   float FrameTime;                   // Offset:  144 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__FXShaders__NeoBloom_DownSample    texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
add r0.xyzw, v1.xyxy, l(-0.000000, -0.500000, -0.500000, -0.000000)
ge r1.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
ge r2.xyzw, l(0.500000, 0.500000, 0.250000, 0.250000), r0.xyzw
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r1.xz, r1.xxzx, r2.xxzx
mul r1.xy, r1.ywyy, r1.xzxx
mul r1.xy, r2.ywyy, r1.xyxx
mad r0.xy, r0.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r0.zw, r0.zzzw, l(0.000000, 0.000000, 4.000000, 4.000000), l(0.000000, 0.000000, -0.500000, -0.500000)
add r1.z, cb0[8].w, l(1.000000)
mad r0.xy, r0.xyxx, r1.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyxx, t4.xyzw, s0, l(1.000000)
mul r2.xyz, r1.xxxx, r2.xyzx
mad r0.x, cb0[8].w, l(2.000000), l(1.000000)
mad r0.xy, r0.zwzz, r0.xxxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t4.xyzw, s0, l(2.000000)
mul r0.xyz, r1.yyyy, r0.xyzx
mov r2.w, r1.x
mov r0.w, r1.y
add r0.xyzw, r0.xyzw, r2.xyzw
add r1.xyzw, v1.xyxy, l(-0.750000, -0.875000, -0.875000, -0.000000)
ge r2.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
ge r3.xyzw, l(0.125000, 0.125000, 0.062500, 0.062500), r1.xyzw
mad r1.xyzw, r1.xyzw, l(8.000000, 8.000000, 16.000000, 16.000000), l(-0.500000, -0.500000, -0.500000, -0.500000)
and r3.xyzw, r3.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r2.xz, r2.xxzx, r3.xxzx
mul r2.xy, r2.ywyy, r2.xzxx
mul r2.xy, r3.ywyy, r2.xyxx
mad r3.xyz, cb0[8].wwww, l(3.000000, 4.000000, 5.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyzw, r1.xyzw, r3.xxyy, l(0.500000, 0.500000, 0.500000, 0.500000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyw, r1.xyxx, t4.xywz, s0, l(3.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t4.xyzw, s0, l(5.000000)
mul r1.xyz, r2.yyyy, r1.xyzx
mul r4.xyz, r2.xxxx, r3.xywx
mov r4.w, r2.x
mov r1.w, r2.y
add r0.xyzw, r0.xyzw, r4.xyzw
add r0.xyzw, r1.xyzw, r0.xyzw
mad r1.xy, v1.xyxx, l(33.333336, 33.333336, 0.000000, 0.000000), l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, r3.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t4.xyzw, s0, l(7.000000)
ge r2.xy, v1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
ge r2.zw, l(0.000000, 0.000000, 0.030000, 0.030000), v1.xxxy
and r2.xyzw, r2.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
mul r1.w, r2.z, r2.x
mul r1.w, r2.y, r1.w
mul r2.w, r2.w, r1.w
mul r2.xyz, r1.xyzx, r2.wwww
add o0.xyzw, r0.xyzw, r2.xyzw
ret 
// Approximately 52 instruction slots used
