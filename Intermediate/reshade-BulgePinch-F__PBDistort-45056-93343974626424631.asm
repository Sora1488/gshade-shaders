//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texColorBuffer               texture  float4          2d             t4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t4.xyzw, s1
sample_l_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div r1.x, r1.x, r1.y
mad r1.yz, v1.xxyx, l(0.000000, 1.777778, 1.000000, 0.000000), l(0.000000, -0.222222, 0.000000, 0.000000)
add r1.yz, r1.yyzy, l(0.000000, -0.222222, -0.250000, 0.000000)
dp2 r1.w, r1.yzyy, r1.yzyy
sqrt r1.w, r1.w
add r2.x, r1.w, r1.w
log r2.x, r2.x
mul r2.x, r2.x, l(0.625000)
exp r2.x, r2.x
mul r2.x, r2.x, l(0.500000)
div r2.x, r2.x, r1.w
mad r2.y, -r1.w, l(2.000000), l(1.000000)
add r2.x, r2.x, l(-1.000000)
mad r2.x, r2.y, r2.x, l(1.000000)
mad r2.xy, r1.yzyy, r2.xxxx, l(0.444444, 0.250000, 0.000000, 0.000000)
mul r2.z, r2.x, l(0.562500)
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r2.zyzz, t2.yxzw, s0, l(0.000000)
mad r1.z, -r1.y, l(999.000000), l(1000.000000)
div r1.y, r1.y, r1.z
ge r1.z, r1.y, l(0.000000)
ge r1.y, l(1.000000), r1.y
and r1.y, r1.y, r1.z
ge r1.z, l(0.500000), r1.w
and r1.y, r1.y, r1.z
if_nz r1.y
  mul r2.w, r2.x, l(0.562500)
  sample_indexable(texture2d)(float,float,float,float) o0.xyzw, r2.wyww, t4.xyzw, s1
else 
  mov o0.xyzw, r0.xyzw
endif 
lt r1.x, r1.x, l(0.000000)
if_nz r1.x
  mov o0.xyzw, r0.xyzw
endif 
ret 
// Approximately 38 instruction slots used
