//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
mul r0.zw, r0.xxxy, l(0.000000, 0.000000, 1.777778, 1.000000)
dp2 r0.z, r0.zwzz, r0.zwzz
add r0.z, r0.z, l(1.000000)
mul r0.z, r0.z, r0.z
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
add r0.z, -r0.z, l(1.000000)
mul r0.xy, r0.xyxx, r0.zzzz
mul r0.xy, r0.xyxx, l(-0.000368, -0.000655, 0.000000, 0.000000)
mov r1.xyz, l(0,0,0,0)
mov r0.z, l(0)
loop 
  ge r0.w, r0.z, l(24.000000)
  breakc_nz r0.w
  mad r2.xyzw, r0.zzzz, l(0.250000, 0.250000, 0.250000, -1.043478), l(-3.000000, -2.000000, -4.000000, 12.000000)
  mad_sat r2.xyz, |r2.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
  mad r3.xy, r2.wwww, r0.xyxx, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t0.xyzw, s0, l(0.000000)
  mad r1.xyz, r3.xyzx, r2.xyzx, r1.xyzx
  add r0.z, r0.z, l(1.000000)
endloop 
mul o0.xyz, r1.xyzx, l(0.083333, 0.083333, 0.083333, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 24 instruction slots used
