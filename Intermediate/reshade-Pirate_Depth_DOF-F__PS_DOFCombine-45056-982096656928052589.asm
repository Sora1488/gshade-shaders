//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool DOF_USE_AUTO_FOCUS;           // Offset:    0 Size:     4 [unused]
//   float DOF_RADIUS;                  // Offset:    4 Size:     4 [unused]
//   float DOF_NEAR_STRENGTH;           // Offset:    8 Size:     4 [unused]
//   float DOF_FAR_STRENGTH;            // Offset:   12 Size:     4 [unused]
//   float DOF_FOCAL_RANGE;             // Offset:   16 Size:     4 [unused]
//   float DOF_FOCAL_CURVE;             // Offset:   20 Size:     4 [unused]
//   float DOF_HYPERFOCAL;              // Offset:   24 Size:     4 [unused]
//   float DOF_BLEND;                   // Offset:   28 Size:     4
//   float DOF_BOKEH_CONTRAST;          // Offset:   32 Size:     4 [unused]
//   float DOF_BOKEH_BIAS;              // Offset:   36 Size:     4 [unused]
//   float DOF_MANUAL_FOCUS;            // Offset:   40 Size:     4 [unused]
//   float DOF_FOCUS_X;                 // Offset:   44 Size:     4 [unused]
//   float DOF_FOCUS_Y;                 // Offset:   48 Size:     4 [unused]
//   float DOF_FOCUS_SPREAD;            // Offset:   52 Size:     4 [unused]
//   float DOF_FOCUS_SPEED;             // Offset:   56 Size:     4 [unused]
//   float DOF_SCRATCHES_STRENGTH;      // Offset:   60 Size:     4 [unused]
//   int DOF_DEBUG;                     // Offset:   64 Size:     4
//   int LUMA_MODE;                     // Offset:   68 Size:     4 [unused]
//   int FOV;                           // Offset:   72 Size:     4 [unused]
//   float Frametime;                   // Offset:   76 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__TexFocus                     texture  float4          2d            t10      1 
// __V__TexDOF1                      texture  float4          2d            t12      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t10.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
eq r2.x, r0.x, l(0.000000)
if_nz r2.x
  mov o0.xyzw, r1.xyzw
else 
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t12.xyzw, s0
  div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[1].w
  mul_sat r3.x, r0.x, r3.x
  mad r3.y, r3.x, l(-2.000000), l(3.000000)
  mul r3.x, r3.x, r3.x
  mul r3.x, r3.x, r3.y
  add r2.xyzw, -r1.xyzw, r2.xyzw
  mad o0.xyzw, r3.xxxx, r2.xyzw, r1.xyzw
endif 
if_nz cb0[4].x
  mov o0.xyzw, r0.xyzw
endif 
ret 
// Approximately 19 instruction slots used
