//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float UI_TEMPORAL_FILTER_STRENGTH; // Offset:    0 Size:     4
//   float UI_CLAMP_STRENGTH;           // Offset:    4 Size:     4
//   float UI_PRESHARP;                 // Offset:    8 Size:     4
//   bool UI_USE_CUBIC_HISTORY;         // Offset:   12 Size:     4
//   int UI_COLOR_FORMAT;               // Offset:   16 Size:     4
//   int UI_CLAMP_PATTERN;              // Offset:   20 Size:     4
//   int UI_CLAMP_TYPE;                 // Offset:   24 Size:     4
//   float frametime;                   // Offset:   28 Size:     4
//   int framecount;                    // Offset:   32 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__texInCurBackup               texture  float4          2d             t6      1 
// __V__texExpColorBackup            texture  float4          2d            t10      1 
// __V__texMotionVectors             texture  float4          2d            t14      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 17
dcl_indexableTemp x0[8], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t6.xyzw, s0
switch cb0[1].x
  case l(1)
  dp3 r1.x, r0.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
  dp2 r1.y, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp3 r1.z, r0.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
  break 
  case l(2)
  dp3 r1.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
  add r2.xy, r0.zxzz, -r1.xxxx
  mul r1.yz, r2.xxyx, l(0.000000, 0.565000, 0.713000, 0.000000)
  break 
  default 
  mov r1.xyz, r0.xyzx
  break 
endswitch 
mov x0[4].xy, l(0,0,0,0)
mov x0[5].xy, l(0,0,0,0)
mov x0[6].xy, l(0,0,0,0)
mov x0[7].xy, l(0,0,0,0)
add r2.xyzw, v1.xyxy, l(0.000000, 0.000926, 0.000000, -0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xyxx, t6.xyzw, s0, l(0.000000)
mov x0[0].xy, r3.xyxx
ge r2.x, r3.w, l(1.000000)
min r2.y, r3.w, l(1.000000)
switch cb0[1].x
  case l(1)
  dp3 r4.x, r3.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
  dp2 r4.y, r3.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp3 r4.z, r3.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
  break 
  case l(2)
  dp3 r4.x, r3.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
  add r5.xy, r3.zxzz, -r4.xxxx
  mul r4.yz, r5.xxyx, l(0.000000, 0.565000, 0.713000, 0.000000)
  break 
  default 
  mov r4.xyz, r3.xyzx
  break 
endswitch 
min r5.xyz, r1.xyzx, r4.xyzx
max r4.xyz, r1.xyzx, r4.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.zwzz, t6.xyzw, s0, l(0.000000)
mov x0[1].xy, r6.xyxx
lt r0.w, r6.w, r2.y
mov r7.xz, l(1,0,2,0)
mov r7.y, r6.w
movc r2.xy, r0.wwww, r7.xyxx, r2.xyxx
switch cb0[1].x
  case l(1)
  dp3 r8.x, r6.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
  dp2 r8.y, r6.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp3 r8.z, r6.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
  break 
  case l(2)
  dp3 r8.x, r6.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
  add r2.zw, r6.zzzx, -r8.xxxx
  mul r8.yz, r2.zzwz, l(0.000000, 0.565000, 0.713000, 0.000000)
  break 
  default 
  mov r8.xyz, r6.xyzx
  break 
endswitch 
min r5.xyz, r5.xyzx, r8.xyzx
max r4.xyz, r4.xyzx, r8.xyzx
add r8.xyzw, v1.xyxy, l(0.000521, 0.000000, -0.000521, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t6.xyzw, s0, l(0.000000)
mov x0[2].xy, r9.xyxx
lt r0.w, r9.w, r2.y
mov r7.w, r9.w
movc r2.xy, r0.wwww, r7.zwzz, r2.xyxx
switch cb0[1].x
  case l(1)
  dp3 r7.x, r9.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
  dp2 r7.y, r9.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp3 r7.z, r9.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
  break 
  case l(2)
  dp3 r7.x, r9.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
  add r2.zw, -r7.xxxx, r9.zzzx
  mul r7.yz, r2.zzwz, l(0.000000, 0.565000, 0.713000, 0.000000)
  break 
  default 
  mov r7.xyz, r9.xyzx
  break 
endswitch 
min r5.xyz, r5.xyzx, r7.xyzx
max r4.xyz, r4.xyzx, r7.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r8.zwzz, t6.xyzw, s0, l(0.000000)
mov x0[3].xy, r7.xyxx
lt r0.w, r7.w, r2.y
mov r8.x, l(3)
mov r8.y, r7.w
movc r2.xy, r0.wwww, r8.xyxx, r2.xyxx
switch cb0[1].x
  case l(1)
  dp3 r8.x, r7.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
  dp2 r8.y, r7.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  dp3 r8.z, r7.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
  break 
  case l(2)
  dp3 r8.x, r7.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
  add r2.zw, r7.zzzx, -r8.xxxx
  mul r8.yz, r2.zzwz, l(0.000000, 0.565000, 0.713000, 0.000000)
  break 
  default 
  mov r8.xyz, r7.xyzx
  break 
endswitch 
min r5.xyz, r5.xyzx, r8.xyzx
max r4.xyz, r4.xyzx, r8.xyzx
if_nz cb0[1].y
  add r8.xyzw, v1.xyxy, l(-0.000521, -0.000926, 0.000521, -0.000926)
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r8.xyxx, t6.xyzw, s0, l(0.000000)
  mov x0[4].xy, r10.xyxx
  lt r0.w, r10.w, r2.y
  mov r11.xz, l(4,0,5,0)
  mov r11.y, r10.w
  movc r2.yz, r0.wwww, r11.xxyx, r2.xxyx
  switch cb0[1].x
    case l(1)
    dp3 r12.x, r10.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
    dp2 r12.y, r10.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    dp3 r12.z, r10.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
    mov r10.xyz, r12.xyzx
    break 
    case l(2)
    dp3 r12.x, r10.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
    add r8.xy, r10.zxzz, -r12.xxxx
    mul r12.yz, r8.xxyx, l(0.000000, 0.565000, 0.713000, 0.000000)
    mov r10.xyz, r12.xyzx
    break 
    default 
    break 
  endswitch 
  min r12.xyz, r1.xyzx, r10.xyzx
  max r1.xyz, r1.xyzx, r10.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.zwzz, t6.xyzw, s0, l(0.000000)
  mov x0[5].xy, r8.xyxx
  lt r0.w, r8.w, r2.z
  mov r11.w, r8.w
  movc r2.yz, r0.wwww, r11.zzwz, r2.yyzy
  switch cb0[1].x
    case l(1)
    dp3 r10.x, r8.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
    dp2 r10.y, r8.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    dp3 r10.z, r8.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
    mov r8.xyz, r10.xyzx
    break 
    case l(2)
    dp3 r10.x, r8.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
    add r11.xy, r8.zxzz, -r10.xxxx
    mul r10.yz, r11.xxyx, l(0.000000, 0.565000, 0.713000, 0.000000)
    mov r8.xyz, r10.xyzx
    break 
    default 
    break 
  endswitch 
  min r10.xyz, r12.xyzx, r8.xyzx
  max r1.xyz, r1.xyzx, r8.xyzx
  add r8.xyzw, v1.xyxy, l(0.000521, 0.000926, -0.000521, 0.000926)
  sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, r8.xyxx, t6.xyzw, s0, l(0.000000)
  mov x0[6].xy, r11.xyxx
  lt r0.w, r11.w, r2.z
  mov r8.x, l(6)
  mov r8.y, r11.w
  movc r2.yz, r0.wwww, r8.xxyx, r2.yyzy
  switch cb0[1].x
    case l(1)
    dp3 r12.x, r11.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
    dp2 r12.y, r11.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    dp3 r12.z, r11.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
    mov r11.xyz, r12.xyzx
    break 
    case l(2)
    dp3 r12.x, r11.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
    add r8.xy, r11.zxzz, -r12.xxxx
    mul r12.yz, r8.xxyx, l(0.000000, 0.565000, 0.713000, 0.000000)
    mov r11.xyz, r12.xyzx
    break 
    default 
    break 
  endswitch 
  min r10.xyz, r10.xyzx, r11.xyzx
  max r1.xyz, r1.xyzx, r11.xyzx
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.zwzz, t6.xyzw, s0, l(0.000000)
  mov x0[7].xy, r8.xyxx
  lt r0.w, r8.w, r2.z
  movc r2.x, r0.w, l(7), r2.y
  switch cb0[1].x
    case l(1)
    dp3 r11.x, r8.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
    dp2 r11.y, r8.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    dp3 r11.z, r8.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
    mov r8.xyz, r11.xyzx
    break 
    case l(2)
    dp3 r11.x, r8.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
    add r2.yz, r8.zzxz, -r11.xxxx
    mul r11.yz, r2.yyzy, l(0.000000, 0.565000, 0.713000, 0.000000)
    mov r8.xyz, r11.xyzx
    break 
    default 
    break 
  endswitch 
  min r2.yzw, r10.xxyz, r8.xxyz
  max r1.xyz, r1.xyzx, r8.xyzx
  min r2.yzw, r2.yyzw, r5.xxyz
  max r1.xyz, r1.xyzx, r4.xyzx
  add r2.yzw, r2.yyzw, r5.xxyz
  mul r2.yzw, r2.yyzw, l(0.000000, 0.500000, 0.500000, 0.500000)
  add r1.xyz, r1.xyzx, r4.xyzx
  mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
else 
  mov r2.yzw, r5.xxyz
  mov r1.xyz, r4.xyzx
endif 
ine r0.w, r2.x, l(-1)
if_nz r0.w
  mov r8.xy, x0[r2.x + 0].xyxx
  mad r8.xy, r8.xyxx, l(0.000521, 0.000926, 0.000000, 0.000000), v1.xyxx
  sample_indexable(texture2d)(float,float,float,float) r8.xy, r8.xyxx, t14.xyzw, s1
else 
  mov r8.xy, l(0,0,0,0)
endif 
mul r0.w, cb0[1].w, l(0.048000)
add r8.xy, r8.xyxx, v1.xyxx
if_nz cb0[0].w
  resinfo_indexable(texture2d)(float,float,float,float) r8.zw, l(0), t10.zwxy
  mad r10.xy, r8.xyxx, r8.zwzz, l(-0.500000, -0.500000, 0.000000, 0.000000)
  round_ni r10.xy, r10.xyxx
  add r11.xyzw, r10.xyxy, l(0.500000, 0.500000, -0.500000, -0.500000)
  mad r12.xyzw, r8.xyxy, r8.zwzw, -r11.xyxy
  mad r13.xyzw, -r12.zwzw, l(0.500000, 0.500000, 1.500000, 1.500000), l(1.000000, 1.000000, 2.000000, 2.000000)
  mad r13.xyzw, r12.zwzw, r13.xyzw, l(-0.500000, -0.500000, 0.500000, 0.500000)
  mul r14.xyzw, r12.zwzw, r12.zwzw
  mad r15.xyzw, r12.zwzw, l(1.500000, 1.500000, 0.500000, 0.500000), l(-2.500000, -2.500000, -0.500000, -0.500000)
  mul r10.zw, r14.zzzw, r15.zzzw
  mad r14.xy, r14.xyxx, r15.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r15.xyzw, r12.xyzw, r13.xyzw
  mad r12.xy, r12.zwzz, r13.zwzz, r14.xyxx
  div r12.zw, r15.zzzw, r12.xxxy
  add r10.xy, r10.xyxx, l(2.500000, 2.500000, 0.000000, 0.000000)
  add r11.xy, r11.xyxx, r12.zwzz
  div r14.xy, r10.xyxx, r8.zwzz
  div r13.xyzw, r11.zyxw, r8.zwzw
  sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r13.xwxx, t10.xyzw, s0
  mul r11.xyzw, r15.xxxx, r11.xyzw
  sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r13.zwzz, t10.xyzw, s0
  mul r16.xyzw, r12.xxxx, r16.xyzw
  mul r16.xyzw, r15.yyyy, r16.xyzw
  mad r11.xyzw, r11.xyzw, r15.yyyy, r16.xyzw
  mov r14.zw, r13.wwwy
  sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r14.xzxx, t10.xyzw, s0
  mul r16.xyzw, r10.zzzz, r16.xyzw
  mad r11.xyzw, r16.xyzw, r15.yyyy, r11.xyzw
  sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r13.xyxx, t10.xyzw, s0
  mul r16.xyzw, r15.xxxx, r16.xyzw
  mad r11.xyzw, r16.xyzw, r12.yyyy, r11.xyzw
  sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r13.zyzz, t10.xyzw, s0
  mul r16.xyzw, r12.xxxx, r16.xyzw
  mad r11.xyzw, r16.xyzw, r12.yyyy, r11.xyzw
  sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r14.xwxx, t10.xyzw, s0
  mul r16.xyzw, r10.zzzz, r16.xyzw
  mad r11.xyzw, r16.xyzw, r12.yyyy, r11.xyzw
  mov r13.y, r14.y
  sample_indexable(texture2d)(float,float,float,float) r16.xyzw, r13.xyxx, t10.xyzw, s0
  mul r15.xyzw, r15.xxxx, r16.xyzw
  mad r11.xyzw, r15.xyzw, r10.wwww, r11.xyzw
  sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r13.zyzz, t10.xyzw, s0
  mul r12.xyzw, r12.xxxx, r13.xyzw
  mad r11.xyzw, r12.xyzw, r10.wwww, r11.xyzw
  sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r14.xyxx, t10.xyzw, s0
  mul r12.xyzw, r10.zzzz, r12.xyzw
  mad r10.xyzw, r12.xyzw, r10.wwww, r11.xyzw
else 
  sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r8.xyxx, t10.xyzw, s0, l(0.000000)
endif 
add r1.w, cb0[0].z, l(0.100000)
mul_sat r1.w, r1.w, l(5.000000)
switch cb0[1].x
  case l(1)
  dp3 r8.x, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  dp2 r8.y, r5.xzxx, l(1.000000, -1.000000, 0.000000, 0.000000)
  dp3 r8.z, r5.xzyx, l(-1.000000, -1.000000, 1.000000, 0.000000)
  mov r5.xyz, r8.xyzx
  break 
  case l(2)
  mad r2.x, -r5.y, l(0.344000), r5.x
  mad r8.y, -r5.z, l(0.714000), r2.x
  mad r8.xz, r5.zzyz, l(1.403000, 0.000000, 1.770000, 0.000000), r5.xxxx
  mov r5.xyz, r8.xyzx
  break 
  default 
  break 
endswitch 
switch cb0[1].x
  case l(1)
  dp3 r8.x, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  dp2 r8.y, r4.xzxx, l(1.000000, -1.000000, 0.000000, 0.000000)
  dp3 r8.z, r4.xzyx, l(-1.000000, -1.000000, 1.000000, 0.000000)
  mov r4.xyz, r8.xyzx
  break 
  case l(2)
  mad r2.x, -r4.y, l(0.344000), r4.x
  mad r8.y, -r4.z, l(0.714000), r2.x
  mad r8.xz, r4.zzyz, l(1.403000, 0.000000, 1.770000, 0.000000), r4.xxxx
  mov r4.xyz, r8.xyzx
  break 
  default 
  break 
endswitch 
add r8.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
min r5.xyz, r5.xyzx, r8.xyzx
rcp r4.xyz, r4.xyzx
mul_sat r4.xyz, r4.xyzx, r5.xyzx
rsq r4.xyz, r4.xyzx
mad r2.x, r1.w, l(-3.000000), l(8.000000)
mul r4.xyz, r2.xxxx, r4.xyzx
rcp r4.xyz, r4.xyzx
mad r5.xyz, r4.xyzx, l(-4.000000, -4.000000, -4.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
rcp r5.xyz, r5.xyzx
add r3.xyz, r3.xyzx, r6.xyzx
add r6.xyz, r7.xyzx, r9.xyzx
add r3.xyz, r3.xyzx, r6.xyzx
mad r3.xyz, r3.xyzx, -r4.xyzx, r0.xyzx
mul_sat r3.xyz, r5.xyzx, r3.xyzx
add r3.xyz, -r0.xyzx, r3.xyzx
mad r0.xyz, r1.wwww, r3.xyzx, r0.xyzx
mul r1.w, r10.w, cb0[0].y
mul_sat r1.w, r1.w, cb0[0].x
sqrt r2.x, cb0[0].x
mad r2.x, r2.x, l(-0.490000), l(0.500000)
mul r3.x, r0.w, r2.x
mad r0.w, -r2.x, r0.w, l(0.500000)
mad_sat r0.w, r1.w, r0.w, r3.x
add r0.xyz, -r10.xyzx, r0.xyzx
mad r0.xyz, r0.wwww, r0.xyzx, r10.xyzx
ieq r0.w, cb0[1].z, l(2)
if_nz r0.w
  mov o0.xyz, r0.xyzx
  mov o0.w, l(0)
  ret 
endif 
switch cb0[1].z
  case l(0)
  switch cb0[1].x
    case l(1)
    dp3 r3.x, r0.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
    dp2 r3.y, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    dp3 r3.z, r0.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
    mov r0.xyz, r3.xyzx
    break 
    case l(2)
    dp3 r3.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
    add r4.xy, r0.zxzz, -r3.xxxx
    mul r3.yz, r4.xxyx, l(0.000000, 0.565000, 0.713000, 0.000000)
    mov r0.xyz, r3.xyzx
    break 
    default 
    break 
  endswitch 
  max r3.xyz, r2.yzwy, r0.xyzx
  min r0.xyz, r1.xyzx, r3.xyzx
  break 
  case l(1)
  switch cb0[1].x
    case l(1)
    dp3 r3.x, r0.xyzx, l(0.250000, 0.500000, -0.250000, 0.000000)
    dp2 r3.y, r0.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    dp3 r3.z, r0.xyzx, l(0.250000, -0.500000, -0.250000, 0.000000)
    mov r0.xyz, r3.xyzx
    break 
    case l(2)
    dp3 r3.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
    add r4.xy, r0.zxzz, -r3.xxxx
    mul r3.yz, r4.xxyx, l(0.000000, 0.565000, 0.713000, 0.000000)
    mov r0.xyz, r3.xyzx
    break 
    default 
    break 
  endswitch 
  max r2.xyz, r2.yzwy, r0.xyzx
  min r0.xyz, r1.xyzx, r2.xyzx
  break 
  default 
  break 
endswitch 
switch cb0[1].x
  case l(1)
  dp3 r1.x, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  dp2 r1.y, r0.xzxx, l(1.000000, -1.000000, 0.000000, 0.000000)
  dp3 r1.z, r0.xzyx, l(-1.000000, -1.000000, 1.000000, 0.000000)
  break 
  case l(2)
  mad r0.w, -r0.y, l(0.344000), r0.x
  mad r1.y, -r0.z, l(0.714000), r0.w
  mad r1.xz, r0.zzyz, l(1.403000, 0.000000, 1.770000, 0.000000), r0.xxxx
  break 
  default 
  mov r1.xyz, r0.xyzx
  break 
endswitch 
mov o0.xyz, r1.xyzx
add r0.xyz, -r10.xyzx, r0.xyzx
dp3 r0.x, r0.xyzx, r0.xyzx
sqrt r0.x, r0.x
add r0.x, r10.w, r0.x
mul o0.w, r0.x, l(0.500000)
ret 
// Approximately 410 instruction slots used
