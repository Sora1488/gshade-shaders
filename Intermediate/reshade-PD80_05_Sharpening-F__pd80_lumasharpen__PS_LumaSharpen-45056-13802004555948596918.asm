//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__pd80_lumasharpen__texGaussian    texture  float4          2d             t6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t6.xyzw, s0
add_sat r1.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t0.xyzw, s0
add_sat r1.xyz, r1.xyzx, r2.xyzx
add r1.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.xyz, r1.xyzx, l(1.700000, 1.700000, 1.700000, 0.000000)
min r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add_sat r0.xyz, -r0.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, l(1.700000, 1.700000, 1.700000, 0.000000)
min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyz, -r1.xyzx, r0.xyzx
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.xyz, r0.xyzx, l(0.030000, 0.030000, 0.030000, 0.000000)
add r0.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, -r1.xyzx, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
dp3 r0.x, r0.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
dp3 r0.y, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
add r0.x, -r0.y, r0.x
add r0.xyz, r0.xxxx, r2.xyzx
min r0.w, r0.y, r0.x
min r0.w, r0.z, r0.w
lt r1.x, r0.w, l(0.000000)
dp3 r1.y, r0.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
add r2.xyz, r0.xyzx, -r1.yyyy
mul r2.xyz, r1.yyyy, r2.xyzx
add r0.w, -r0.w, r1.y
div r2.xyz, r2.xyzx, r0.wwww
add r2.xyz, r1.yyyy, r2.xyzx
movc r1.xzw, r1.xxxx, r2.xxyz, r0.xxyz
add r2.xyz, -r1.yyyy, r1.xzwx
add r0.w, -r1.y, l(1.000000)
mul r2.xyz, r0.wwww, r2.xyzx
max r0.x, r0.y, r0.x
max r0.x, r0.z, r0.x
add r0.y, -r1.y, r0.x
lt r0.x, l(1.000000), r0.x
div r0.yzw, r2.xxyz, r0.yyyy
add r0.yzw, r0.yyzw, r1.yyyy
movc o0.xyz, r0.xxxx, r0.yzwy, r1.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 42 instruction slots used
