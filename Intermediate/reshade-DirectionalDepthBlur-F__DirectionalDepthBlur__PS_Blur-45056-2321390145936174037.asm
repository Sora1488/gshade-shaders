//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__DirectionalDepthBlur__texDownsampledBackBuffer    texture  float4          2d             t4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   x           2     NONE   float   x   
// TEXCOORD                 3    y          2     NONE   float    y  
// TEXCOORD                 4     z         2     NONE   float       
// TEXCOORD                 5   xyzw        3     NONE   float   xy  
// TEXCOORD                 6   xy          4     NONE   float       
// TEXCOORD                 8     zw        4     NONE   float       
// TEXCOORD                 7   xy          5     NONE   float       
// TEXCOORD                 9     z         5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.x
dcl_input_ps linear v2.y
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 7
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, v3.xyxx, t4.xyzw, s1, l(0.000000)
max r1.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r1.xyz, r1.xyzx, l(1.490000, 1.490000, 1.490000, 0.000000)
add r1.xyz, -r1.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
div r1.xyz, r0.xyzx, r1.xyzx
dp3 r0.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
eq r1.w, v2.x, l(0.000000)
and r1.w, r1.w, l(0x3f800000)
add r1.w, r1.w, v2.x
mov r2.xyz, r0.xyzx
mov r3.xyz, r1.xyzx
mov r2.w, l(1.000000)
mov r3.w, r0.w
mov r4.xy, l(0,0,0,0)
loop 
  ge r4.z, r4.y, v2.x
  breakc_nz r4.z
  mad r4.zw, v1.zzzw, r4.yyyy, v1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r4.zwzz, t4.xyzw, s1, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r4.z, r4.zwzz, t2.yzxw, s0, l(0.000000)
  mad r4.w, -r4.z, l(999.000000), l(1000.000000)
  div r4.z, r4.z, r4.w
  ge r4.z, v2.y, r4.z
  div r4.w, r4.y, r1.w
  add r4.w, -r4.w, l(1.000000)
  movc r4.z, r4.z, l(0), r4.w
  mad r2.xyz, r5.xyzx, r4.zzzz, r2.xyzx
  add r2.w, r2.w, r4.z
  max r6.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r6.xyz, r6.xyzx, l(1.490000, 1.490000, 1.490000, 0.000000)
  add r6.xyz, -r6.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
  div r5.xyz, r5.xyzx, r6.xyzx
  mad r3.xyz, r5.xyzx, r4.zzzz, r3.xyzx
  dp3_sat r4.w, r5.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
  lt r4.z, l(0.000000), r4.z
  max r4.w, r3.w, r4.w
  movc r3.w, r4.z, r4.w, r3.w
  add r4.y, r4.y, l(2.000000)
  mov r4.x, l(1.000000)
endloop 
mov o0.w, r4.x
eq r0.x, r2.w, l(0.000000)
and r0.x, r0.x, l(0x3f800000)
add r0.x, r0.x, r2.w
div r0.yzw, r2.xxyz, r0.xxxx
mov_sat r3.w, r3.w
div r1.xyz, r3.xyzx, r0.xxxx
dp3 r0.x, r0.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r2.xyz, r1.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xyz, r2.xyzx, r1.xyzx
add_sat r0.x, -r0.x, r3.w
add r0.x, r0.x, l(1.000000)
mul r1.xyz, r0.xxxx, r1.xyzx
mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad o0.xyz, r0.yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), r1.xyzx
ret 
// Approximately 57 instruction slots used
