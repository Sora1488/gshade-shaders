//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   uint FRAME_COUNT;                  // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__FeatureCurr                  texture  float4          2d             t8      1 
// __V__MotionTexCur1                texture  float4          2d            t26      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t26
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
and r0.x, cb0[0].x, l(15)
utof r0.x, r0.x
mul r0.x, r0.x, l(0.618034)
frc r0.x, r0.x
mul r0.x, r0.x, l(1.570796)
sincos r1.x, r2.x, r0.x
sincos r2.y, null, -r0.x
mov r2.z, r1.x
mul r0.xyz, r2.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r0.w, v1.xyxx, t8.xzwy, s0, l(0.000000)
mov r1.xyzw, l(0,0,0,0)
mov r2.xy, l(0.000001,-1,0,0)
loop 
  ilt r2.z, l(1), r2.y
  breakc_nz r2.z
  itof r3.x, r2.y
  imax r2.z, -r2.y, r2.y
  dp3 r2.z, l(1.000000, 0.850000, 0.650000, 0.000000), icb[r2.z + 0].xyzx
  mov r4.xyzw, r1.xyzw
  mov r2.w, r2.x
  mov r3.z, l(-1)
  loop 
    ilt r3.w, l(1), r3.z
    breakc_nz r3.w
    itof r3.y, r3.z
    dp2 r5.x, r3.xyxx, r0.xzxx
    dp2 r5.y, r3.yxyy, r0.xyxx
    mad r3.yw, r5.xxxy, l(0.000000, 0.001042, 0.000000, 0.001852), v1.xxxy
    sample_l_aoffimmi_indexable(1,0,0)(texture2d)(float,float,float,float) r5.x, r3.ywyy, t8.yxzw, s0, l(0.000000)
    sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r6.xyzw, r3.ywyy, t26.xyzw, s0, l(0.000000)
    add r3.y, -r0.w, r5.x
    mad_sat r5.xy, -r6.wzww, l(4.000000, 128.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
    dp2 r3.w, r6.xyxx, r6.xyxx
    mad r3.y, |r3.y|, l(4.000000), r5.x
    mad r3.y, r3.w, l(4.000000), r3.y
    add r3.y, r5.y, r3.y
    exp r3.y, -r3.y
    mul r3.y, r2.z, r3.y
    imax r3.w, -r3.z, r3.z
    dp3 r3.w, l(1.000000, 0.850000, 0.650000, 0.000000), icb[r3.w + 0].xyzx
    mul r5.x, r3.w, r3.y
    mad r4.xyzw, r6.xyzw, r5.xxxx, r4.xyzw
    mad r2.w, r3.y, r3.w, r2.w
    iadd r3.z, r3.z, l(1)
  endloop 
  mov r1.xyzw, r4.xyzw
  mov r2.x, r2.w
  iadd r2.y, r2.y, l(1)
endloop 
div o0.xyzw, r1.xyzw, r2.xxxx
ret 
// Approximately 51 instruction slots used
