//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Intensity;                   // Offset:    0 Size:     4 [unused]
//   float K;                           // Offset:    4 Size:     4
//   float Saturation;                  // Offset:    8 Size:     4 [unused]
//   float Threshold;                   // Offset:   12 Size:     4 [unused]
//   float SoftKnee;                    // Offset:   16 Size:     4 [unused]
//   float Gamma;                       // Offset:   20 Size:     4 [unused]
//   int Performance;                   // Offset:   24 Size:     4
//   bool Debug;                        // Offset:   28 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__Bessel_Bloom__Blur1          texture  float4          2d             t4      1 
// V__Bessel_Bloom__wBlur0               UAV  float4          2d             u0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t4
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_input vThreadID.xy
dcl_temps 9
dcl_indexableTemp x0[3], 4
dcl_indexableTemp x1[3], 4
dcl_indexableTemp x2[3], 4
dcl_indexableTemp x3[3], 4
dcl_indexableTemp x4[3], 4
dcl_indexableTemp x5[3], 4
dcl_indexableTemp x6[3], 4
dcl_indexableTemp x7[3], 4
dcl_thread_group 64, 1, 1
switch cb0[1].z
  case l(0)
  mul r0.xy, cb0[0].yyyy, l(0.250000, 0.750000, 0.000000, 0.000000)
  ishl r0.z, vThreadID.y, l(8)
  utof r1.x, vThreadID.x
  utof r1.y, r0.z
  mad r0.z, r0.x, r0.x, r0.y
  add r0.z, r0.z, l(3.000000)
  div r2.xyz, l(3.000000, 6.000000, 3.000000, 0.000000), r0.zzzz
  mul r0.w, r0.x, cb0[0].y
  mad r3.x, r0.w, l(0.500000), l(-6.000000)
  mad r0.x, -r0.x, r0.x, r0.y
  add r3.y, r0.x, l(-3.000000)
  div r0.xy, r3.xyxx, r0.zzzz
  add r3.xyzw, r1.xyxy, l(0.500000, 0.500000, 0.500000, -63.500000)
  max r0.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.zw, r0.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
  ftoi r4.xy, r0.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyzw, t4.xyzw
  mul r0.z, r4.w, l(3.000000)
  exp r0.z, -r0.z
  mul r1.yzw, r0.zzzz, r4.xxyz
  mov x1[0].x, r1.y
  mov x1[1].xy, r1.zzzz
  mov x1[2].xy, r1.wwww
  mov x1[0].y, r1.y
  mov x0[0].xy, r1.yyyy
  mov x0[1].xy, r1.zzzz
  mov x0[2].xy, r1.wwww
  ftoi r4.x, r3.x
  add r1.x, r1.x, l(0.500000)
  mov r5.zw, l(0,0,0,0)
  mov r0.z, l(-63)
  loop 
    ige r0.w, r0.z, l(256)
    breakc_nz r0.w
    itof r0.w, r0.z
    add r1.y, r0.w, r3.y
    max r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r1.zw, r1.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
    ftoi r5.xy, r1.zwzz
    ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyzw, t4.xyzw
    mul r0.w, r6.w, l(3.000000)
    exp r0.w, -r0.w
    mul r6.xyz, r0.wwww, r6.zxyz
    mov r6.w, x0[0].x
    mov r7.z, x0[0].y
    mov x0[0].xy, r6.ywyy
    mov r7.xy, r6.ywyy
    dp3 r0.w, r7.xyzx, r2.xyzx
    mov r1.zw, x1[0].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r7.x, r0.w, r1.z
    mov r7.y, x1[0].x
    mov x1[0].xy, r7.xyxx
    mov r8.y, x0[1].x
    mov r8.z, x0[1].y
    mov r8.x, r6.z
    mov x0[1].xy, r8.xyxx
    dp3 r0.w, r8.xyzx, r2.xyzx
    mov r1.zw, x1[1].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r5.x, r0.w, r1.z
    mov r5.y, x1[1].x
    mov x1[1].xy, r5.xyxx
    mov r6.y, x0[2].x
    mov r6.z, x0[2].y
    mov x0[2].xy, r6.xyxx
    dp3 r0.w, r6.xyzx, r2.xyzx
    mov r1.zw, x1[2].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r6.x, r0.w, r1.z
    mov r6.y, x1[2].x
    mov x1[2].xy, r6.xyxx
    ige r0.w, r0.z, l(0)
    if_nz r0.w
      ftoi r4.yzw, r1.yyyy
      rcp r0.w, r7.x
      rcp r1.y, r5.x
      rcp r1.z, r6.x
      min r0.w, r0.w, r1.y
      min r0.w, r1.z, r0.w
      lt r0.w, l(8.000000), r0.w
      and r8.w, r0.w, l(0x3f800000)
      movc r0.w, r0.w, l(8.000000), l(1.000000)
      mov r7.z, r5.x
      mov r7.w, r6.x
      mul r8.xyz, r0.wwww, r7.xzwx
      store_uav_typed u0.xyzw, r4.xyzw, r8.xyzw
    endif 
    iadd r0.z, r0.z, l(1)
  endloop 
  break 
  case l(1)
  mul r0.xy, cb0[0].yyyy, l(0.500000, 1.500000, 0.000000, 0.000000)
  ishl r0.z, vThreadID.y, l(8)
  utof r1.x, vThreadID.x
  utof r1.y, r0.z
  mad r0.z, r0.x, r0.x, r0.y
  add r0.z, r0.z, l(3.000000)
  div r2.xyz, l(3.000000, 6.000000, 3.000000, 0.000000), r0.zzzz
  mad r3.x, cb0[0].y, r0.x, l(-6.000000)
  mad r0.x, -r0.x, r0.x, r0.y
  add r3.y, r0.x, l(-3.000000)
  div r0.xy, r3.xyxx, r0.zzzz
  add r3.xyzw, r1.xyxy, l(0.500000, 0.500000, 0.500000, -127.500000)
  max r0.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.zw, r0.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
  ftoi r4.xy, r0.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyzw, t4.xyzw
  mul r0.z, r4.w, l(3.000000)
  exp r0.z, -r0.z
  mul r1.yzw, r0.zzzz, r4.xxyz
  mov x3[0].x, r1.y
  mov x3[1].xy, r1.zzzz
  mov x3[2].xy, r1.wwww
  mov x3[0].y, r1.y
  mov x2[0].xy, r1.yyyy
  mov x2[1].xy, r1.zzzz
  mov x2[2].xy, r1.wwww
  ftoi r4.x, r3.x
  add r1.x, r1.x, l(0.500000)
  mov r5.zw, l(0,0,0,0)
  mov r0.z, l(-127)
  loop 
    ige r0.w, r0.z, l(256)
    breakc_nz r0.w
    itof r0.w, r0.z
    add r1.y, r0.w, r3.y
    max r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r1.zw, r1.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
    ftoi r5.xy, r1.zwzz
    ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyzw, t4.xyzw
    mul r0.w, r6.w, l(3.000000)
    exp r0.w, -r0.w
    mul r6.xyz, r0.wwww, r6.zxyz
    mov r6.w, x2[0].x
    mov r7.z, x2[0].y
    mov x2[0].xy, r6.ywyy
    mov r7.xy, r6.ywyy
    dp3 r0.w, r7.xyzx, r2.xyzx
    mov r1.zw, x3[0].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r7.x, r0.w, r1.z
    mov r7.y, x3[0].x
    mov x3[0].xy, r7.xyxx
    mov r8.y, x2[1].x
    mov r8.z, x2[1].y
    mov r8.x, r6.z
    mov x2[1].xy, r8.xyxx
    dp3 r0.w, r8.xyzx, r2.xyzx
    mov r1.zw, x3[1].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r5.x, r0.w, r1.z
    mov r5.y, x3[1].x
    mov x3[1].xy, r5.xyxx
    mov r6.y, x2[2].x
    mov r6.z, x2[2].y
    mov x2[2].xy, r6.xyxx
    dp3 r0.w, r6.xyzx, r2.xyzx
    mov r1.zw, x3[2].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r6.x, r0.w, r1.z
    mov r6.y, x3[2].x
    mov x3[2].xy, r6.xyxx
    ige r0.w, r0.z, l(0)
    if_nz r0.w
      ftoi r4.yzw, r1.yyyy
      rcp r0.w, r7.x
      rcp r1.y, r5.x
      rcp r1.z, r6.x
      min r0.w, r0.w, r1.y
      min r0.w, r1.z, r0.w
      lt r0.w, l(8.000000), r0.w
      and r8.w, r0.w, l(0x3f800000)
      movc r0.w, r0.w, l(8.000000), l(1.000000)
      mov r7.z, r5.x
      mov r7.w, r6.x
      mul r8.xyz, r0.wwww, r7.xzwx
      store_uav_typed u0.xyzw, r4.xyzw, r8.xyzw
    endif 
    iadd r0.z, r0.z, l(1)
  endloop 
  break 
  case l(3)
  add r0.x, cb0[0].y, cb0[0].y
  ishl r0.y, vThreadID.y, l(8)
  utof r1.x, vThreadID.x
  utof r1.y, r0.y
  mul r0.y, cb0[0].y, l(6.000000)
  mad r0.z, r0.x, r0.x, r0.y
  add r0.z, r0.z, l(3.000000)
  div r2.xyz, l(3.000000, 6.000000, 3.000000, 0.000000), r0.zzzz
  mul r0.w, r0.x, cb0[0].y
  mad r3.x, r0.w, l(4.000000), l(-6.000000)
  mad r0.x, -r0.x, r0.x, r0.y
  add r3.y, r0.x, l(-3.000000)
  div r0.xy, r3.xyxx, r0.zzzz
  add r3.xyzw, r1.xyxy, l(0.500000, 0.500000, 0.500000, -511.500000)
  max r0.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.zw, r0.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
  ftoi r4.xy, r0.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyzw, t4.xyzw
  mul r0.z, r4.w, l(3.000000)
  exp r0.z, -r0.z
  mul r1.yzw, r0.zzzz, r4.xxyz
  mov x5[0].x, r1.y
  mov x5[1].xy, r1.zzzz
  mov x5[2].xy, r1.wwww
  mov x5[0].y, r1.y
  mov x4[0].xy, r1.yyyy
  mov x4[1].xy, r1.zzzz
  mov x4[2].xy, r1.wwww
  ftoi r4.x, r3.x
  add r1.x, r1.x, l(0.500000)
  mov r5.zw, l(0,0,0,0)
  mov r0.z, l(-511)
  loop 
    ige r0.w, r0.z, l(256)
    breakc_nz r0.w
    itof r0.w, r0.z
    add r1.y, r0.w, r3.y
    max r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r1.zw, r1.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
    ftoi r5.xy, r1.zwzz
    ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyzw, t4.xyzw
    mul r0.w, r6.w, l(3.000000)
    exp r0.w, -r0.w
    mul r6.xyz, r0.wwww, r6.zxyz
    mov r6.w, x4[0].x
    mov r7.z, x4[0].y
    mov x4[0].xy, r6.ywyy
    mov r7.xy, r6.ywyy
    dp3 r0.w, r7.xyzx, r2.xyzx
    mov r1.zw, x5[0].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r7.x, r0.w, r1.z
    mov r7.y, x5[0].x
    mov x5[0].xy, r7.xyxx
    mov r8.y, x4[1].x
    mov r8.z, x4[1].y
    mov r8.x, r6.z
    mov x4[1].xy, r8.xyxx
    dp3 r0.w, r8.xyzx, r2.xyzx
    mov r1.zw, x5[1].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r5.x, r0.w, r1.z
    mov r5.y, x5[1].x
    mov x5[1].xy, r5.xyxx
    mov r6.y, x4[2].x
    mov r6.z, x4[2].y
    mov x4[2].xy, r6.xyxx
    dp3 r0.w, r6.xyzx, r2.xyzx
    mov r1.zw, x5[2].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r6.x, r0.w, r1.z
    mov r6.y, x5[2].x
    mov x5[2].xy, r6.xyxx
    ige r0.w, r0.z, l(0)
    if_nz r0.w
      ftoi r4.yzw, r1.yyyy
      rcp r0.w, r7.x
      rcp r1.y, r5.x
      rcp r1.z, r6.x
      min r0.w, r0.w, r1.y
      min r0.w, r1.z, r0.w
      lt r0.w, l(8.000000), r0.w
      and r8.w, r0.w, l(0x3f800000)
      movc r0.w, r0.w, l(8.000000), l(1.000000)
      mov r7.z, r5.x
      mov r7.w, r6.x
      mul r8.xyz, r0.wwww, r7.xzwx
      store_uav_typed u0.xyzw, r4.xyzw, r8.xyzw
    endif 
    iadd r0.z, r0.z, l(1)
  endloop 
  break 
  default 
  ishl r0.x, vThreadID.y, l(8)
  utof r1.x, vThreadID.x
  utof r1.y, r0.x
  mul r0.x, cb0[0].y, cb0[0].y
  mul r0.y, cb0[0].y, l(3.000000)
  mad r0.z, cb0[0].y, cb0[0].y, r0.y
  add r0.z, r0.z, l(3.000000)
  div r2.xyz, l(3.000000, 6.000000, 3.000000, 0.000000), r0.zzzz
  mad r3.x, r0.x, l(2.000000), l(-6.000000)
  mad r0.x, -cb0[0].y, cb0[0].y, r0.y
  add r3.y, r0.x, l(-3.000000)
  div r0.xy, r3.xyxx, r0.zzzz
  add r3.xyzw, r1.xyxy, l(0.500000, 0.500000, 0.500000, -255.500000)
  max r0.zw, r3.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r0.zw, r0.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
  ftoi r4.xy, r0.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyzw, t4.xyzw
  mul r0.z, r4.w, l(3.000000)
  exp r0.z, -r0.z
  mul r1.yzw, r0.zzzz, r4.xxyz
  mov x7[0].x, r1.y
  mov x7[1].xy, r1.zzzz
  mov x7[2].xy, r1.wwww
  mov x7[0].y, r1.y
  mov x6[0].xy, r1.yyyy
  mov x6[1].xy, r1.zzzz
  mov x6[2].xy, r1.wwww
  ftoi r4.x, r3.x
  add r1.x, r1.x, l(0.500000)
  mov r5.zw, l(0,0,0,0)
  mov r0.z, l(-255)
  loop 
    ige r0.w, r0.z, l(256)
    breakc_nz r0.w
    itof r0.w, r0.z
    add r1.y, r0.w, r3.y
    max r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
    min r1.zw, r1.zzzw, l(0.000000, 0.000000, 1919.000000, 1079.000000)
    ftoi r5.xy, r1.zwzz
    ld_indexable(texture2d)(float,float,float,float) r6.xyzw, r5.xyzw, t4.xyzw
    mul r0.w, r6.w, l(3.000000)
    exp r0.w, -r0.w
    mul r6.xyz, r0.wwww, r6.zxyz
    mov r6.w, x6[0].x
    mov r7.z, x6[0].y
    mov x6[0].xy, r6.ywyy
    mov r7.xy, r6.ywyy
    dp3 r0.w, r7.xyzx, r2.xyzx
    mov r1.zw, x7[0].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r7.x, r0.w, r1.z
    mov r7.y, x7[0].x
    mov x7[0].xy, r7.xyxx
    mov r8.y, x6[1].x
    mov r8.z, x6[1].y
    mov r8.x, r6.z
    mov x6[1].xy, r8.xyxx
    dp3 r0.w, r8.xyzx, r2.xyzx
    mov r1.zw, x7[1].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r5.x, r0.w, r1.z
    mov r5.y, x7[1].x
    mov x7[1].xy, r5.xyxx
    mov r6.y, x6[2].x
    mov r6.z, x6[2].y
    mov x6[2].xy, r6.xyxx
    dp3 r0.w, r6.xyzx, r2.xyzx
    mov r1.zw, x7[2].xxxy
    dp2 r1.z, r1.zwzz, r0.xyxx
    add r6.x, r0.w, r1.z
    mov r6.y, x7[2].x
    mov x7[2].xy, r6.xyxx
    ige r0.w, r0.z, l(0)
    if_nz r0.w
      ftoi r4.yzw, r1.yyyy
      rcp r0.w, r7.x
      rcp r1.y, r5.x
      rcp r1.z, r6.x
      min r0.w, r0.w, r1.y
      min r0.w, r1.z, r0.w
      lt r0.w, l(8.000000), r0.w
      and r8.w, r0.w, l(0x3f800000)
      movc r0.w, r0.w, l(8.000000), l(1.000000)
      mov r7.z, r5.x
      mov r7.w, r6.x
      mul r8.xyz, r0.wwww, r7.xzwx
      store_uav_typed u0.xyzw, r4.xyzw, r8.xyzw
    endif 
    iadd r0.z, r0.z, l(1)
  endloop 
  break 
endswitch 
ret 
// Approximately 375 instruction slots used
