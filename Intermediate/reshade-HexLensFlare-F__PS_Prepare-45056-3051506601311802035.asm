//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float uIntensity;                  // Offset:    0 Size:     4 [unused]
//   float uThreshold;                  // Offset:    4 Size:     4
//   float uScale;                      // Offset:    8 Size:     4 [unused]
//   float3 uColor0;                    // Offset:   16 Size:    12
//   float3 uColor1;                    // Offset:   32 Size:    12
//   float3 uColor2;                    // Offset:   48 Size:    12
//   float3 uColor3;                    // Offset:   64 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __srgbV__tHexLensFlare_Color      texture  float4          2d             t1      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
add r0.xyzw, -v1.xyxy, l(1.000000, 1.000000, 0.500000, 0.500000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t1.xyzw, s0
dp3 r1.x, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
ge r1.x, r1.x, cb0[0].y
and r1.x, r1.x, l(0x3f800000)
mad r2.xyzw, r0.zwzw, l(3.000000, 3.000000, 9.000000, 9.000000), l(0.500000, 0.500000, 0.500000, 0.500000)
add r0.xy, -r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r0.xy, r0.xyxx, l(0.666000, 0.666000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t1.xyzw, s0
dp3 r0.x, r0.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
ge r0.x, r0.x, cb0[0].y
and r0.x, r0.x, l(0x3f800000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r2.xyxx, t1.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r2.zwzz, t1.wxyz, s0
dp3 r1.y, r1.yzwy, l(0.333000, 0.333000, 0.333000, 0.000000)
ge r1.y, r1.y, cb0[0].y
and r1.y, r1.y, l(0x3f800000)
dp3 r0.y, r0.yzwy, l(0.333000, 0.333000, 0.333000, 0.000000)
ge r0.y, r0.y, cb0[0].y
and r0.y, r0.y, l(0x3f800000)
mul r0.yzw, r0.yyyy, cb0[2].xxyz
mad r0.yzw, r1.xxxx, cb0[1].xxyz, r0.yyzw
mad r0.yzw, r1.yyyy, cb0[3].xxyz, r0.yyzw
mad o0.xyz, r0.xxxx, cb0[4].xyzx, r0.yzwy
mov o0.w, l(1.000000)
ret 
// Approximately 26 instruction slots used
