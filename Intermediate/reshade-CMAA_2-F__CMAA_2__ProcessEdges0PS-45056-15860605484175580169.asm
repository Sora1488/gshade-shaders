//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__CMAA_2__BackBuffer           texture  float4          2d             t2      1 
// __V__CMAA_2__Edges                texture  float4          2d             t4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 11
ftoi r0.xy, v0.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.z, r0.xyzw, t4.yzxw
mul r0.z, r0.z, l(255.500000)
ftou r0.z, r0.z
ult r0.w, r0.z, l(16)
discard_nz r0.w
ult r0.w, l(16), r0.z
if_nz r0.w
  and r1.xyzw, r0.zzzz, l(4, 8, 1, 2)
  movc r1.xyzw, r1.xyzw, l(1,1,1,1), l(0,0,0,0)
  utof r1.xyzw, r1.xyzw
  iadd r2.xyzw, r0.xyxy, l(1, 0, -1, 0)
  mov r3.xy, r2.zwzz
  mov r3.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r3.xyzw, t4.yzxw
  mul r0.z, r0.z, l(255.500000)
  ftou r0.z, r0.z
  and r3.xyz, r0.zzzz, l(4, 2, 8, 0)
  movc r3.xyz, r3.xyzx, l(1,1,1,0), l(0,0,0,0)
  utof r3.xyz, r3.xyzx
  mov r2.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r2.xyzw, t4.yzxw
  mul r0.z, r0.z, l(255.500000)
  ftou r0.z, r0.z
  and r2.xyz, r0.zzzz, l(1, 2, 8, 0)
  movc r2.xyz, r2.xyzx, l(1,1,1,0), l(0,0,0,0)
  utof r2.xyz, r2.xyzx
  iadd r0.xyzw, r0.xyxy, l(0, -1, 0, 1)
  mov r4.xy, r0.zwzz
  mov r4.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r2.w, r4.xyzw, t4.yzwx
  mul r2.w, r2.w, l(255.500000)
  ftou r2.w, r2.w
  and r4.xyz, r2.wwww, l(1, 2, 4, 0)
  movc r4.xyz, r4.xyzx, l(1,1,1,0), l(0,0,0,0)
  utof r4.xyz, r4.xyzx
  mov r0.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t4.xyzw
  mul r0.x, r0.x, l(255.500000)
  ftou r0.x, r0.x
  and r0.xyz, r0.xxxx, l(1, 4, 8, 0)
  movc r0.xyz, r0.xyzx, l(1,1,1,0), l(0,0,0,0)
  utof r0.xyz, r0.xyzx
  dp4 r0.w, r1.zwxy, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r5.xyz, r2.xyzx, r3.xyzx
  add r5.xyz, r0.xyzx, r5.xyzx
  add r5.xyz, r4.xyzx, r5.xyzx
  dp3 r2.w, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  eq r0.w, r0.w, l(2.000000)
  mul r3.xw, r0.xxxy, r1.wwww
  add r4.yw, -r3.yyyz, l(0.000000, 1.000000, 0.000000, 1.000000)
  mul r5.xy, r1.yyyy, r4.xzxx
  mul r4.w, r4.w, r5.x
  mad r3.x, r3.x, r4.y, r4.w
  mad r6.z, r3.x, l(0.900000), r1.z
  mul r4.yw, r1.xxxx, r2.yyyz
  add r5.xz, -r0.yyxy, l(1.000000, 0.000000, 1.000000, 0.000000)
  mul r7.xy, r1.zzzz, r3.yzyy
  mul r3.x, r5.z, r7.x
  mad r3.x, r4.y, r5.x, r3.x
  mad r6.w, r3.x, l(0.900000), r1.w
  add r5.xz, -r2.zzyz, l(1.000000, 0.000000, 1.000000, 0.000000)
  mul r3.x, r3.w, r5.z
  mad r3.x, r5.y, r5.x, r3.x
  mad r6.x, r3.x, l(0.900000), r1.x
  add r3.xw, -r4.xxxz, l(1.000000, 0.000000, 0.000000, 1.000000)
  mul r3.w, r3.w, r4.w
  mad r3.x, r7.y, r3.x, r3.w
  mad r6.y, r3.x, l(0.900000), r1.y
  movc r5.xyzw, r0.wwww, r6.xyzw, r1.xyzw
  movc r0.w, r0.w, l(0.075000), l(0.100000)
  mad r2.w, -r2.w, l(0.100000), l(1.300000)
  min r2.w, r2.w, l(1.000000)
  mul r0.w, r0.w, r2.w
  mul r5.xyzw, r0.wwww, r5.xyzw
  dp4 r0.w, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  add r0.w, -r0.w, l(1.000000)
  ftou r6.xy, v0.xyxx
  mov r6.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyzw, t2.xyzw
  iadd r8.xyzw, r6.xyxy, l(0, -1, -1, 0)
  mov r9.xy, r8.zwzz
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyzw, t2.xyzw
  lt r10.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xyzw
  mul r9.xyz, r5.xxxx, r9.xyzx
  and r9.xyz, r9.xyzx, r10.xxxx
  mad r7.xyz, r7.xyzx, r0.wwww, r9.xyzx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyzw, t2.xyzw
  mul r8.xyz, r5.yyyy, r8.xyzx
  and r8.xyz, r8.xyzx, r10.yyyy
  add r7.xyz, r7.xyzx, r8.xyzx
  iadd r8.xyzw, r6.xyxy, l(0, 1, 1, 0)
  mov r9.xy, r8.zwzz
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyzw, t2.xyzw
  mul r5.xyz, r5.zzzz, r9.xyzx
  and r5.xyz, r5.xyzx, r10.zzzz
  add r5.xyz, r5.xyzx, r7.xyzx
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r7.xyz, r8.xyzw, t2.xyzw
  mul r7.xyz, r5.wwww, r7.xyzx
  and r7.xyz, r7.xyzx, r10.wwww
  add r5.xyz, r5.xyzx, r7.xyzx
  add r7.xyzw, v0.xyxy, l(2.000000, 0.000000, 0.000000, -2.000000)
  ftoi r7.xyzw, r7.zwxy
  mov r8.xy, r7.zwzz
  mov r8.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r8.xyzw, t4.yzwx
  mul r0.w, r0.w, l(255.500000)
  ftou r0.w, r0.w
  and r3.xw, r0.wwww, l(2, 0, 0, 8)
  movc r3.xw, r3.xxxw, l(1,0,0,1), l(0,0,0,0)
  utof r3.xw, r3.xxxw
  mul r8.xyz, r1.wyxw, r1.zzyz
  mul r4.yw, r2.zzzy, r8.xxxy
  add r3.xy, r3.xwxx, r3.zyzz
  add r3.zw, r3.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r2.yz, r1.yywy, r2.yyzy
  add r2.yz, -r2.yyzy, r3.zzwz
  add r3.xy, r1.xxxx, r3.xyxx
  add r2.xw, r2.xxxx, r3.xxxy
  mad r2.xy, -r2.xwxx, l(0.700000, 0.700000, 0.000000, 0.000000), r2.yzyy
  mul r2.xy, r2.xyxx, r4.ywyy
  max r3.x, r2.y, r2.x
  lt r0.w, l(0.000000), r3.x
  lt r1.y, r2.y, r2.x
  and r3.y, r0.w, r1.y
  mov r7.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r7.xyzw, t4.yzwx
  mul r0.w, r0.w, l(255.500000)
  ftou r0.w, r0.w
  and r2.xy, r0.wwww, l(1, 4, 0, 0)
  movc r2.xy, r2.xyxx, l(1,1,0,0), l(0,0,0,0)
  utof r2.xy, r2.xyxx
  mul r2.zw, r0.yyyx, r8.yyyz
  add r2.xy, r2.xyxx, r4.zxzz
  add r3.zw, r2.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000)
  add r0.xy, r0.xyxx, r1.xzxx
  add r0.xy, -r0.xyxx, r3.zwzz
  add r1.xy, r1.wwww, r2.xyxx
  add r0.zw, r0.zzzz, r1.xxxy
  mad r0.xy, -r0.zwzz, l(0.700000, 0.700000, 0.000000, 0.000000), r0.xyxx
  mul r0.xy, r0.xyxx, r2.zwzz
  max r1.x, r0.y, r0.x
  lt r0.z, r3.x, r1.x
  lt r1.y, r0.y, r0.x
  movc r0.xy, r0.zzzz, r1.xyxx, r3.xyxx
  lt r0.w, l(0.000000), r0.x
  if_nz r0.w
    add r0.x, -r0.x, l(4.000000)
    min r0.x, r0.x, l(3.000000)
    round_ni r1.z, r0.x
    movc r2.xyzw, r0.zzzz, l(0,-1.000000,4,1), l(1.000000,0,8,2)
    movc r0.xw, r0.yyyy, r2.wwwz, r2.zzzw
    utof r2.zw, r6.xxxy
    mov r3.zw, l(0,0,0,0)
    mov r4.zw, l(0,0,0,0)
    mov r6.xyzw, l(1.000000,1.000000,-1,-1)
    loop 
      mad r7.xy, -r2.xyxx, r6.xxxx, r2.zwzz
      ftoi r3.xy, r7.xyxx
      ld_indexable(texture2d)(float,float,float,float) r3.x, r3.xyzw, t4.xyzw
      mul r3.x, r3.x, l(255.500000)
      ftou r3.x, r3.x
      add r3.y, r6.y, l(1.000000)
      mad r7.xy, r2.xyxx, r3.yyyy, r2.zwzz
      ftoi r4.xy, r7.xyxx
      ld_indexable(texture2d)(float,float,float,float) r3.y, r4.xyzw, t4.yxzw
      mul r3.y, r3.y, l(255.500000)
      ftou r3.y, r3.y
      and r3.x, r0.x, r3.x
      ine r3.x, r3.x, l(0)
      and r6.z, r3.x, r6.z
      and r3.x, r0.w, r3.y
      ine r3.x, r3.x, l(0)
      and r6.w, r3.x, r6.w
      and r3.xy, r6.zwzz, l(0x3f800000, 0x3f800000, 0, 0)
      add r3.xy, r3.xyxx, r6.xyxx
      max r4.x, r3.x, r3.y
      not r7.xy, r6.zwzz
      and r4.y, r7.y, r7.x
      movc r4.x, r4.y, l(128.000000), r4.x
      min r4.y, r3.x, r3.y
      mad r4.y, r4.y, l(1.250000), l(-0.250000)
      min r4.y, r4.y, l(128.000000)
      ge r4.x, r4.x, r4.y
      if_nz r4.x
        mov r6.xy, r3.xyxx
        break 
      endif 
      mov r6.xy, r3.xyxx
    endloop 
    add r1.xy, -r1.zzzz, r6.xyxx
    add r0.x, r1.y, r1.x
    ge r0.x, r0.x, l(5.000000)
    if_nz r0.x
      movc r0.x, r0.z, l(0), l(1)
      bfi r0.x, l(31), l(1), r0.x, r0.y
      iadd r0.x, r0.x, l(4)
      itof r1.w, r0.x
      mul o1.xyzw, r1.xyzw, l(0.003922, 0.003922, 0.003922, 0.003922)
      mov o0.xyz, r5.xyzx
      mov o0.w, l(1.000000)
      ret 
    endif 
  endif 
  mov o0.xyz, r5.xyzx
  mov o0.w, l(1.000000)
else 
  mov o0.xyzw, l(0,0,0,0)
endif 
mov o1.xyzw, l(0,0,0,0)
ret 
// Approximately 216 instruction slots used
