//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 filmroll;                   // Offset:    0 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__Gr8mmFilmTex                 texture  float4          2d             t0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
max r0.x, |r0.y|, |r0.x|
add r0.x, r0.x, l(0.750000)
round_z r0.y, cb0[0].x
mul r0.y, r0.y, l(0.142857)
mad r1.y, v1.y, l(0.142857), r0.y
mov r1.x, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t0.xyzw, s0
add r0.y, r1.y, r1.x
add r0.y, r1.z, r0.y
mad_sat r0.x, -r0.y, l(0.333333), r0.x
mul r0.x, r0.x, r0.x
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t2.xyzw, s0
add r1.xyzw, r1.xyzw, -r2.xyzw
mad o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
ret 
// Approximately 16 instruction slots used
