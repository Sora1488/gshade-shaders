//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 7
mov r0.xyzw, l(0,0,0,0)
mov r1.xy, l(0,-3,0,0)
loop 
  ilt r1.z, l(3), r1.y
  breakc_nz r1.z
  itof r2.x, r1.y
  mov r3.xyz, r0.xyzx
  mov r1.z, r0.w
  mov r1.w, r1.x
  mov r2.z, l(-3)
  loop 
    ilt r2.w, l(3), r2.z
    breakc_nz r2.w
    mov r2.w, l(0)
    mov r3.w, l(-2)
    loop 
      ilt r4.x, l(2), r3.w
      breakc_nz r4.x
      iadd r4.x, r1.y, r3.w
      itof r4.x, r4.x
      itof r5.x, r3.w
      mov r4.z, r2.w
      mov r4.w, l(-2)
      loop 
        ilt r5.z, l(2), r4.w
        breakc_nz r5.z
        iadd r5.z, r2.z, r4.w
        itof r4.y, r5.z
        mad r5.zw, r4.xxxy, l(0.000000, 0.000000, 0.000521, 0.000926), v1.xxxy
        sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.zwzz, t0.xyzw, s0, l(0.000000)
        itof r5.y, r4.w
        mad r5.yz, r5.xxyx, l(0.000000, 0.000521, 0.000926, 0.000000), v1.xxyx
        sample_l_indexable(texture2d)(float,float,float,float) r5.yzw, r5.yzyy, t0.wxyz, s0, l(0.000000)
        add r5.yzw, -r5.yyzw, r6.xxyz
        dp3 r4.y, r5.yzwy, r5.yzwy
        add r4.z, r4.z, r4.y
        iadd r4.w, r4.w, l(1)
      endloop 
      mov r2.w, r4.z
      iadd r3.w, r3.w, l(1)
    endloop 
    itof r2.y, r2.z
    mad r4.xy, r2.xyxx, l(0.000521, 0.000926, 0.000000, 0.000000), v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyw, r4.xyxx, t0.xywz, s0, l(0.000000)
    imul null, r2.y, r2.z, r2.z
    imad r2.y, r1.y, r1.y, r2.y
    itof r2.y, r2.y
    mul r2.y, r2.y, l(0.020000)
    mad r2.y, r2.w, l(0.266667), r2.y
    mul r2.y, r2.y, l(-1.442695)
    exp r2.y, r2.y
    lt r3.w, l(0.030000), r2.y
    and r3.w, r3.w, l(0x3f800000)
    add r1.z, r1.z, r3.w
    add r1.w, r1.w, r2.y
    mad r3.xyz, r4.xywx, r2.yyyy, r3.xyzx
    iadd r2.z, r2.z, l(1)
  endloop 
  mov r0.xyz, r3.xyzx
  mov r0.w, r1.z
  mov r1.x, r1.w
  iadd r1.y, r1.y, l(1)
endloop 
div r0.xyz, r0.xyzx, r1.xxxx
lt r0.w, l(2.450000), r0.w
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad o0.xyz, r1.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), r0.xyzx
  ret 
else 
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad o0.xyz, r1.xyzx, l(0.800000, 0.800000, 0.800000, 0.000000), r0.xyzx
  ret 
endif 
ret 
// Approximately 77 instruction slots used
