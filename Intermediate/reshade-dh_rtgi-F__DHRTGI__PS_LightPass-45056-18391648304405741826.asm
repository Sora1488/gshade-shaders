//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float frametime;                   // Offset:    0 Size:     4
//   int framecount;                    // Offset:    4 Size:     4
//   int random;                        // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__DHRTGI__blueNoiseTex         texture  float4          2d             t4      1 
// __V__DHRTGI__normalTex            texture  float4          2d             t6      1 
// __V__DHRTGI__previousDepthTex     texture  float4          2d             t8      1 
// __V__DHRTGI__resultTex            texture  float4          2d            t28      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   xyzw        2   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t28
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_output o2.xyzw
dcl_temps 22
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.z, r0.x, r0.y
lt r0.w, l(0.990000), r0.z
if_nz r0.w
  mov o0.xyzw, l(0,0,0,0)
  mov o1.xyzw, l(0,0,0,0)
  mov o2.xyzw, l(0,0,0,0)
  ret 
endif 
add r1.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.xy, r0.zzzz, r1.xyxx
mul r1.xyz, r0.xyzx, l(1920.000000, 1080.000000, 1875.000000, 0.000000)
imul null, r0.w, cb0[0].z, cb0[0].y
itof r0.w, r0.w
mul r2.xy, r0.wwww, l(1.414214, 3.141593, 0.000000, 0.000000)
round_z r2.xy, r2.xyxx
mul r3.xyzw, r2.xyxy, l(512.000000, 512.000000, 512.000000, 512.000000)
ge r3.xyzw, r3.xyzw, -r3.zwzw
movc r3.xyzw, r3.xyzw, l(512.000000,512.000000,0.001953,0.001953), l(-512.000000,-512.000000,-0.001953,-0.001953)
mul r2.xy, r2.xyxx, r3.zwzz
frc r2.xy, r2.xyxx
mul r2.xy, r2.xyxx, r3.xyxx
round_z r2.xy, r2.xyxx
mad r2.xy, v1.xyxx, l(1920.000000, 1080.000000, 0.000000, 0.000000), r2.xyxx
mul r3.xyzw, r2.xyxy, l(512.000000, 512.000000, 512.000000, 512.000000)
ge r3.xyzw, r3.xyzw, -r3.zwzw
movc r3.xyzw, r3.xyzw, l(512.000000,512.000000,0.001953,0.001953), l(-512.000000,-512.000000,-0.001953,-0.001953)
mul r2.xy, r2.xyxx, r3.zwzz
frc r2.xy, r2.xyxx
mul r2.xy, r2.xyxx, r3.xyxx
mul r2.xy, r2.xyxx, l(0.001953, 0.001953, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t4.xyzw, s1
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
dp3 r0.w, r2.xyzx, r2.xyzx
rsq r0.w, r0.w
mul r2.xyz, r0.wwww, r2.xyzx
dp3 r0.w, r1.xyzx, r2.xyzx
add r0.w, r0.w, r0.w
mad r2.xyz, r2.xyzx, -r0.wwww, r1.xyzx
div r0.w, l(10.000000), cb0[0].x
round_ne r0.w, r0.w
max r0.w, r0.w, l(1.000000)
div r3.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r2.xyz, r2.xyzx, l(0.000500, 0.000500, 0.000500, 0.000000)
lt r0.w, r0.z, l(0.001000)
mad r4.xyz, r0.xyzx, l(1920.000000, 1080.000000, 1875.000000, 0.000000), r2.xyzx
mul r5.xyz, r4.xyzx, l(0.000521, 0.000926, 0.000533, 0.000000)
div r5.xy, r5.xyxx, r5.zzzz
add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
not r4.w, r0.w
sample_l_indexable(texture2d)(float,float,float,float) r5.z, r5.xyxx, t2.yzxw, s0, l(0.000000)
mad r5.w, -r5.z, l(999.000000), l(1000.000000)
div r5.z, r5.z, r5.w
mad r6.y, r5.z, l(1875.000000), -r4.z
ge r5.z, l(0.000000), r6.y
not r7.z, r5.z
if_nz r5.z
  mul r8.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r5.zw, r8.xxxy, r8.zzzz
  add r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r5.zwzz, t6.xyzw, s0, l(0.000000)
  add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r8.xyz, r8.xyzx, r8.xyzx
  dp3 r5.z, r2.xyzx, r8.xyzx
  add r5.z, r5.z, r5.z
  mad r2.xyz, r8.xyzx, -r5.zzzz, r2.xyzx
  mad r4.xyz, r0.xyzx, l(1920.000000, 1080.000000, 1875.000000, 0.000000), r2.xyzx
  mov r5.z, l(0)
  mov r8.xy, l(0,0,0,0)
else 
  ge r8.zw, r5.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
  ge r5.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r5.xyxx
  and r5.x, r5.x, r8.z
  and r5.x, r8.w, r5.x
  and r5.x, r5.y, r5.x
  ge r5.y, r4.z, l(0.000000)
  and r5.x, r5.y, r5.x
  ge r5.y, l(1875.000000), r4.z
  and r5.x, r5.y, r5.x
  not r5.x, r5.x
  lt r5.y, r4.z, l(1.875000)
  or r5.y, r4.w, r5.y
  and r8.y, r5.y, r5.x
  if_nz r8.y
    mov r1.w, l(0)
    mov r4.xyz, r1.xyzx
  endif 
  not r5.x, r8.y
  lt r5.y, l(0.010000), |r6.y|
  and r5.z, r5.y, r5.x
  mov r8.x, r8.y
endif 
not r5.xy, r8.yxyy
and r5.x, r5.x, r5.y
mul r9.yzw, r2.xxyz, l(0.000000, 1.100000, 1.100000, 1.100000)
mov r9.x, l(0.000550)
mov r2.w, l(0.000500)
movc r2.xyzw, r5.xxxx, r9.xyzw, r2.wxyz
mov r6.xz, l(0.020000,0,0,0)
mov r7.xyw, l(0.010000,0,0,1.000000)
movc r5.xyw, r5.xxxx, r6.xyxz, r7.xyxz
mul r6.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r6.xy, r6.xyxx, r6.zzzz
add r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t6.xyzw, s0, l(0.000000)
add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r6.xyz, r6.xyzx, r6.xyzx
mov r9.w, l(0)
mov r10.xyzw, r1.xyzw
mov r11.xyzw, l(0,0,0,0)
mov r8.yzw, r2.yyzw
mov r9.xyz, r4.xyzx
mov r6.w, r2.x
mov r12.x, l(0.000500)
mov r12.yw, r5.xxxy
mov r13.xy, r5.zwzz
mov r13.z, l(-1)
mov r13.w, r8.x
loop 
  mov r13.w, l(0)
  breakc_z r13.z
  add r14.xyz, r8.yzwy, r9.xyzx
  add r12.x, r6.w, r12.x
  mul r15.xyz, r14.xyzx, l(0.000521, 0.000926, 0.000533, 0.000000)
  div r15.xy, r15.xyxx, r15.zzzz
  add r15.xy, r15.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r14.w, r15.xyxx, t2.yzwx, s0, l(0.000000)
  mad r15.z, -r14.w, l(999.000000), l(1000.000000)
  div r14.w, r14.w, r15.z
  mad r15.z, r14.w, l(1875.000000), -r14.z
  ge r15.w, l(0.000000), r15.z
  and r15.w, r13.y, r15.w
  if_nz r15.w
    dp3 r15.w, r8.yzwy, r6.xyzx
    add r15.w, r15.w, r15.w
    mad r8.yzw, r6.xxyz, -r15.wwww, r8.yyzw
    mad r9.xyz, r0.xyzx, l(1920.000000, 1080.000000, 1875.000000, 0.000000), r8.yzwy
    mov r12.w, r15.z
    mov r13.w, l(0)
  else 
    ge r16.xy, r15.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
    ge r15.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r15.xyxx
    and r15.x, r15.x, r16.x
    and r15.x, r16.y, r15.x
    and r15.x, r15.y, r15.x
    ge r15.y, r14.z, l(0.000000)
    and r15.x, r15.y, r15.x
    ge r15.y, l(1875.000000), r14.z
    and r15.x, r15.y, r15.x
    not r15.x, r15.x
    lt r15.y, r14.z, l(1.875000)
    or r15.y, r4.w, r15.y
    and r15.x, r15.y, r15.x
    if_nz r13.x
      not r15.y, r15.x
      lt r15.w, l(0.000000), r15.z
      lt r16.x, r15.z, l(0.000000)
      iadd r15.w, -r15.w, r16.x
      itof r15.w, r15.w
      lt r16.x, l(0.000000), r12.w
      lt r16.y, r12.w, l(0.000000)
      iadd r16.x, -r16.x, r16.y
      itof r16.x, r16.x
      ne r15.w, r15.w, r16.x
      and r15.y, r15.w, r15.y
      if_nz r15.y
        mov r11.yzw, r14.xxyz
        mov r16.yzw, r8.yyzw
        mov r12.z, r12.x
        mov r12.w, r15.z
        mov r15.y, r6.w
        mov r15.w, l(0)
        loop 
          ige r17.x, r15.w, l(8)
          breakc_nz r17.x
          mul r17.xyz, r16.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000)
          mul r17.w, r15.y, l(0.250000)
          mov r18.xyz, r11.yzwy
          mov r19.xy, r12.zwzz
          mov r18.w, l(0)
          mov r19.zw, l(0,0,0,-1)
          loop 
            breakc_z r19.w
            mad r18.xyz, -r16.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000), r18.xyzx
            mad r19.x, -r15.y, l(0.250000), r19.x
            mad r19.y, r14.w, l(1875.000000), -r18.z
            lt r20.x, l(0.000000), r19.y
            lt r20.y, r19.y, l(0.000000)
            iadd r20.x, -r20.x, r20.y
            itof r20.x, r20.x
            eq r19.z, r16.x, r20.x
            iadd r18.w, r18.w, l(1)
            not r20.x, r19.z
            ilt r20.y, r18.w, l(3)
            and r19.w, r20.y, r20.x
          endloop 
          mad r20.xyz, r16.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000), r18.xyzx
          mad r21.x, r15.y, l(0.250000), r19.x
          mad r21.y, r14.w, l(1875.000000), -r20.z
          movc r11.yzw, r19.zzzz, r20.xxyz, r18.xxyz
          movc r12.zw, r19.zzzz, r21.xxxy, r19.xxxy
          iadd r15.w, r15.w, l(1)
          mov r16.yzw, r17.xxyz
          mov r15.y, r17.w
        endloop 
        mov r12.xw, r12.zzzw
        mov r9.xyz, r11.yzwy
        mov r11.x, l(-1)
      else 
        mov r9.xyz, r14.xyzx
        mov r12.w, r15.z
      endif 
      ge r14.w, r12.y, |r12.w|
      or r14.w, r15.x, r14.w
      if_nz r14.w
        movc r7.xyz, r11.xxxx, r11.yzwy, r9.xyzx
        mov r10.xyzw, r7.xyzw
        mov r13.w, l(-1)
        break 
      endif 
      mov r13.x, l(-1)
      mov r13.w, r14.w
    else 
      if_nz r15.x
        mov r10.xyzw, r9.xyzw
        mov r13.w, l(-1)
        break 
      endif 
      lt r13.x, r12.y, |r15.z|
      mov r9.xyz, r14.xyzx
      mov r12.w, r15.z
      mov r13.w, r15.x
    endif 
  endif 
  mul r6.w, r6.w, l(1.100000)
  lt r7.x, r12.y, l(0.500000)
  add r7.y, r12.y, l(0.010000)
  movc r12.y, r7.x, r7.y, r12.y
  mul r8.yzw, r8.yyzw, l(0.000000, 1.100000, 1.100000, 1.100000)
  lt r13.z, r12.x, l(1920.000000)
  mov r13.y, l(0)
endloop 
and r1.xyzw, r10.xyzw, r13.wwww
mul r2.xyz, r1.xyzx, l(0.000521, 0.000926, 0.000533, 0.000000)
div r2.xy, r2.xyxx, r2.zzzz
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r2.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r2.xyxx, t28.xyzw, s0, l(0.000000)
mad_sat r4.xyz, r5.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000), r4.xyzx
min r2.w, r4.z, r4.y
min r2.w, r2.w, r4.x
max r5.xy, r4.zyzz, r4.yxyy
max r5.xy, r4.xzxx, r5.xyxx
add r4.w, r2.w, r5.x
add r2.w, -r2.w, r5.x
ne r5.x, r2.w, l(0.000000)
mad r5.z, r4.w, l(1.000000), l(-1.000000)
add r5.z, -|r5.z|, l(1.000000)
div r2.w, r2.w, r5.z
and r2.w, r2.w, r5.x
lt r2.w, l(0.100000), r2.w
lt r4.w, l(0.200000), r4.w
and r2.w, r2.w, r4.w
lt r4.w, l(0.000000), r5.y
div r5.xyz, r4.xyzx, r5.yyyy
log r5.xyz, r5.xyzx
mul r5.xyz, r5.xyzx, l(2.500000, 2.500000, 2.500000, 0.000000)
exp r5.xyz, r5.xyzx
mul r6.xyz, r4.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000)
mad r5.xyz, r5.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), r6.xyzx
movc r5.xyz, r4.wwww, r5.xyzx, r4.xyzx
movc r3.xyz, r2.wwww, r5.xyzx, r4.xyzx
eq r2.w, r1.w, l(0.000000)
if_nz r2.w
  mov o0.xyzw, r3.xyzw
  mov r4.xy, l(0,0,0,0)
else 
  max r2.w, r3.y, r3.x
  max r2.w, r3.z, r2.w
  mad r1.xyz, -r0.xyzx, l(1920.000000, 1080.000000, 1875.000000, 0.000000), r1.xyzx
  dp3 r0.x, r1.xyzx, r1.xyzx
  sqrt r0.x, r0.x
  mad r0.y, r0.x, l(0.020000), l(1.000000)
  log r0.y, r0.y
  mul r0.y, r0.y, l(0.125000)
  exp r0.y, r0.y
  div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  add r0.y, r0.y, l(0.100000)
  sample_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t8.xyzw, s0
  add r0.z, -r0.z, r1.x
  lt r0.z, l(0.010000), |r0.z|
  mul r1.x, r3.w, l(5.000000)
  movc r0.z, r0.z, r1.x, r3.w
  mul r1.y, r2.w, r0.z
  mul r0.y, r0.y, r1.w
  mul o0.xyz, r3.xyzx, r0.yyyy
  lt r0.y, l(6.000000), r0.x
  mad r0.x, r0.x, l(0.166667), r2.w
  movc r1.x, r0.y, l(1.000000), r0.x
  movc r4.xy, r0.wwww, l(1.000000,1.000000,0,0), r1.xyxx
  mov o0.w, r1.y
endif 
mov o1.w, l(1.000000)
mov o1.xyz, r2.xyzx
mov o2.xw, r4.xxxy
mov o2.yz, l(0,0,0,0)
ret 
// Approximately 308 instruction slots used
