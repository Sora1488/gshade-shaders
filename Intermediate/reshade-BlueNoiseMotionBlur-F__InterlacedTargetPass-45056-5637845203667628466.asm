//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   uint framecount;                   // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__BlueNoise__BlueNoiseTex      texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[1], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.xyzw
dcl_temps 3
mov r0.zw, l(0,0,0,0)
ftou r1.xy, v0.xyxx
ubfe r0.xy, l(6, 6, 0, 0), l(6, 6, 0, 0), r1.xyxx
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t4.xyzw
mul r0.x, r0.x, l(4.000000)
ftou r0.x, r0.x
iadd r0.x, r0.x, cb0[0].x
and r0.x, r0.x, l(3)
and r2.xy, r1.xyxx, l(63, 63, 0, 0)
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyzw, t4.xyzw
dp4 o0.w, r2.xyzw, icb[r0.x + 0].xyzw
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r1.xyzw, t0.xyzw
mov o0.xyz, r0.xyzx
ret 
// Approximately 16 instruction slots used
