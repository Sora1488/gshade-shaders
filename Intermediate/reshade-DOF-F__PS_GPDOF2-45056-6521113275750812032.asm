//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 MouseCoords;                // Offset:    0 Size:     8
//   float Timer;                       // Offset:    8 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__texHDR2                      texture  float4          2d             t2      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t4      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t4.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t6.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div_sat r0.w, r0.w, r1.x
mul r1.xy, cb0[0].xyxx, l(0.000521, 0.000926, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t6.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div r1.x, r1.x, r1.y
mov r1.yz, l(0,0,5,0)
loop 
  ige r1.w, l(0), r1.z
  breakc_nz r1.w
  add r1.y, r1.x, r1.y
  iadd r1.z, r1.z, l(-1)
endloop 
mul_sat r1.x, r1.y, l(0.200000)
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mad r1.y, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r1.z, r0.w, r1.y
lt r1.z, r1.z, r1.x
mad r0.w, r1.y, r0.w, -r1.x
div r1.y, r0.w, r1.x
mul r1.x, r1.x, l(3.228072)
div_sat r0.w, r0.w, r1.x
movc r0.w, r1.z, r1.y, r0.w
mad_sat r0.w, r0.w, l(0.500000), l(0.500000)
mad r1.x, r0.w, l(2.000000), l(-1.000000)
lt r1.y, r0.w, l(0.500000)
mul r1.xz, |r1.xxxx|, l(26.500002, 0.000000, 0.082596, 0.000000)
movc r1.x, r1.y, r1.z, r1.x
lt r1.y, r1.x, l(1.200000)
if_nz r1.y
  mov o0.xyz, r0.xyzx
  mov o0.w, r0.w
  ret 
endif 
mul r0.w, r0.w, l(0.990000)
mov r2.z, l(0)
mov r3.xyzw, l(0,0,0,0)
mov r1.yzw, l(0,0,0,0)
mov r2.w, l(1.000000)
mov r4.xyzw, l(0,0,0,0)
loop 
  ige r5.x, r4.w, l(105)
  breakc_nz r5.x
  ieq r5.x, r4.z, l(0)
  itof r5.yz, r4.zzxz
  div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mul r5.y, r5.w, r5.y
  frc r5.y, r5.y
  mul r5.y, r5.y, r5.z
  eq r5.y, r5.y, l(0.000000)
  or r5.y, r5.x, r5.y
  movc r5.x, r4.x, r5.y, r5.x
  iadd r2.xy, r4.xyxx, l(5, 1, 0, 0)
  movc r6.xyzw, r5.xxxx, l(1.000000,0,0.309017,0.951057), r3.xyzw
  movc r4.xyz, r5.xxxx, r2.xyzx, r4.xyzx
  iadd r4.z, r4.z, l(1)
  itof r2.x, r4.y
  div r2.y, l(72.000000), r2.x
  itof r5.x, r4.z
  mul r5.y, r2.y, r5.x
  mul r5.y, r5.y, l(0.013889)
  frc r5.y, r5.y
  lt r5.z, r5.y, l(0.000000)
  mad r2.y, r2.y, r5.x, l(72.000000)
  mul r2.y, r2.y, l(0.017453)
  sincos r5.x, r7.x, r2.y
  mov r8.xy, r6.zwzz
  mov r8.z, r7.x
  mov r8.w, r5.x
  movc r3.xyzw, r5.zzzz, r8.xyzw, r6.xyzw
  add r5.xz, -r3.xxyx, r3.zzwz
  mad r5.xy, r5.yyyy, r5.xzxx, r3.xyxx
  mul r5.xy, r2.xxxx, r5.xyxx
  mul r5.xy, r1.xxxx, r5.xyxx
  mad r5.xy, r5.xyxx, l(0.000087, 0.000154, 0.000000, 0.000000), v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyxx, t2.xyzw, s0, l(0.000000)
  dp3 r2.y, r5.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
  add r2.y, r2.y, l(-0.500000)
  add r2.y, r2.y, r2.y
  max r2.y, r2.y, l(0.000000)
  mad r6.x, r5.w, l(2.000000), l(-1.000000)
  mad r2.y, r2.y, |r6.x|, l(1.000000)
  mul r5.xyz, r2.yyyy, r5.xyzx
  ge r2.y, r5.w, r0.w
  mul r5.w, |r6.x|, |r6.x|
  mul r5.w, r5.w, r5.w
  movc r2.y, r2.y, l(1.000000), r5.w
  mul r2.x, r2.x, l(0.166667)
  mul r2.x, r2.x, r2.x
  mad r2.x, r2.x, l(10.000000), l(1.000000)
  mul r5.xyz, r2.yyyy, r5.xyzx
  mad r1.yzw, r5.xxyz, r2.xxxx, r1.yyzw
  mad r2.w, r2.y, r2.x, r2.w
  iadd r4.w, r4.w, l(1)
endloop 
div r1.yzw, r1.yyzw, r2.wwww
add r0.w, r1.x, l(-1.200000)
mul_sat r0.w, r0.w, l(1.250000)
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
add r1.xyz, -r0.xyzx, r1.yzwy
mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov o0.w, r2.w
ret 
// Approximately 110 instruction slots used
