//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8
//   int shape;                         // Offset:    8 Size:     4 [unused]
//   bool invert_shape;                 // Offset:   12 Size:     4 [unused]
//   uint rotation;                     // Offset:   16 Size:     4 [unused]
//   float2 center;                     // Offset:   20 Size:     8 [unused]
//   float ret_size_x;                  // Offset:   28 Size:     4 [unused]
//   float ret_size_y;                  // Offset:   32 Size:     4 [unused]
//   float depthpos;                    // Offset:   36 Size:     4 [unused]
//   float smoothing;                   // Offset:   40 Size:     4 [unused]
//   float depth_smoothing;             // Offset:   44 Size:     4 [unused]
//   float dither_strength;             // Offset:   48 Size:     4
//   float3 reccolor;                   // Offset:   52 Size:    12
//   float mr_exposure;                 // Offset:   64 Size:     4
//   float mr_contrast;                 // Offset:   68 Size:     4
//   float mr_brightness;               // Offset:   72 Size:     4
//   float mr_hue;                      // Offset:   76 Size:     4
//   float mr_saturation;               // Offset:   80 Size:     4
//   float mr_vibrance;                 // Offset:   84 Size:     4
//   bool enable_gradient;              // Offset:   88 Size:     4 [unused]
//   bool gradient_type;                // Offset:   92 Size:     4 [unused]
//   float gradient_curve;              // Offset:   96 Size:     4 [unused]
//   float intensity_boost;             // Offset:  100 Size:     4
//   int blendmode_1;                   // Offset:  104 Size:     4
//   float opacity;                     // Offset:  108 Size:     4
//   bool hasdepth;                     // Offset:  112 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// __V__pd80_magicalrectangle__texMagicRectangle    texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t10.xyzw, s0
mov_sat r1.xyzw, r1.xyzw
mul r2.xy, v1.xyxx, l(3.750000, 2.109375, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t6.xyzw, s1
add r0.w, cb0[0].x, l(7.000000)
mad r2.xyz, r0.wwww, l(0.618034, 0.618034, 0.618034, 0.000000), r2.xyzx
frc r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.w, cb0[3].x, l(0.003922)
mad_sat r1.xyz, r2.xyzx, r0.wwww, r1.xyzx
mul r2.xyz, r1.wwww, cb0[4].xyzx
lt r3.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.xyz, r2.xyzx, l(0.333000, 0.500000, 0.500000, 0.000000)
movc r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
add r3.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r3.xyz, r2.xxxx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul_sat r0.xyz, r0.xyzx, r3.xyzx
lt r3.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
add r4.xyz, r0.xyzx, r0.xyzx
mul r5.xyz, r0.xyzx, r0.xyzx
mad r6.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, r6.xyzx
mad r5.xyz, r4.xyzx, r0.xyzx, r5.xyzx
sqrt r6.xyz, r0.xyzx
mad r7.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r8.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r4.xyz, r4.xyzx, r8.xyzx
mad r4.xyz, r6.xyzx, r7.xyzx, r4.xyzx
movc r3.xyz, r3.xyzx, r5.xyzx, r4.xyzx
add r3.xyz, -r0.xyzx, r3.xyzx
mad_sat r0.xyz, r2.yyyy, r3.xyzx, r0.xyzx
add r2.xyw, -r0.xyxz, l(1.000000, 1.000000, 0.000000, 1.000000)
mad r2.xyw, -r2.xyxw, r2.xyxw, -r0.xyxz
add r2.xyw, r2.xyxw, l(1.000000, 1.000000, 0.000000, 1.000000)
mad_sat r0.xyz, r2.zzzz, r2.xywx, r0.xyzx
max r2.xyw, r0.yzyx, l(0.000001, 0.000001, 0.000000, 0.000001)
lt r0.w, r2.x, r2.y
mov r3.xy, r2.yxyy
mov r3.zw, l(0,0,-1.000000,0.666667)
mov r4.xy, r3.yxyy
mov r4.zw, l(0,0,0,-0.333333)
movc r3.xyzw, r0.wwww, r3.xyzw, r4.xyzw
lt r0.w, r2.w, r3.x
mov r2.xyz, r3.xywx
mov r3.xyw, r2.wywx
movc r2.xyzw, r0.wwww, r2.xyzw, r3.xyzw
min r0.w, r2.y, r2.w
add r0.w, -r0.w, r2.x
add r2.y, -r2.y, r2.w
mad r2.w, r0.w, l(6.000000), l(0.000001)
div r2.y, r2.y, r2.w
add r2.y, r2.z, r2.y
mad r2.x, -r0.w, l(0.500000), r2.x
mad r2.z, r2.x, l(2.000000), l(-1.000000)
add r2.zw, -|r2.zzzz|, l(0.000000, 0.000000, 1.000000, 1.000001)
div r0.w, r0.w, r2.w
add r2.w, cb0[4].w, l(1.000000)
mad r2.y, r2.w, l(0.500000), |r2.y|
add r2.y, r2.y, l(-0.500000)
frc r2.y, r2.y
mad r3.xyz, r2.yyyy, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r3.xyz, |r3.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
mul r0.w, r0.w, r2.z
add r2.yzw, r3.xxyz, l(0.000000, -0.500000, -0.500000, -0.500000)
mad r2.xyz, r2.yzwy, r0.wwww, r2.xxxx
add r2.xyz, -r0.xyzx, r2.xyzx
mad r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
mul r0.w, r1.w, cb0[5].y
dp3 r2.x, r0.xyzx, l(0.212656, 0.715158, 0.072186, 0.000000)
mad r2.y, cb0[5].x, r1.w, l(1.000000)
add r0.xyz, r0.xyzx, -r2.xxxx
mad_sat r0.xyz, r2.yyyy, r0.xyzx, r2.xxxx
min r2.x, r0.y, r0.x
min r2.x, r0.z, r2.x
max r2.y, r0.y, r0.x
max r2.y, r0.z, r2.y
add r2.x, -r2.x, r2.y
dp3 r2.y, r0.xyzx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r2.x, -r2.x, l(1.000000)
mad r0.w, r0.w, r2.x, l(1.000000)
add r0.xyz, r0.xyzx, -r2.yyyy
mad_sat r0.xyz, r0.wwww, r0.xyzx, r2.yyyy
mul_sat r1.xyz, r1.xyzx, cb0[6].yyyy
max r0.w, r1.z, r1.y
max r0.w, r0.w, r1.x
lt r1.x, cb0[3].z, cb0[3].w
mov r2.xy, cb0[3].wzww
mov r2.zw, l(0,0,-1.000000,0.666667)
mov r3.xy, cb0[3].zwzz
mov r3.zw, l(0,0,0,-0.333333)
movc r2.xyzw, r1.xxxx, r2.xyzw, r3.xyzw
lt r1.x, cb0[3].y, r2.x
mov r3.xyz, r2.xywx
mov r3.w, cb0[3].y
mov r2.xyw, r3.wywx
movc r2.xyzw, r1.xxxx, r3.xyzw, r2.xyzw
min r1.x, r2.y, r2.w
add r1.x, -r1.x, r2.x
add r1.y, -r2.y, r2.w
mad r1.z, r1.x, l(6.000000), l(0.000000)
div r1.y, r1.y, r1.z
add r1.y, r1.y, r2.z
add r1.z, r2.x, l(0.000000)
div r1.x, r1.x, r1.z
add r2.xyz, |r1.yyyy|, l(1.000000, 0.666667, 0.333333, 0.000000)
frc r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -3.000000, -3.000000, 0.000000)
add_sat r2.xyz, |r2.xyzx|, l(-1.000000, -1.000000, -1.000000, 0.000000)
add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r1.xxxx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul_sat r1.xyz, r0.wwww, r1.xyzx
mul r0.w, r1.w, cb0[6].w
switch cb0[6].z
  case l(0)
  break 
  case l(1)
  min r1.xyz, r0.xyzx, r1.xyzx
  break 
  case l(2)
  mul r1.xyz, r0.xyzx, r1.xyzx
  break 
  case l(3)
  add r2.xyz, r0.xyzx, r1.xyzx
  add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  max r1.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  break 
  case l(4)
  ge r2.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  add r3.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r3.xyz, r3.xyzx, r1.xyzx
  add r3.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  movc r1.xyz, r2.xyzx, l(0,0,0,0), r3.xyzx
  break 
  case l(5)
  max r1.xyz, r0.xyzx, r1.xyzx
  break 
  case l(6)
  add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r1.xyz, -r2.xyzx, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  break 
  case l(7)
  ge r2.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r3.xyz, r0.xyzx, r3.xyzx
  min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r1.xyz, r2.xyzx, l(1.000000,1.000000,1.000000,0), r3.xyzx
  break 
  case l(8)
  add r2.xyz, r0.xyzx, r1.xyzx
  min r1.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  break 
  case l(9)
  lt r2.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mul r3.xyz, r0.xyzx, r1.xyzx
  add r3.xyz, r3.xyzx, r3.xyzx
  add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  add r4.xyz, r4.xyzx, r4.xyzx
  add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mad r4.xyz, -r4.xyzx, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r1.xyz, r2.xyzx, r3.xyzx, r4.xyzx
  break 
  case l(10)
  lt r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r3.xyz, r0.xyzx, r0.xyzx
  mul r4.xyz, r0.xyzx, r0.xyzx
  mad r5.xyz, -r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r4.xyz, r4.xyzx, r5.xyzx
  mad r4.xyz, r3.xyzx, r1.xyzx, r4.xyzx
  sqrt r5.xyz, r0.xyzx
  mad r6.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  add r7.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r3.xyzx, r7.xyzx
  mad r3.xyz, r5.xyzx, r6.xyzx, r3.xyzx
  movc r1.xyz, r2.xyzx, r4.xyzx, r3.xyzx
  break 
  case l(11)
  lt r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r3.xyz, r1.xyzx, r1.xyzx
  ge r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r3.xyz, r5.xyzx, r3.xyzx
  add r3.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  movc r3.xyz, r4.xyzx, l(0,0,0,0), r3.xyzx
  add r4.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  ge r5.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
  div r4.xyz, r0.xyzx, r4.xyzx
  min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r4.xyz, r5.xyzx, l(1.000000,1.000000,1.000000,0), r4.xyzx
  movc r1.xyz, r2.xyzx, r3.xyzx, r4.xyzx
  break 
  case l(12)
  lt r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r3.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  add r3.xyz, r3.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r4.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
  min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r1.xyz, r2.xyzx, r3.xyzx, r4.xyzx
  break 
  case l(13)
  lt r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r3.xyz, r1.xyzx, r1.xyzx
  min r3.xyz, r0.xyzx, r3.xyzx
  add r4.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  add r4.xyz, r4.xyzx, r4.xyzx
  max r4.xyz, r0.xyzx, r4.xyzx
  movc r1.xyz, r2.xyzx, r3.xyzx, r4.xyzx
  break 
  case l(14)
  lt r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  add r3.xyz, r1.xyzx, r1.xyzx
  ge r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
  add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r3.xyz, r5.xyzx, r3.xyzx
  add r3.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  max r3.xyz, r3.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  movc r3.xyz, r4.xyzx, l(0,0,0,0), r3.xyzx
  add r4.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
  ge r5.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
  div r4.xyz, r0.xyzx, r4.xyzx
  min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r4.xyz, r5.xyzx, l(1.000000,1.000000,1.000000,0), r4.xyzx
  movc r2.xyz, r2.xyzx, r3.xyzx, r4.xyzx
  lt r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
  movc r1.xyz, r2.xyzx, l(0,0,0,0), l(1.000000,1.000000,1.000000,0)
  break 
  case l(15)
  ge r2.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r0.xyzx, r0.xyzx
  add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r3.xyz, r3.xyzx, r4.xyzx
  min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r1.xyz, r2.xyzx, l(1.000000,1.000000,1.000000,0), r3.xyzx
  break 
  case l(16)
  ge r2.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  mul r3.xyz, r1.xyzx, r1.xyzx
  add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r3.xyz, r3.xyzx, r4.xyzx
  min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
  movc r1.xyz, r2.xyzx, l(1.000000,1.000000,1.000000,0), r3.xyzx
  break 
  case l(17)
  min r1.w, r1.y, r1.x
  min r1.w, r1.z, r1.w
  max r2.x, r1.y, r1.x
  max r2.x, r1.z, r2.x
  add r2.x, -r1.w, r2.x
  min r2.y, r0.y, r0.x
  min r2.y, r0.z, r2.y
  max r2.z, r0.y, r0.x
  max r2.z, r0.z, r2.z
  add r2.y, -r2.y, r2.z
  lt r2.z, l(0.000000), r2.x
  add r3.xyz, -r1.wwww, r1.xyzx
  mul r3.xyz, r2.yyyy, r3.xyzx
  div r2.xyw, r3.xyxz, r2.xxxx
  and r2.xyz, r2.xywx, r2.zzzz
  dp3 r1.w, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  dp3 r2.w, r0.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  add r1.w, -r1.w, r2.w
  add r2.xyz, r1.wwww, r2.xyzx
  dp3 r1.w, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  min r2.w, r2.y, r2.x
  min r2.w, r2.z, r2.w
  max r3.x, r2.y, r2.x
  max r3.x, r2.z, r3.x
  lt r3.y, r2.w, l(0.000000)
  add r4.xyz, -r1.wwww, r2.xyzx
  mul r4.xyz, r1.wwww, r4.xyzx
  add r2.w, r1.w, -r2.w
  div r4.xyz, r4.xyzx, r2.wwww
  add r4.xyz, r1.wwww, r4.xyzx
  movc r2.xyz, r3.yyyy, r4.xyzx, r2.xyzx
  lt r2.w, l(1.000000), r3.x
  add r3.yzw, -r1.wwww, r2.xxyz
  add r4.x, -r1.w, l(1.000000)
  mul r3.yzw, r3.yyzw, r4.xxxx
  add r3.x, -r1.w, r3.x
  div r3.xyz, r3.yzwy, r3.xxxx
  add r3.xyz, r1.wwww, r3.xyzx
  movc r1.xyz, r2.wwww, r3.xyzx, r2.xyzx
  break 
  case l(18)
  min r1.w, r0.y, r0.x
  min r1.w, r0.z, r1.w
  max r2.x, r0.y, r0.x
  max r2.x, r0.z, r2.x
  add r2.x, -r1.w, r2.x
  min r2.y, r1.y, r1.x
  min r2.y, r1.z, r2.y
  max r2.z, r1.y, r1.x
  max r2.z, r1.z, r2.z
  add r2.y, -r2.y, r2.z
  lt r2.z, l(0.000000), r2.x
  add r3.xyz, r0.xyzx, -r1.wwww
  mul r3.xyz, r2.yyyy, r3.xyzx
  div r2.xyw, r3.xyxz, r2.xxxx
  and r2.xyz, r2.xywx, r2.zzzz
  dp3 r1.w, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  dp3 r2.w, r0.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  add r1.w, -r1.w, r2.w
  add r2.xyz, r1.wwww, r2.xyzx
  dp3 r1.w, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  min r2.w, r2.y, r2.x
  min r2.w, r2.z, r2.w
  max r3.x, r2.y, r2.x
  max r3.x, r2.z, r3.x
  lt r3.y, r2.w, l(0.000000)
  add r4.xyz, -r1.wwww, r2.xyzx
  mul r4.xyz, r1.wwww, r4.xyzx
  add r2.w, r1.w, -r2.w
  div r4.xyz, r4.xyzx, r2.wwww
  add r4.xyz, r1.wwww, r4.xyzx
  movc r2.xyz, r3.yyyy, r4.xyzx, r2.xyzx
  lt r2.w, l(1.000000), r3.x
  add r3.yzw, -r1.wwww, r2.xxyz
  add r4.x, -r1.w, l(1.000000)
  mul r3.yzw, r3.yyzw, r4.xxxx
  add r3.x, -r1.w, r3.x
  div r3.xyz, r3.yzwy, r3.xxxx
  add r3.xyz, r1.wwww, r3.xyzx
  movc r1.xyz, r2.wwww, r3.xyzx, r2.xyzx
  break 
  case l(19)
  dp3 r1.w, r1.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  dp3 r2.x, r0.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  add r1.w, -r1.w, r2.x
  add r2.xyz, r1.wwww, r1.xyzx
  dp3 r1.w, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  min r2.w, r2.y, r2.x
  min r2.w, r2.z, r2.w
  max r3.x, r2.y, r2.x
  max r3.x, r2.z, r3.x
  lt r3.y, r2.w, l(0.000000)
  add r4.xyz, -r1.wwww, r2.xyzx
  mul r4.xyz, r1.wwww, r4.xyzx
  add r2.w, r1.w, -r2.w
  div r4.xyz, r4.xyzx, r2.wwww
  add r4.xyz, r1.wwww, r4.xyzx
  movc r2.xyz, r3.yyyy, r4.xyzx, r2.xyzx
  lt r2.w, l(1.000000), r3.x
  add r3.yzw, -r1.wwww, r2.xxyz
  add r4.x, -r1.w, l(1.000000)
  mul r3.yzw, r3.yyzw, r4.xxxx
  add r3.x, -r1.w, r3.x
  div r3.xyz, r3.yzwy, r3.xxxx
  add r3.xyz, r1.wwww, r3.xyzx
  movc r1.xyz, r2.wwww, r3.xyzx, r2.xyzx
  break 
  case l(20)
  dp3 r1.w, r0.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  dp3 r2.x, r1.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  add r1.w, -r1.w, r2.x
  add r2.xyz, r0.xyzx, r1.wwww
  dp3 r1.w, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
  min r2.w, r2.y, r2.x
  min r2.w, r2.z, r2.w
  max r3.x, r2.y, r2.x
  max r3.x, r2.z, r3.x
  lt r3.y, r2.w, l(0.000000)
  add r4.xyz, -r1.wwww, r2.xyzx
  mul r4.xyz, r1.wwww, r4.xyzx
  add r2.w, r1.w, -r2.w
  div r4.xyz, r4.xyzx, r2.wwww
  add r4.xyz, r1.wwww, r4.xyzx
  movc r2.xyz, r3.yyyy, r4.xyzx, r2.xyzx
  lt r2.w, l(1.000000), r3.x
  add r3.yzw, -r1.wwww, r2.xxyz
  add r4.x, -r1.w, l(1.000000)
  mul r3.yzw, r3.yyzw, r4.xxxx
  add r3.x, -r1.w, r3.x
  div r3.xyz, r3.yzwy, r3.xxxx
  add r3.xyz, r1.wwww, r3.xyzx
  movc r1.xyz, r2.wwww, r3.xyzx, r2.xyzx
  break 
  default 
  mov r1.xyz, l(0,0,0,0)
  break 
endswitch 
add r1.xyz, -r0.xyzx, r1.xyzx
mad_sat o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 392 instruction slots used
