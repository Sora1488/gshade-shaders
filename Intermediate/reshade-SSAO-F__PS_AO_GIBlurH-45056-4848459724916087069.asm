//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float AO_TEXSCALE;                 // Offset:    0 Size:     4 [unused]
//   float AO_SHARPNESS;                // Offset:    4 Size:     4
//   bool AO_SHARPNESS_DETECT;          // Offset:    8 Size:     4
//   int AO_BLUR_STEPS;                 // Offset:   12 Size:     4
//   int AO_DEBUG;                      // Offset:   16 Size:     4 [unused]
//   bool AO_LUMINANCE_CONSIDERATION;   // Offset:   20 Size:     4 [unused]
//   float AO_LUMINANCE_LOWER;          // Offset:   24 Size:     4 [unused]
//   float AO_LUMINANCE_UPPER;          // Offset:   28 Size:     4 [unused]
//   float AO_FADE_START;               // Offset:   32 Size:     4 [unused]
//   float AO_FADE_END;                 // Offset:   36 Size:     4 [unused]
//   int iSSAOSamples;                  // Offset:   40 Size:     4 [unused]
//   bool iSSAOSmartSampling;           // Offset:   44 Size:     4 [unused]
//   float fSSAOSamplingRange;          // Offset:   48 Size:     4 [unused]
//   float fSSAODarkeningAmount;        // Offset:   52 Size:     4 [unused]
//   float fSSAOBrighteningAmount;      // Offset:   56 Size:     4 [unused]
//   int iRayAOSamples;                 // Offset:   60 Size:     4 [unused]
//   float fRayAOSamplingRange;         // Offset:   64 Size:     4 [unused]
//   float fRayAOMaxDepth;              // Offset:   68 Size:     4 [unused]
//   float fRayAOMinDepth;              // Offset:   72 Size:     4 [unused]
//   float fRayAOPower;                 // Offset:   76 Size:     4 [unused]
//   int iHBAOSamples;                  // Offset:   80 Size:     4 [unused]
//   float fHBAOSamplingRange;          // Offset:   84 Size:     4 [unused]
//   float fHBAOAmount;                 // Offset:   88 Size:     4 [unused]
//   float fHBAOClamp;                  // Offset:   92 Size:     4 [unused]
//   float fHBAOAttenuation;            // Offset:   96 Size:     4 [unused]
//   int iSSGISamples;                  // Offset:  100 Size:     4 [unused]
//   float fSSGISamplingRange;          // Offset:  104 Size:     4 [unused]
//   float fSSGIIlluminationMult;       // Offset:  108 Size:     4 [unused]
//   float fSSGIOcclusionMult;          // Offset:  112 Size:     4 [unused]
//   float fSSGIModelThickness;         // Offset:  116 Size:     4 [unused]
//   float fSSGISaturation;             // Offset:  120 Size:     4 [unused]
//   float iSAOSamples;                 // Offset:  124 Size:     4 [unused]
//   float fSAOIntensity;               // Offset:  128 Size:     4 [unused]
//   float fSAOClamp;                   // Offset:  132 Size:     4 [unused]
//   float fSAORadius;                  // Offset:  136 Size:     4 [unused]
//   float fSAOBias;                    // Offset:  140 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texOcclusion2                texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
if_nz cb0[0].z
  add r1.xyzw, v1.xyxy, l(0.000000, 0.001000, 0.001000, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t2.yxzw, s0, l(0.000000)
  mad r0.z, -r0.y, l(999.000000), l(1000.000000)
  div r0.y, r0.y, r0.z
  sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.zwzz, t2.yzxw, s0, l(0.000000)
  mad r0.w, -r0.z, l(999.000000), l(1000.000000)
  div r0.z, r0.z, r0.w
  add r1.xy, -r0.xxxx, r0.zyzz
  mul r1.xy, r1.xyxx, l(0.001000, 0.001000, 0.000000, 0.000000)
  mov r1.z, l(0.000001)
  dp3 r0.y, r1.xyzx, r1.xyzx
  rsq r0.y, r0.y
  mul r0.yzw, r0.yyyy, r1.xxyz
  dp3 r0.y, r0.yzwy, l(0.333000, 0.333000, 0.333000, 0.000000)
  mul r0.x, r0.y, l(0.100000)
endif 
ineg r0.y, cb0[0].w
mul r0.z, cb0[0].y, l(1000.000000)
mov r1.z, l(0.000001)
mov r2.xyzw, l(0,0,0,0)
mov r0.w, l(0)
mov r1.w, r0.y
loop 
  ilt r3.x, cb0[0].w, r1.w
  breakc_nz r3.x
  itof r3.x, r1.w
  mad r3.xyzw, r3.xxxx, l(0.000521, 0.000000, 0.000521, 0.000000), v1.xyxy
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyzw, r3.zwzz, t8.xyzw, s0, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.x, r3.zwzz, t2.xyzw, s0, l(0.000000)
  mad r5.y, -r5.x, l(999.000000), l(1000.000000)
  div r5.x, r5.x, r5.y
  if_nz cb0[0].z
    add r3.xyzw, r3.xyzw, l(0.000000, 0.001000, 0.001000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t2.xyzw, s0, l(0.000000)
    mad r3.y, -r3.x, l(999.000000), l(1000.000000)
    div r3.x, r3.x, r3.y
    sample_l_indexable(texture2d)(float,float,float,float) r3.y, r3.zwzz, t2.yxzw, s0, l(0.000000)
    mad r3.z, -r3.y, l(999.000000), l(1000.000000)
    div r3.y, r3.y, r3.z
    add r6.xy, -r5.xxxx, r3.yxyy
    mul r1.xy, r6.xyxx, l(0.001000, 0.001000, 0.000000, 0.000000)
    dp3 r3.x, r1.xyzx, r1.xyzx
    rsq r3.x, r3.x
    mul r3.xyz, r1.xyzx, r3.xxxx
    dp3 r1.x, r3.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
    mul r5.x, r1.x, l(0.100000)
  endif 
  imax r1.x, -r1.w, r1.w
  iadd r1.x, -r1.x, cb0[0].w
  itof r1.x, r1.x
  add r1.y, -r0.x, r5.x
  mad_sat r1.y, -r0.z, |r1.y|, l(1.000000)
  mul r3.x, r1.y, r1.x
  mad r2.xyzw, r4.xyzw, r3.xxxx, r2.xyzw
  mad r0.w, r1.x, r1.y, r0.w
  iadd r1.w, r1.w, l(1)
endloop 
add r0.x, r0.w, l(0.000100)
div o0.xyzw, r2.xyzw, r0.xxxx
ret 
// Approximately 64 instruction slots used
