//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float   xyzw
// TEXCOORD                 2   xyzw        3     NONE   float   xyzw
// TEXCOORD                 3   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xy          0   TARGET   float   xy  
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v4.xyzw
dcl_output o0.xy
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v2.xyxx, t0.xyzw, s1
add r2.xyz, r0.xyzx, -r1.xyzx
max r0.w, |r2.y|, |r2.x|
max r2.x, |r2.z|, r0.w
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v2.zwzz, t0.xyzw, s1
add r4.xyz, r0.xyzx, -r3.xyzx
max r0.w, |r4.y|, |r4.x|
max r2.y, |r4.z|, r0.w
ge r2.zw, r2.xxxy, l(0.000000, 0.000000, 0.100000, 0.100000)
and r2.zw, r2.zzzw, l(0, 0, 0x3f800000, 0x3f800000)
dp2 r0.w, r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
eq r0.w, r0.w, l(0.000000)
discard_nz r0.w
if_z r0.w
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, v3.xyxx, t0.xyzw, s1
  add r4.xyz, r0.xyzx, -r4.xyzx
  max r0.w, |r4.y|, |r4.x|
  max r4.x, |r4.z|, r0.w
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, v3.zwzz, t0.xyzw, s1
  add r0.xyz, r0.xyzx, -r5.xyzx
  max r0.x, |r0.y|, |r0.x|
  max r4.y, |r0.z|, r0.x
  max r0.xy, r2.xyxx, r4.xyxx
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, v4.xyxx, t0.xyzw, s1
  add r1.xyz, r1.xyzx, -r4.xyzx
  max r0.z, |r1.y|, |r1.x|
  max r1.x, |r1.z|, r0.z
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, v4.zwzz, t0.xyzw, s1
  add r3.xyz, r3.xyzx, -r4.xyzx
  max r0.z, |r3.y|, |r3.x|
  max r1.y, |r3.z|, r0.z
  max r0.xy, r0.xyxx, r1.xyxx
  max r0.x, r0.y, r0.x
  add r0.yz, r2.xxyx, r2.xxyx
  ge r0.xy, r0.yzyy, r0.xxxx
  and r0.xy, r0.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
  mul o0.xy, r0.xyxx, r2.zwzz
else 
  mov o0.xy, l(0,0,0,0)
endif 
ret 
// Approximately 42 instruction slots used
