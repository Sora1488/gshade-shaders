//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int2 display_size;                 // Offset:    0 Size:     8 [unused]
//   float2 pixel_mask_scale;           // Offset:    8 Size:     8 [unused]
//   float rf_noise;                    // Offset:   16 Size:     4
//   float luma_sharpen;                // Offset:   20 Size:     4 [unused]
//   bool EnableTVCurvature;            // Offset:   24 Size:     4 [unused]
//   float tv_curvature;                // Offset:   28 Size:     4 [unused]
//   int3 colorbits;                    // Offset:   32 Size:    12
//   bool EnableRollingFlicker;         // Offset:   44 Size:     4 [unused]
//   float fRollingFlicker_Factor;      // Offset:   48 Size:     4 [unused]
//   float fRollingFlicker_VSyncTime;   // Offset:   52 Size:     4 [unused]
//   bool EnablePixelMask;              // Offset:   56 Size:     4 [unused]
//   float pixelMaskBrightness;         // Offset:   60 Size:     4 [unused]
//   bool EnableBurstCountAnimation;    // Offset:   64 Size:     4
//   float framecount;                  // Offset:   68 Size:     4
//   float fTimer;                      // Offset:   72 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__target0                      texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   xy          2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_temps 5
mul r0.x, cb0[4].y, l(60.000000)
ge r0.x, r0.x, -r0.x
movc r0.xy, r0.xxxx, l(60.000000,0.016667,0,0), l(-60.000000,-0.016667,0,0)
mul r0.y, r0.y, cb0[4].y
frc r0.y, r0.y
mul r0.x, r0.y, r0.x
mul r0.z, r0.x, l(0.160000)
mov r0.xy, v1.xyxx
dp3 r0.x, r0.xyzx, l(12.989800, 78.233002, 45.543201, 0.000000)
sincos r0.x, null, r0.x
mul r0.x, r0.x, l(43758.542969)
frc r0.x, r0.x
mul r0.yz, v1.wwxw, l(0.000000, 2.094406, 320.000000, 0.000000)
sincos r0.z, null, r0.z
mad r0.z, -r0.z, l(0.050000), l(1.000000)
dp2 r0.x, r0.xxxx, r0.zzzz
add r0.x, r0.x, l(-1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
ishl r2.xyz, l(1, 1, 1, 0), cb0[2].xyzx
itof r2.xyz, r2.xyzx
mul r1.xyz, r1.xyzx, r2.xyzx
round_ni r1.xyz, r1.xyzx
div r1.xyz, r1.xyzx, r2.xyzx
dp3 r0.z, l(0.596000, -0.275000, -0.321000, 0.000000), r1.xyzx
add r0.w, v1.w, cb0[4].y
mul r0.w, r0.w, l(2.094406)
movc r0.y, cb0[4].x, r0.w, r0.y
mad r0.y, v1.z, l(1.047197), r0.y
sincos r2.x, r3.x, r0.y
mul r0.y, r0.z, r3.x
mul r4.y, r0.y, l(1.500000)
dp3 r0.y, l(0.221000, -0.523000, 0.311000, 0.000000), r1.xyzx
dp3 r4.x, l(0.299000, 0.587000, 0.114000, 0.000000), r1.xyzx
mul r0.y, r0.y, r2.x
mul r4.z, r0.y, l(1.500000)
dp3 r0.y, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.x, r0.x, cb0[1].x, r0.y
mul r0.y, r0.x, r3.x
mul r0.z, r0.x, r2.x
mul o0.xyz, r0.xyzx, l(1.000000, 1.333333, 1.333333, 0.000000)
mov o0.w, l(1.000000)
ret 
// Approximately 42 instruction slots used
