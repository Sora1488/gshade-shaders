//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__CMAA_2__BackBuffer           texture  float4          2d             t2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   x           0   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_output o0.x
dcl_temps 11
add r0.xyzw, v0.xyxy, l(-1.000000, -1.000000, 0.000000, -1.000000)
ftoi r0.xyzw, r0.zwxy
mov r1.xy, r0.zwzz
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t2.xyzw
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t2.xyzw
add r2.xyzw, v0.xyxy, l(1.000000, -1.000000, -1.000000, 0.000000)
ftoi r2.xyzw, r2.zwxy
mov r3.xy, r2.zwzz
mov r3.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyzw, t2.xyzw
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyzw, t2.xyzw
ftoi r4.xy, v0.xyxx
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyzw, t2.xyzw
add r5.xyzw, v0.xyxy, l(1.000000, 0.000000, -1.000000, 1.000000)
ftoi r5.xyzw, r5.zwxy
mov r6.xy, r5.zwzz
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyzw, t2.xyzw
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyzw, t2.xyzw
add r7.xyzw, v0.xyxy, l(0.000000, 1.000000, 1.000000, 1.000000)
ftoi r7.xyzw, r7.zwxy
mov r8.xy, r7.zwzz
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyzw, t2.xyzw
mov r7.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyzw, t2.xyzw
add r9.xyz, r4.xyzx, -r6.xyzx
dp3 r9.x, |r9.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r10.xyz, r4.xyzx, -r8.xyzx
dp3 r9.y, |r10.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r10.xyz, -r2.xyzx, r4.xyzx
dp3 r9.z, |r10.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r10.xyz, -r0.xyzx, r4.xyzx
dp3 r9.w, |r10.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r10.xyz, -r0.xyzx, r1.xyzx
dp3 r0.w, |r10.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r10.xyz, r0.xyzx, -r3.xyzx
dp3 r1.w, |r10.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r10.xyz, r2.xyzx, -r4.xyzx
dp3 r2.w, |r10.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r10.xyz, r5.xyzx, -r8.xyzx
dp3 r3.w, |r10.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r8.xyz, -r7.xyzx, r8.xyzx
dp3 r4.w, |r8.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
max r4.w, r4.w, r9.y
max r4.w, r2.w, r4.w
max r3.w, r3.w, r4.w
mul r8.x, r3.w, l(0.100000)
max r1.w, r9.y, r1.w
max r0.w, r0.w, r1.w
max r0.w, r2.w, r0.w
mul r8.z, r0.w, l(0.100000)
add r1.xyz, r1.xyzx, -r2.xyzx
dp3 r0.w, |r1.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r0.xyz, r0.xyzx, -r4.xyzx
dp3 r0.x, |r0.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r1.xyz, r2.xyzx, -r5.xyzx
dp3 r0.y, |r1.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r1.xyz, r3.xyzx, -r6.xyzx
dp3 r0.z, |r1.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
add r1.xyz, r6.xyzx, -r7.xyzx
dp3 r1.x, |r1.xyzx|, l(0.299000, 0.587000, 0.114000, 0.000000)
max r0.z, r0.z, r1.x
max r0.z, r0.x, r0.z
max r0.xz, r9.xxxx, r0.xxzx
max r0.x, r0.w, r0.x
max r0.x, r0.y, r0.x
mul r8.yw, r0.zzzx, l(0.000000, 0.100000, 0.000000, 0.100000)
add r0.xyzw, -r8.xyzw, r9.xyzw
lt r0.xyzw, l(0.070000, 0.070000, 0.070000, 0.070000), r0.xyzw
and r0.xyzw, r0.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
dp4 r1.x, r0.wxyz, r0.xyzw
ne r1.x, r1.x, l(0.000000)
dp4 r0.x, r0.xyzw, l(1.000000, 2.000000, 4.000000, 8.000000)
bfi r0.y, l(1), l(4), r1.x, l(0)
itof r0.y, r0.y
add r0.x, r0.y, r0.x
ge r0.y, l(0.000000), r0.x
discard_nz r0.y
mul o0.x, r0.x, l(0.003922)
ret 
// Approximately 86 instruction slots used
