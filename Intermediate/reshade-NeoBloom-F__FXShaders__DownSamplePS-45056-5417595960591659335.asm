//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int _1312;                         // Offset:    0 Size:     4 [unused]
//   float uIntensity;                  // Offset:    4 Size:     4 [unused]
//   float uSaturation;                 // Offset:    8 Size:     4
//   float3 ColorFilter;                // Offset:   16 Size:    12
//   int BloomBlendMode;                // Offset:   28 Size:     4 [unused]
//   float uLensDirtAmount;             // Offset:   32 Size:     4 [unused]
//   int AdaptMode;                     // Offset:   36 Size:     4 [unused]
//   float uAdaptAmount;                // Offset:   40 Size:     4 [unused]
//   float uAdaptSensitivity;           // Offset:   44 Size:     4 [unused]
//   float uAdaptExposure;              // Offset:   48 Size:     4 [unused]
//   bool uAdaptUseLimits;              // Offset:   52 Size:     4 [unused]
//   float2 uAdaptLimits;               // Offset:   56 Size:     8 [unused]
//   float uAdaptTime;                  // Offset:   64 Size:     4 [unused]
//   float uAdaptPrecision;             // Offset:   68 Size:     4 [unused]
//   int uAdaptFormula;                 // Offset:   72 Size:     4 [unused]
//   float uMean;                       // Offset:   76 Size:     4 [unused]
//   float uVariance;                   // Offset:   80 Size:     4 [unused]
//   float uGhostingAmount;             // Offset:   84 Size:     4 [unused]
//   float3 DepthMultiplier;            // Offset:   96 Size:    12
//   float2 DepthRange;                 // Offset:  112 Size:     8
//   float DepthSmoothness;             // Offset:  120 Size:     4
//   float uMaxBrightness;              // Offset:  124 Size:     4
//   bool uNormalizeBrightness;         // Offset:  128 Size:     4 [unused]
//   bool MagicMode;                    // Offset:  132 Size:     4
//   float uSigma;                      // Offset:  136 Size:     4 [unused]
//   float uPadding;                    // Offset:  140 Size:     4 [unused]
//   float FrameTime;                   // Offset:  144 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __srgbV__ReShade__BackBufferTex    texture  float4          2d             t1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[7].w
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t1.xyzw, s0
dp3 r0.y, r1.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r1.xyz, -r0.yyyy, r1.xyzx
mad_sat r0.yzw, r1.xxyz, cb0[0].zzzz, r0.yyyy
mul r0.yzw, r0.yyzw, cb0[1].xxyz
mov o0.w, r1.w
max r1.x, r0.w, r0.z
max r1.x, r0.y, r1.x
add r1.y, -r1.x, l(1.000000)
max r0.x, r0.x, r1.y
div r0.x, r1.x, r0.x
mul r1.xyz, r0.xxxx, r0.yzwy
log r0.xyz, |r0.yzwy|
mul r0.w, cb0[7].w, l(0.010000)
mul r0.xyz, r0.xyzx, r0.wwww
exp r0.xyz, r0.xyzx
movc r0.xyz, cb0[8].yyyy, r0.xyzx, r1.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div r0.w, r0.w, r1.x
add r1.x, r0.w, cb0[7].z
add r1.y, r0.w, -cb0[7].z
add r1.x, -r1.y, r1.x
add r1.y, -r1.y, cb0[7].x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul_sat r1.x, r1.x, r1.y
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.z, r1.x, r1.y
mad r1.x, -r1.y, r1.x, l(1.000000)
add r2.xyz, cb0[6].xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.y, r1.z, r2.x, l(1.000000)
mul r0.xyz, r0.xyzx, r1.yyyy
add r1.y, -cb0[7].z, cb0[7].y
add r0.w, r0.w, -r1.y
add r1.z, cb0[7].z, cb0[7].y
add r1.y, -r1.y, r1.z
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul_sat r0.w, r0.w, r1.y
mad r1.y, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mad r1.z, -r1.y, r0.w, l(1.000000)
mul r0.w, r0.w, r1.y
mad r0.w, r0.w, r2.z, l(1.000000)
mul r1.x, r1.z, r1.x
mad r1.x, r1.x, r2.y, l(1.000000)
mul r0.xyz, r0.xyzx, r1.xxxx
mul o0.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 50 instruction slots used
