//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Sigma0;                      // Offset:    0 Size:     4 [unused]
//   float Sigma1;                      // Offset:    4 Size:     4 [unused]
//   int Anisotropy;                    // Offset:    8 Size:     4 [unused]
//   float EdgeThreshold;               // Offset:   12 Size:     4
//   float EdgeStrength;                // Offset:   16 Size:     4
//   bool QuantizeLuma;                 // Offset:   20 Size:     4
//   int LevelCount;                    // Offset:   24 Size:     4
//   bool IgnoreSky;                    // Offset:   28 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__BackBuffer                   texture  float4          2d             t4      1 
// __V__Sobel                        texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t8.xyzw, s0
add r0.y, -r0.x, l(1.000000)
add r0.z, -cb0[0].w, l(1.000000)
lt r0.y, r0.z, r0.y
movc r0.x, r0.y, l(0), r0.x
add r0.y, -cb0[1].x, l(2.000000)
mul r0.y, r0.y, l(-1.442695)
exp r0.y, r0.y
mul r0.x, r0.y, r0.x
itof r0.y, cb0[1].z
mul r0.z, r0.y, r0.x
round_ne r0.z, r0.z
div r0.z, r0.z, r0.y
movc r0.x, cb0[1].y, r0.z, r0.x
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
mul r1.xyzw, r0.xxxx, r1.xyzw
ine r0.x, cb0[1].y, l(0)
ieq r0.x, r0.x, l(-1)
if_nz r0.x
  sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
  mad r0.z, -r0.x, l(999.000000), l(1000.000000)
  div r0.x, r0.x, r0.z
  ieq r0.z, cb0[1].w, l(0)
  lt r0.x, r0.x, l(1.000000)
  or r0.x, r0.x, r0.z
  dp3 r0.z, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
  mul r0.z, r0.y, r0.z
  round_ne r0.z, r0.z
  div r0.y, r0.z, r0.y
  mul r0.zw, r1.yyyy, l(0.000000, 0.000000, 0.331264, 0.418688)
  mad r0.z, r1.x, l(-0.168736), -r0.z
  mad r0.z, r1.z, l(0.500000), r0.z
  mad r0.w, r1.x, l(0.500000), -r0.w
  mad r0.w, -r1.z, l(0.081312), r0.w
  mad r2.x, r0.w, l(1.402000), r0.y
  mad r3.x, -r0.z, l(0.344136), r0.y
  mad r2.y, -r0.w, l(0.714136), r3.x
  mad r2.zw, r0.zzzz, l(0.000000, 0.000000, 1.772000, 1.772000), r0.yyyy
  movc o0.xyzw, r0.xxxx, r2.xyzw, r1.xyzw
else 
  mov o0.xyzw, r1.xyzw
endif 
ret 
// Approximately 44 instruction slots used
