//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Hints;                         // Offset:    0 Size:     4 [unused]
//   int Credits;                       // Offset:    4 Size:     4 [unused]
//   int Preprocessordefinitionstooltip;// Offset:    8 Size:     4 [unused]
//   float Timer;                       // Offset:   12 Size:     4 [unused]
//   float Frame;                       // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__SSSR_FilterTex0              texture  float4          2d            t16      1 
// __V__SSSR_NormTex                 texture  float4          2d            t26      1 
// __V__SSSR_HLTex0                  texture  float4          2d            t34      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t26
dcl_resource_texture2d (float,float,float,float) t34
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
dcl_indexableTemp x0[8], 4
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t34.xyzw, s0
add r0.y, cb0[1].x, cb0[1].x
ge r0.y, r0.y, -r0.y
movc r0.yz, r0.yyyy, l(0,2.000000,0.500000,0), l(0,-2.000000,-0.500000,0)
mul r0.z, r0.z, cb0[1].x
frc r0.z, r0.z
mul r0.y, r0.z, r0.y
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), r0.y
add r0.z, v0.y, l(1.000000)
movc r0.y, r0.y, r0.z, v0.y
add r0.z, v0.x, v0.x
ge r0.z, r0.z, -r0.z
movc r0.zw, r0.zzzz, l(0,0,2.000000,0.500000), l(0,0,-2.000000,-0.500000)
mul r0.w, r0.w, v0.x
frc r0.w, r0.w
mad r0.y, r0.z, r0.w, r0.y
add r0.z, r0.y, r0.y
ge r0.z, r0.z, -r0.z
movc r0.zw, r0.zzzz, l(0,0,2.000000,0.500000), l(0,0,-2.000000,-0.500000)
mul r0.y, r0.w, r0.y
frc r0.y, r0.y
mul r0.y, r0.y, r0.z
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t26.xyzw, s0, l(0.000000)
mad r0.zw, v1.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r2.x, r1.w, l(1000.000000)
mul r2.xy, r0.zwzz, r2.xxxx
mov r2.z, r1.w
mul r2.xyz, r2.xyzx, l(0.872665, 0.872665, 872.664612, 0.000000)
dp3 r0.z, r2.xyzx, r2.xyzx
rsq r0.z, r0.z
mul r2.xyz, r0.zzzz, r2.xyzx
dp3 r0.z, r1.xyzx, r2.xyzx
mul r0.z, r0.z, r0.z
mul r0.xw, r0.xxxx, l(0.250000, 0.000000, 0.000000, 0.062500)
mov_sat r0.x, r0.x
sqrt r0.x, r0.x
mad r0.x, r0.x, l(-0.057000), l(0.060000)
mul r2.xy, r0.xxxx, l(100.000000, 0.400000, 0.000000, 0.000000)
min r0.x, r2.x, l(1.000000)
add r0.x, -r0.x, l(1.000000)
min r0.w, r0.w, l(1.000000)
mad r0.w, r0.w, l(-2.000000), l(2.000000)
round_ne r0.w, r0.w
mul r2.xz, r0.wwww, l(0.000521, 0.000000, 0.000926, 0.000000)
mad r3.xy, r0.yyyy, r2.xzxx, r2.xzxx
mul r4.xy, r3.xyxx, l(0.707107, 0.707107, 0.000000, 0.000000)
mov x0[0].xy, -r4.xyxx
mov r3.z, l(0)
mov x0[1].xy, r3.zyzz
mov r4.zw, -r4.yyyx
mov x0[2].xy, r4.xzxx
mov r3.w, -r3.x
mov x0[3].xy, r3.wzww
mov x0[4].xy, r3.xzxx
mov x0[5].xy, r4.wyww
mul r0.yw, r3.zzzy, l(0.000000, 1.000000, 0.000000, -1.000000)
mov x0[6].xy, r0.ywyy
mov x0[7].xy, r4.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r2.xzw, v1.xyxx, t16.xwyz, s0, l(0.000000)
mov r3.xyz, r2.xzwx
mov r0.yw, l(0,1,0,0)
loop 
  ilt r3.w, l(7), r0.w
  breakc_nz r3.w
  mov r4.xy, x0[r0.w + 0].xyxx
  add r4.xy, r4.xyxx, v1.xyxx
  mov x0[r0.w + 0].xy, r4.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t26.xyzw, s0, l(0.000000)
  dp3 r3.w, r5.xyzx, r1.xyzx
  lt r3.w, r0.x, r3.w
  add r4.z, -r1.w, r5.w
  mul r4.z, r0.z, |r4.z|
  lt r4.z, r4.z, r2.y
  and r3.w, r3.w, r4.z
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t16.xyzw, s0, l(0.000000)
  and r5.xy, r3.wwww, l(0x3f800000, 1, 0, 0)
  mad r3.xyz, r4.xyzx, r5.xxxx, r3.xyzx
  iadd r0.y, r0.y, r5.y
  iadd r0.w, r0.w, l(1)
endloop 
itof r0.x, r0.y
div r0.xyz, r3.xyzx, r0.xxxx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t16.xyzw, s0
max o0.xyzw, r0.xyzw, l(0.000001, 0.000001, 0.000001, 0.000001)
ret 
// Approximately 85 instruction slots used
