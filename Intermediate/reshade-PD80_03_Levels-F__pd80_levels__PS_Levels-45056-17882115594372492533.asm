//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8
//   bool enable_dither;                // Offset:    8 Size:     4
//   float dither_strength;             // Offset:   12 Size:     4
//   float3 ib;                         // Offset:   16 Size:    12
//   float3 iw;                         // Offset:   32 Size:    12
//   float3 ob;                         // Offset:   48 Size:    12
//   float3 ow;                         // Offset:   64 Size:    12
//   float ig;                          // Offset:   76 Size:     4
//   float2 pingpong;                   // Offset:   80 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
mul r0.xy, v1.xyxx, l(3.750000, 2.109375, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t6.xyzw, s1
add r1.x, cb0[0].x, l(2.000000)
mad r0.xyzw, r1.xxxx, l(0.618034, 0.618034, 0.618034, 0.618034), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r0.xyzw, r0.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
mul r1.x, cb0[0].w, l(0.003922)
mul r0.xyzw, r0.xyzw, r1.xxxx
movc r0.xyzw, cb0[0].zzzz, r0.xyzw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
add_sat r1.xyz, r0.wwww, r1.xyzx
add_sat r2.xyz, r0.xyzx, cb0[1].xyzx
add r1.xyz, r1.xyzx, -r2.xyzx
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add_sat r3.xyz, r0.yzxy, cb0[2].xyzx
add r2.xyz, -r2.xyzx, r3.xyzx
max r2.xyz, r2.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
div r1.xyz, r1.xyzx, r2.xyzx
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[4].wwww
exp r1.xyz, r1.xyzx
add_sat r2.xyz, r0.wxzw, cb0[4].xyzx
add_sat r0.xyz, r0.zxyz, cb0[3].xyzx
add r2.xyz, -r0.xyzx, r2.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad o0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 29 instruction slots used
