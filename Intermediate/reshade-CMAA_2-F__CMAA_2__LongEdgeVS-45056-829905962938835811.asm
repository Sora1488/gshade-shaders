//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__CMAA_2__ZShapes              texture  float4          2d             t0      1 
// __V__CMAA_2__ZShapeCoords         texture  float4          2d            t12      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VERTEXID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TANGENT                  0   xyzw        2     NONE   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_output o2.xyzw
dcl_temps 6
ushr r0.x, v0.x, l(1)
udiv r0.x, r1.x, r0.x, l(1920)
mov r1.y, r0.x
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.x, r1.xyzw, t12.xyzw
ushr r1.x, r0.x, l(16)
and r1.y, r0.x, l(0x0000ffff)
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyzw, r1.xyzw, t0.xyzw
ge r1.z, l(0.015294), r0.w
if_nz r1.z
  mov o0.xyzw, l(-10.000000,-10.000000,-10.000000,-10.000000)
  mov o2.xyzw, r0.xyzw
  mov o1.xy, l(-10.000000,-10.000000,0,0)
  ret 
else 
  mul r3.xyz, r0.xywx, l(255.500000, 255.500000, 255.500000, 0.000000)
  ftou r3.xyz, r3.xyzx
  ubfe r3.z, l(1), l(1), r3.z
  utof r3.xy, r3.xyxx
  add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mul r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  round_ni r3.xy, r3.xyxx
  add r3.x, -r3.x, l(1.000000)
  movc r3.zw, r3.zzzz, l(0,0,1.000000,0), l(0,0,0,-1.000000)
  and r4.x, v0.x, l(1)
  mul r4.yz, r3.yyyy, r3.zzwz
  mul r3.zw, r3.xxxx, r3.zzzw
  movc r3.zw, r4.xxxx, r4.yyyz, r3.zzzw
  utof r1.xy, r1.xyxx
  add r1.xy, r3.zwzz, r1.xyxx
  add r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r5.xy, r1.xyxx, l(0.001042, -0.001852, 0.000000, 0.000000), l(-1.000000, 1.000000, 0.000000, 0.000000)
  movc r1.xy, r4.xxxx, r3.yyyy, r3.xxxx
  mov r5.zw, l(0,0,0,1.000000)
  mov o0.xyzw, r5.xyzw
  mov o1.xy, r1.xyxx
endif 
mov o2.xyzw, r0.xyzw
ret 
// Approximately 40 instruction slots used
