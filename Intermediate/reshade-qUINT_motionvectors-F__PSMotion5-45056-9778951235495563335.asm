//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   uint FRAME_COUNT;                  // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__FeatureCurr                  texture  float4          2d             t8      1 
// __V__FeaturePrev                  texture  float4          2d            t10      1 
// __V__MotionTexCur6                texture  float4          2d            t16      1 
// __V__MVJitterTex                  texture  float4          2d            t30      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 1.000000, 0, 0, 0},
                              { 0, 1.000000, 0, 0},
                              { 0, 0, 1.000000, 0},
                              { 0, 0, 0, 1.000000} }
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t30
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 15
dcl_indexableTemp x0[9], 4
and r0.x, cb0[0].x, l(15)
utof r0.y, r0.x
mad r0.y, r0.y, l(0.618034), l(1.057000)
frc r0.y, r0.y
mul r0.y, r0.y, l(1.570796)
sincos r1.x, r2.x, r0.y
sincos r2.y, null, -r0.y
mov r2.z, r1.x
mul r0.yzw, r2.xxyz, l(0.000000, 4.000000, 4.000000, 4.000000)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r1.xy, v1.xyxx, t8.xyzw, s0, l(0.000000)
mov r2.xyz, l(0,0,0.000001,0)
mov r1.z, l(-1)
loop 
  ilt r1.w, l(1), r1.z
  breakc_nz r1.w
  itof r3.x, r1.z
  imax r1.w, -r1.z, r1.z
  dp3 r1.w, l(1.000000, 0.850000, 0.650000, 0.000000), icb[r1.w + 0].xyzx
  mov r4.xyz, r2.xyzx
  mov r2.w, l(-1)
  loop 
    ilt r3.z, l(1), r2.w
    breakc_nz r3.z
    itof r3.y, r2.w
    dp2 r5.x, r3.xyxx, r0.ywyy
    dp2 r5.y, r3.yxyy, r0.yzyy
    mad r3.yz, r5.xxyx, l(0.000000, 0.033333, 0.059259, 0.000000), v1.xxyx
    sample_l_aoffimmi_indexable(6,0,0)(texture2d)(float,float,float,float) r3.w, r3.yzyy, t8.xzwy, s0, l(0.000000)
    sample_l_aoffimmi_indexable(0,0,0)(texture2d)(float,float,float,float) r5.xyzw, r3.yzyy, t16.xyzw, s0, l(0.000000)
    add r3.y, -r1.y, r3.w
    mad_sat r3.zw, -r5.wwwz, l(0.000000, 0.000000, 4.000000, 128.000000), l(0.000000, 0.000000, 1.000000, 1.000000)
    dp2 r4.w, r5.xyxx, r5.xyxx
    mad r3.y, |r3.y|, l(4.000000), r3.z
    mad r3.y, r4.w, l(4.000000), r3.y
    add r3.y, r3.w, r3.y
    exp r3.y, -r3.y
    mul r3.y, r1.w, r3.y
    imax r3.z, -r2.w, r2.w
    dp3 r3.z, l(1.000000, 0.850000, 0.650000, 0.000000), icb[r3.z + 0].xyzx
    mul r3.w, r3.z, r3.y
    mad r4.xy, r5.xyxx, r3.wwww, r4.xyxx
    mad r4.z, r3.y, r3.z, r4.z
    iadd r2.w, r2.w, l(1)
  endloop 
  mov r2.xyz, r4.xyzx
  iadd r1.z, r1.z, l(1)
endloop 
div r0.yz, r2.xxyx, r2.zzzz
add r2.xyzw, v1.xyxy, l(-0.016667, -0.029630, -0.016667, 0.000000)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r1.zw, r2.xyxx, t8.zwxy, s0, l(0.000000)
add r3.xyzw, r0.yzyz, r2.xyzw
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r3.xy, r3.xyxx, t10.xyzw, s0, l(0.000000)
mov x0[0].xy, r1.zwzz
mul r4.yz, r3.xxyx, r3.xxyx
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t8.zwxy, s0, l(0.000000)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r3.zw, r3.zwzz, t10.zwxy, s0, l(0.000000)
mov x0[1].xy, r2.zwzz
mul r5.xy, r2.zwzz, r2.zwzz
mad r5.xy, r1.zwzz, r1.zwzz, r5.xyxx
mul r6.yz, r3.zzwz, r3.zzwz
mov r4.x, r3.x
mov r6.x, r3.z
add r4.xyz, r4.xyzx, r6.xyzx
mul r2.zw, r2.zzzw, r3.zzzw
mad r1.zw, r1.zzzw, r3.xxxy, r2.zzzw
add r3.xyzw, v1.xyxy, l(-0.016667, 0.029630, 0.000000, -0.029630)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r3.xyxx, t8.zwxy, s0, l(0.000000)
add r6.xyzw, r0.yzyz, r3.xyzw
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r3.xy, r6.xyxx, t10.xyzw, s0, l(0.000000)
mov x0[2].xy, r2.zwzz
mad r5.xy, r2.zwzz, r2.zwzz, r5.xyxx
mul r7.yz, r3.xxyx, r3.xxyx
mov r7.x, r3.x
add r4.xyz, r4.xyzx, r7.xyzx
mad r1.zw, r2.zzzw, r3.xxxy, r1.zzzw
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r3.zwzz, t8.zwxy, s0, l(0.000000)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r3.xy, r6.zwzz, t10.xyzw, s0, l(0.000000)
mov x0[3].xy, r2.zwzz
mad r3.zw, r2.zzzw, r2.zzzw, r5.xxxy
mul r5.yz, r3.xxyx, r3.xxyx
mov r5.x, r3.x
add r4.xyz, r4.xyzx, r5.xyzx
mad r1.zw, r2.zzzw, r3.xxxy, r1.zzzw
add r2.zw, r0.yyyz, v1.xxxy
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r2.zwzz, t10.zwxy, s0, l(0.000000)
mov x0[4].xy, r1.xyxx
mad r3.xy, r1.xyxx, r1.xyxx, r3.zwzz
mul r5.yz, r2.zzwz, r2.zzwz
mov r5.x, r2.z
add r4.xyz, r4.xyzx, r5.xyzx
mad r1.xy, r1.xyxx, r2.zwzz, r1.zwzz
add r5.xyzw, v1.xyxy, l(0.000000, 0.029630, 0.016667, -0.029630)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r1.zw, r5.xyxx, t8.zwxy, s0, l(0.000000)
add r6.xyzw, r0.yzyz, r5.xyzw
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r6.xyxx, t10.zwxy, s0, l(0.000000)
mov x0[5].xy, r1.zwzz
mad r3.xy, r1.zwzz, r1.zwzz, r3.xyxx
mul r7.yz, r2.zzwz, r2.zzwz
mov r7.x, r2.z
add r4.xyz, r4.xyzx, r7.xyzx
mad r1.xy, r1.zwzz, r2.zwzz, r1.xyxx
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r1.zw, r5.zwzz, t8.zwxy, s0, l(0.000000)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r6.zwzz, t10.zwxy, s0, l(0.000000)
mov x0[6].xy, r1.zwzz
mad r3.xy, r1.zwzz, r1.zwzz, r3.xyxx
mul r5.yz, r2.zzwz, r2.zzwz
mov r5.x, r2.z
add r4.xyz, r4.xyzx, r5.xyzx
mad r1.xy, r1.zwzz, r2.zwzz, r1.xyxx
add r5.xyzw, v1.xyxy, l(0.016667, 0.000000, 0.016667, 0.029630)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r1.zw, r5.xyxx, t8.zwxy, s0, l(0.000000)
add r6.xyzw, r0.yzyz, r5.xyzw
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r6.xyxx, t10.zwxy, s0, l(0.000000)
mov x0[7].xy, r1.zwzz
mad r3.xy, r1.zwzz, r1.zwzz, r3.xyxx
mul r7.yz, r2.zzwz, r2.zzwz
mov r7.x, r2.z
add r4.xyz, r4.xyzx, r7.xyzx
mad r1.xy, r1.zwzz, r2.zwzz, r1.xyxx
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r1.zw, r5.zwzz, t8.zwxy, s0, l(0.000000)
sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r2.zw, r6.zwzz, t10.zwxy, s0, l(0.000000)
mov x0[8].xy, r1.zwzz
mad r3.xy, r1.zwzz, r1.zwzz, r3.xyxx
mul r5.yz, r2.zzwz, r2.zzwz
mov r5.x, r2.z
add r4.xyz, r4.xyzx, r5.xyzx
mad r1.xy, r1.zwzz, r2.zwzz, r1.xyxx
mul r3.xy, r3.xyxx, l(0.111111, 0.111111, 0.000000, 0.000000)
mov r3.z, l(0.111111)
mul r4.xyz, r3.zzyz, r4.xyzx
mul r1.xy, r1.xyxx, l(0.111111, 0.111111, 0.000000, 0.000000)
mul r1.zw, r3.xxxz, r4.yyyz
rsq r1.zw, r1.zzzw
mul r1.xy, r1.zwzz, r1.xyxx
min_sat r0.w, r1.y, r1.x
mad r1.x, r4.x, r4.x, -r4.y
ftou r1.yz, v0.xxyx
and r4.xy, r1.yzyy, l(31, 31, 0, 0)
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.y, r4.xyzw, t30.yxzw
imul null, r0.x, r0.x, l(5)
ishl r0.x, r0.x, l(1)
utof r0.x, r0.x
mad r0.x, r0.x, l(0.618034), r1.y
frc r0.x, r0.x
mul r0.x, r0.x, l(6.283000)
sincos r0.x, r4.x, r0.x
lt r1.y, r0.w, l(0.999999)
mov r5.xy, l(0,0,0,0)
mov r6.xy, l(0,0,0,0)
mov r6.z, r0.x
mov r6.w, r4.x
mov r1.zw, r0.yyyz
mov r2.zw, l(0,0,0.016667,0.029630)
mov r3.w, r0.w
mov r4.y, |r1.x|
mov r4.z, l(0)
mov r4.w, r1.y
loop 
  breakc_z r4.w
  lt r7.x, r3.w, l(0.999999)
  add r7.yz, r1.zzwz, r2.xxyx
  mov r8.zw, r6.xxxy
  mov r5.zw, r6.zzzw
  mov r8.x, r3.w
  mov r8.y, r4.y
  mov r7.w, l(1)
  mov r9.x, r7.x
  loop 
    breakc_z r9.x
    dp2 r10.x, r5.zwzz, l(-0.737369, -0.675490, 0.000000, 0.000000)
    dp2 r10.y, r5.zwzz, l(0.675490, -0.737369, 0.000000, 0.000000)
    mul r11.zw, r2.zzzw, r10.xxxy
    mad r9.yz, r10.xxyx, r2.zzwz, r7.yyzy
    mov r12.xyz, l(0,0,0,0)
    mov r10.zw, l(0,0,0,0)
    mov r9.w, l(0)
    loop 
      uge r12.w, r9.w, l(9)
      breakc_nz r12.w
      udiv r13.x, r14.x, r9.w, l(3)
      utof r13.x, r13.x
      utof r13.y, r14.x
      mad r13.xy, r13.xyxx, l(0.016667, 0.029630, 0.000000, 0.000000), r9.yzyy
      sample_l_aoffimmi_indexable(5,0,0)(texture2d)(float,float,float,float) r13.xy, r13.xyxx, t10.xyzw, s0, l(0.000000)
      mul r14.yz, r13.xxyx, r13.xxyx
      mov r14.x, r13.x
      add r12.xyz, r12.xyzx, r14.xyzx
      mov r13.zw, x0[r9.w + 0].xxxy
      mad r10.zw, r13.xxxy, r13.zzzw, r10.zzzw
      iadd r9.w, r9.w, l(1)
    endloop 
    mul r9.yzw, r3.zzzy, r12.xxyz
    mul r13.xy, r10.zwzz, l(0.111111, 0.111111, 0.000000, 0.000000)
    mul r13.zw, r3.xxxz, r9.zzzw
    rsq r13.zw, r13.zzzw
    mul r13.xy, r13.zwzz, r13.xyxx
    min_sat r11.x, r13.y, r13.x
    lt r9.w, r8.x, r11.x
    mad r9.y, r9.y, r9.y, -r9.z
    mov r11.y, |r9.y|
    movc r8.xyzw, r9.wwww, r11.xyzw, r8.xyzw
    iadd r7.w, r7.w, l(1)
    ilt r9.y, r7.w, l(5)
    lt r9.z, r8.x, l(0.999999)
    and r9.x, r9.z, r9.y
    mov r5.zw, r10.xxxy
  endloop 
  mov r3.w, r8.x
  mov r4.y, r8.y
  add r1.zw, r1.zzzw, r8.zzzw
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  iadd r4.z, r4.z, l(1)
  ilt r7.x, r4.z, l(2)
  lt r7.y, r3.w, l(0.999999)
  and r4.w, r7.y, r7.x
  mov r6.xyzw, r5.xyzw
endloop 
mov o0.xy, r1.zwzz
sqrt o0.z, r4.y
mul r0.x, r3.w, r3.w
mul o0.w, r0.x, r0.x
ret 
// Approximately 223 instruction slots used
