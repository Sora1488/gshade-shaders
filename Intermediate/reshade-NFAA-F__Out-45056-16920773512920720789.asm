//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__BackBufferTex                texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
add r0.xyzw, v1.xyxy, l(0.000000, -0.000926, 0.000000, 0.000926)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t0.xyzw, s0
dp3 r0.x, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.zwzz, t0.wxyz, s0
dp3 r0.y, r0.yzwy, l(0.333000, 0.333000, 0.333000, 0.000000)
add r1.xyzw, v1.xyxy, l(-0.000521, 0.000000, 0.000521, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t0.xyzw, s0
dp3 r0.z, r2.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t0.xyzw, s0
dp3 r0.w, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
add r1.xz, -r0.yyyy, r0.xxxx
add r0.x, -r0.z, r0.w
mov r1.yw, -r0.xxxx
dp2 r0.x, r1.zwzz, r1.zwzz
sqrt r0.x, r0.x
lt r0.y, r0.x, l(0.062500)
if_nz r0.y
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
else 
  mul r0.y, r0.x, l(0.500000)
  div r3.xyzw, l(0.000521, 0.000926, 0.000521, 0.000926), r0.yyyy
  mul r1.xyzw, r1.xyzw, r3.xyzw
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t0.xyzw, s0
  mad r4.xyzw, r1.xyzw, l(0.500000, -0.500000, 0.900000, 0.900000), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.xyxx, t0.xyzw, s0
  mad r1.xyzw, -r1.xyzw, l(0.500000, -0.500000, 0.900000, 0.900000), v1.xyxy
  sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r1.xyxx, t0.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.zwzz, t0.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t0.xyzw, s0
  mad r3.xyzw, r5.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000), r3.xyzw
  mad r3.xyzw, r6.xyzw, l(0.900000, 0.900000, 0.900000, 0.900000), r3.xyzw
  mad r3.xyzw, r4.xyzw, l(0.750000, 0.750000, 0.750000, 0.750000), r3.xyzw
  mad r1.xyzw, r1.xyzw, l(0.750000, 0.750000, 0.750000, 0.750000), r3.xyzw
  mul r2.xyzw, r1.xyzw, l(0.232558, 0.232558, 0.232558, 0.232558)
endif 
lt r0.y, l(0.010000), r0.x
mad r0.x, -r0.x, l(2.500000), l(1.000000)
movc r0.x, r0.y, r0.x, l(1.000000)
add r0.y, -r0.x, l(1.000000)
add r0.x, -r0.y, r0.x
max r0.x, r0.x, l(0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
add r1.xyzw, -r2.xyzw, r1.xyzw
mad o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
ret 
// Approximately 45 instruction slots used
