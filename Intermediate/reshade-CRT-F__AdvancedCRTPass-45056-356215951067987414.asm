//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Amount;                      // Offset:    0 Size:     4
//   float Resolution;                  // Offset:    4 Size:     4
//   float Gamma;                       // Offset:    8 Size:     4
//   float MonitorGamma;                // Offset:   12 Size:     4
//   float Brightness;                  // Offset:   16 Size:     4
//   int ScanlineIntensity;             // Offset:   20 Size:     4
//   bool ScanlineGaussian;             // Offset:   24 Size:     4
//   bool Curvature;                    // Offset:   28 Size:     4
//   float CurvatureRadius;             // Offset:   32 Size:     4
//   float CornerSize;                  // Offset:   36 Size:     4
//   float ViewerDistance;              // Offset:   40 Size:     4
//   float2 Angle;                      // Offset:   48 Size:     8
//   float Overscan;                    // Offset:   56 Size:     4
//   bool Oversample;                   // Offset:   60 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 17
mul r0.x, cb0[0].y, l(256.000000)
round_pi r0.x, r0.x
if_nz cb0[1].w
  add r0.yz, v1.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
  mul r0.yz, r0.yyzy, l(0.000000, 1.000000, 0.750000, 0.000000)
  sincos r1.xy, r2.xy, cb0[3].xyxx
  mul r1.zw, r1.xxxy, -cb0[2].xxxx
  div r2.zw, cb0[2].xxxz, cb0[2].zzzx
  mul r0.w, r2.x, r2.z
  mad r0.w, r0.w, r2.y, l(1.000000)
  div r3.xy, r1.zwzz, r0.wwww
  dp2 r0.w, r3.xyxx, r3.xyxx
  mul r3.zw, cb0[2].zzzx, cb0[2].zzzz
  mad r0.w, cb0[2].z, cb0[2].z, r0.w
  dp2 r2.z, r3.xyxx, r1.xyxx
  mul r4.x, r2.x, cb0[2].z
  mad r2.z, -r4.x, r2.y, r2.z
  mad r2.z, cb0[2].x, r2.z, -r3.z
  add r4.y, r2.z, r2.z
  mul r3.w, r2.x, r3.w
  dp2 r3.w, r3.wwww, r2.yyyy
  mad r3.w, cb0[2].z, cb0[2].z, r3.w
  mul r4.z, r0.w, r3.w
  mul r4.z, r4.z, l(4.000000)
  mad r4.y, r4.y, r4.y, -r4.z
  sqrt r4.y, r4.y
  mad r2.z, -r2.z, l(2.000000), -r4.y
  add r0.w, r0.w, r0.w
  div r0.w, r2.z, r0.w
  mad r3.xy, r0.wwww, r3.xyxx, -r1.zwzz
  div r3.xy, r3.xyxx, cb0[2].xxxx
  sincos null, r4.yz, cb0[3].xxyx
  div r5.xy, r1.xyxx, r4.yzyy
  div r5.zw, r3.xxxy, r4.yyyz
  dp2 r0.w, r5.xyxx, r5.xyxx
  add r0.w, r0.w, l(1.000000)
  dp2 r2.z, r5.zwzz, r5.xyxx
  mul r4.w, r2.z, l(-2.000000)
  dp2 r5.z, r5.zwzz, r5.zwzz
  add r5.z, r5.z, l(-1.000000)
  mul r5.w, r0.w, l(4.000000)
  mul r5.z, r5.z, r5.w
  mad r4.w, r4.w, r4.w, -r5.z
  sqrt r4.w, r4.w
  mad r2.z, -r2.z, l(-2.000000), r4.w
  add r0.w, r0.w, r0.w
  div r2.z, r2.z, r0.w
  mad r3.xy, -r2.zzzz, r1.xyxx, r3.xyxx
  div r3.xy, r3.xyxx, r4.yzyy
  add r4.w, -|r2.z|, l(1.000000)
  sqrt r4.w, r4.w
  mad r5.z, |r2.z|, l(-0.018729), l(0.074261)
  mad r5.z, r5.z, |r2.z|, l(-0.212114)
  mad r5.z, r5.z, |r2.z|, l(1.570729)
  mul r6.x, r4.w, r5.z
  mad r6.x, r6.x, l(-2.000000), l(3.141593)
  lt r2.z, r2.z, -r2.z
  and r2.z, r2.z, r6.x
  mad r2.z, r5.z, r4.w, r2.z
  mul r2.z, r2.z, cb0[2].x
  mul r3.xy, r2.zzzz, r3.xyxx
  div r2.z, r2.z, cb0[2].x
  sincos r2.z, null, r2.z
  div r6.yz, r3.yyxy, r2.zzzz
  mov r6.xw, l(-0.500000,0,0,-0.375000)
  dp2 r2.z, r6.xyxx, r6.xyxx
  sqrt r2.z, r2.z
  div r3.x, r2.z, cb0[2].x
  sincos r3.x, r7.x, r3.x
  div r2.z, r3.x, r2.z
  mul r3.xy, r2.zzzz, r6.xyxx
  add r2.z, -r7.x, l(1.000000)
  mul r4.w, r2.x, r2.z
  mad r4.w, r4.w, r2.y, r2.w
  dp2 r3.y, r3.xyxx, r1.xyxx
  add r3.y, r3.y, r4.w
  mul r2.z, r1.x, r2.z
  mad r2.z, r3.x, r2.x, -r2.z
  mul r2.z, r2.z, cb0[2].z
  div r3.x, r2.z, r3.y
  dp2 r2.z, r6.zwzz, r6.zwzz
  sqrt r2.z, r2.z
  div r4.w, r2.z, cb0[2].x
  sincos r7.x, r8.x, r4.w
  div r2.z, r7.x, r2.z
  mul r7.xy, r2.zzzz, r6.zwzz
  add r2.z, -r8.x, l(1.000000)
  mul r4.w, r2.x, r2.z
  mad r4.w, r4.w, r2.y, r2.w
  dp2 r5.z, r7.xyxx, r1.xyxx
  add r4.w, r4.w, r5.z
  mul r2.z, r1.y, r2.z
  mad r2.z, r7.y, r2.y, -r2.z
  mul r2.z, r2.z, cb0[2].z
  div r3.y, r2.z, r4.w
  mul r3.xy, r3.xyxx, l(1.000000, 1.333333, 0.000000, 0.000000)
  mov r6.xw, l(0.500000,0,0,0.375000)
  dp2 r2.z, r6.xyxx, r6.xyxx
  sqrt r2.z, r2.z
  div r4.w, r2.z, cb0[2].x
  sincos r7.x, r8.x, r4.w
  div r2.z, r7.x, r2.z
  mul r6.xy, r2.zzzz, r6.xyxx
  add r2.z, -r8.x, l(1.000000)
  mul r4.w, r2.x, r2.z
  mad r4.w, r4.w, r2.y, r2.w
  dp2 r5.z, r6.xyxx, r1.xyxx
  add r4.w, r4.w, r5.z
  mul r2.z, r1.x, r2.z
  mad r2.z, r6.x, r2.x, -r2.z
  mul r2.z, r2.z, cb0[2].z
  div r6.x, r2.z, r4.w
  dp2 r2.z, r6.zwzz, r6.zwzz
  sqrt r2.z, r2.z
  div r4.w, r2.z, cb0[2].x
  sincos r7.x, r8.x, r4.w
  div r2.z, r7.x, r2.z
  mul r6.zw, r2.zzzz, r6.zzzw
  add r2.z, -r8.x, l(1.000000)
  mul r2.x, r2.x, r2.z
  mad r2.x, r2.x, r2.y, r2.w
  dp2 r2.w, r6.zwzz, r1.xyxx
  add r2.x, r2.w, r2.x
  mul r2.z, r1.y, r2.z
  mad r2.z, r6.w, r2.y, -r2.z
  mul r2.z, r2.z, cb0[2].z
  div r6.y, r2.z, r2.x
  mad r2.xz, r6.xxyx, l(1.000000, 0.000000, 1.333333, 0.000000), -r3.xxyx
  max r2.x, r2.z, r2.x
  mad r2.zw, r6.xxxy, l(0.000000, 0.000000, 1.000000, 1.333333), r3.xxxy
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.375000)
  mad r0.yz, r0.yyzy, r2.xxxx, r2.zzwz
  dp2 r2.x, r0.yzyy, r0.yzyy
  mad r2.x, cb0[2].z, cb0[2].z, r2.x
  dp2 r2.z, r0.yzyy, r1.xyxx
  mad r2.y, -r4.x, r2.y, r2.z
  mad r2.y, cb0[2].x, r2.y, -r3.z
  add r2.z, r2.y, r2.y
  mul r2.w, r2.x, r3.w
  mul r2.w, r2.w, l(4.000000)
  mad r2.z, r2.z, r2.z, -r2.w
  sqrt r2.z, r2.z
  mad r2.y, -r2.y, l(2.000000), -r2.z
  add r2.x, r2.x, r2.x
  div r2.x, r2.y, r2.x
  mad r0.yz, r2.xxxx, r0.yyzy, -r1.zzwz
  div r0.yz, r0.yyzy, cb0[2].xxxx
  div r1.zw, r0.yyyz, r4.yyyz
  dp2 r2.x, r1.zwzz, r5.xyxx
  mul r2.y, r2.x, l(-2.000000)
  dp2 r1.z, r1.zwzz, r1.zwzz
  add r1.z, r1.z, l(-1.000000)
  mul r1.z, r1.z, r5.w
  mad r1.z, r2.y, r2.y, -r1.z
  sqrt r1.z, r1.z
  mad r1.z, -r2.x, l(-2.000000), r1.z
  div r0.w, r1.z, r0.w
  mad r0.yz, -r0.wwww, r1.xxyx, r0.yyzy
  div r0.yz, r0.yyzy, r4.yyzy
  add r1.x, -|r0.w|, l(1.000000)
  sqrt r1.x, r1.x
  mad r1.y, |r0.w|, l(-0.018729), l(0.074261)
  mad r1.y, r1.y, |r0.w|, l(-0.212114)
  mad r1.y, r1.y, |r0.w|, l(1.570729)
  mul r1.z, r1.x, r1.y
  mad r1.z, r1.z, l(-2.000000), l(3.141593)
  lt r0.w, r0.w, -r0.w
  and r0.w, r0.w, r1.z
  mad r0.w, r1.y, r1.x, r0.w
  mul r0.w, r0.w, cb0[2].x
  mul r0.yz, r0.wwww, r0.yyzy
  div r0.w, r0.w, cb0[2].x
  sincos r0.w, null, r0.w
  div r0.yz, r0.yyzy, r0.wwww
  div r0.yz, r0.yyzy, cb0[3].zzzz
  mad r0.yz, r0.yyzy, l(0.000000, 1.000000, 1.333333, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  mul r0.yz, r0.xxxx, r0.yyzy
  div r0.yz, r0.yyzy, r0.xxxx
else 
  mov r0.yz, v1.xxyx
endif 
add r1.xy, r0.yzyy, l(-0.500000, -0.500000, 0.000000, 0.000000)
mad r1.xy, r1.xyxx, cb0[3].zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
add r1.zw, -r1.xxxy, l(0.000000, 0.000000, 1.000000, 1.000000)
min r1.xy, r1.zwzz, r1.xyxx
mul r1.xy, r1.xyxx, l(1.000000, 0.750000, 0.000000, 0.000000)
min r1.xy, r1.xyxx, cb0[2].yyyy
add r1.xy, -r1.xyxx, cb0[2].yyyy
dp2 r0.w, r1.xyxx, r1.xyxx
sqrt r0.w, r0.w
add r0.w, -r0.w, cb0[2].y
mul_sat r0.w, r0.w, l(1000.000000)
mad r1.xy, r0.yzyy, r0.xxxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
frc r1.zw, r1.xxxy
round_ni r2.xy, r1.xyxx
add r2.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
div r2.xy, r2.xyxx, r0.xxxx
add r1.x, -r1.w, l(1.000000)
mad r3.xyzw, r1.zzzz, l(1.000000, 1.000000, -1.000000, -1.000000), l(1.000000, 0.000000, 1.000000, 2.000000)
mul r3.xyzw, r3.xyzw, l(3.141593, 3.141593, 3.141593, 3.141593)
max r3.xyzw, r3.xyzw, l(0.000010, 0.000010, 0.000010, 0.000010)
sincos r4.xyzw, null, r3.xyzw
add r4.xyzw, r4.xyzw, r4.xyzw
mul r5.xyzw, r3.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
sincos r5.xyzw, null, r5.xyzw
mul r4.xyzw, r4.xyzw, r5.xyzw
mul r3.xyzw, r3.xyzw, r3.xyzw
div r3.xyzw, r4.xyzw, r3.xyzw
dp4 r1.z, r3.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
div r3.xyzw, r3.xyzw, r1.zzzz
div r4.xy, l(-1.000000, 2.000000, 0.000000, 0.000000), r0.xxxx
mov r4.z, l(0)
add r5.xyzw, r2.xyxy, r4.xzyz
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r2.xyxx, t0.xyzw, s0
div r5.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mov r5.y, l(0)
add r8.xyzw, r2.xyxy, r5.xyxx
sample_indexable(texture2d)(float,float,float,float) r9.xyz, r8.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.yzw, r5.zwzz, t0.wxyz, s0
mul r7.xyz, r3.yyyy, r7.xyzx
mad r6.xyz, r3.xxxx, r6.xyzx, r7.xyzx
mad r6.xyz, r3.zzzz, r9.xyzx, r6.xyzx
mad_sat r5.yzw, r3.wwww, r5.yyzw, r6.xxyz
mov r4.w, r5.x
add r6.xyzw, r2.xyxy, r4.xwzw
sample_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.zwzz, t0.xyzw, s0
add r2.xy, r2.xyxx, r4.ywyy
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t0.xyzw, s0
mul r4.xyz, r3.yyyy, r6.xyzx
mad r4.xyz, r3.xxxx, r7.xyzx, r4.xyzx
mad r3.xyz, r3.zzzz, r8.xyzx, r4.xyzx
mad_sat r2.xyz, r3.wwww, r2.xyzx, r3.xyzx
log r3.xyz, r5.yzwy
mul r3.xyz, r3.xyzx, cb0[0].zzzz
exp r3.xyz, r3.xyzx
log r2.xyz, r2.xyzx
mul r2.xyz, r2.xyzx, cb0[0].zzzz
exp r2.xyz, r2.xyzx
mul r4.xyz, r3.xyzx, r3.xyzx
mul r5.xyz, r3.xyzx, r4.xyzx
mad r5.xyz, r5.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), l(0.300000, 0.300000, 0.300000, 0.000000)
div r6.xyz, r1.wwww, r5.xyzx
mul r6.xyz, r6.xyzx, -r6.xyzx
mul r6.xyz, r6.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r6.xyz, r6.xyzx
mul r6.xyz, r6.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000)
div r6.xyz, r6.xyzx, r5.xyzx
mul r4.xyz, r4.xyzx, r4.xyzx
mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(2.000000, 2.000000, 2.000000, 0.000000)
mul r1.z, r1.w, l(3.333333)
mul r7.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
rsq r7.xyz, r7.xyzx
mul r8.xyz, r1.zzzz, r7.xyzx
log r8.xyz, r8.xyzx
mul r8.xyz, r4.xyzx, r8.xyzx
exp r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
exp r8.xyz, r8.xyzx
mul r8.xyz, r8.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
mad r9.xyz, r4.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), l(0.600000, 0.600000, 0.600000, 0.000000)
div r8.xyz, r8.xyzx, r9.xyzx
movc r6.xyz, cb0[1].zzzz, r8.xyzx, r6.xyzx
mul r8.xyz, r2.xyzx, r2.xyzx
mul r10.xyz, r2.xyzx, r8.xyzx
mad r10.xyz, r10.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), l(0.300000, 0.300000, 0.300000, 0.000000)
div r11.xyz, r1.xxxx, r10.xyzx
mul r11.xyz, r11.xyzx, -r11.xyzx
mul r11.xyz, r11.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
exp r11.xyz, r11.xyzx
mul r11.xyz, r11.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000)
div r11.xyz, r11.xyzx, r10.xyzx
mul r8.xyz, r8.xyzx, r8.xyzx
mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(2.000000, 2.000000, 2.000000, 0.000000)
mul r1.x, r1.x, l(3.333333)
mul r12.xyz, r8.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
rsq r12.xyz, r12.xyzx
mul r13.xyz, r1.xxxx, r12.xyzx
log r13.xyz, r13.xyzx
mul r13.xyz, r8.xyzx, r13.xyzx
exp r13.xyz, r13.xyzx
mul r13.xyz, r13.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
exp r13.xyz, r13.xyzx
mul r13.xyz, r13.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
mad r14.xyz, r8.xyzx, l(0.200000, 0.200000, 0.200000, 0.000000), l(0.600000, 0.600000, 0.600000, 0.000000)
div r13.xyz, r13.xyzx, r14.xyzx
movc r11.xyz, cb0[1].zzzz, r13.xyzx, r11.xyzx
if_nz cb0[3].w
  deriv_rtx_coarse r1.x, r1.y
  deriv_rty_coarse r1.y, r1.y
  add r1.x, |r1.y|, |r1.x|
  mad r1.y, r1.x, l(0.333333), r1.w
  div r13.xyz, r1.yyyy, r5.xyzx
  mul r13.xyz, r13.xyzx, -r13.xyzx
  mul r13.xyz, r13.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r13.xyz, r13.xyzx
  mul r13.xyz, r13.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000)
  div r13.xyz, r13.xyzx, r5.xyzx
  mul r1.z, r1.y, l(3.333333)
  mul r15.xyz, r7.xyzx, r1.zzzz
  log r15.xyz, r15.xyzx
  mul r15.xyz, r4.xyzx, r15.xyzx
  exp r15.xyz, r15.xyzx
  mul r15.xyz, r15.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
  exp r15.xyz, r15.xyzx
  mul r15.xyz, r15.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
  div r15.xyz, r15.xyzx, r9.xyzx
  movc r13.xyz, cb0[1].zzzz, r15.xyzx, r13.xyzx
  add r13.xyz, r6.xyzx, r13.xyzx
  add r1.z, -r1.y, l(1.000000)
  div r15.xyz, |r1.zzzz|, r10.xyzx
  mul r15.xyz, r15.xyzx, -r15.xyzx
  mul r15.xyz, r15.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
  exp r15.xyz, r15.xyzx
  mul r15.xyz, r15.xyzx, l(0.400000, 0.400000, 0.400000, 0.000000)
  div r15.xyz, r15.xyzx, r10.xyzx
  mul r1.z, |r1.z|, l(3.333333)
  mul r16.xyz, r12.xyzx, r1.zzzz
  log r16.xyz, r16.xyzx
  mul r16.xyz, r8.xyzx, r16.xyzx
  exp r16.xyz, r16.xyzx
  mul r16.xyz, r16.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
  exp r16.xyz, r16.xyzx
  mul r16.xyz, r16.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
  div r16.xyz, r16.xyzx, r14.xyzx
  movc r15.xyz, cb0[1].zzzz, r16.xyzx, r15.xyzx
  add r15.xyz, r11.xyzx, r15.xyzx
  mad r1.x, -r1.x, l(0.666667), r1.y
  div r1.yzw, |r1.xxxx|, r5.xxyz
  mul r1.yzw, r1.yyzw, -r1.yyzw
  mul r1.yzw, r1.yyzw, l(0.000000, 1.442695, 1.442695, 1.442695)
  exp r1.yzw, r1.yyzw
  mul r1.yzw, r1.yyzw, l(0.000000, 0.400000, 0.400000, 0.400000)
  div r1.yzw, r1.yyzw, r5.xxyz
  mul r2.w, |r1.x|, l(3.333333)
  mul r5.xyz, r7.xyzx, r2.wwww
  log r5.xyz, r5.xyzx
  mul r4.xyz, r4.xyzx, r5.xyzx
  exp r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
  exp r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
  div r4.xyz, r4.xyzx, r9.xyzx
  movc r1.yzw, cb0[1].zzzz, r4.xxyz, r1.yyzw
  mul r1.yzw, r1.yyzw, l(0.000000, 0.333333, 0.333333, 0.333333)
  mad r6.xyz, r13.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r1.yzwy
  add r1.x, -r1.x, l(1.000000)
  div r1.yzw, |r1.xxxx|, r10.xxyz
  mul r1.yzw, r1.yyzw, -r1.yyzw
  mul r1.yzw, r1.yyzw, l(0.000000, 1.442695, 1.442695, 1.442695)
  exp r1.yzw, r1.yyzw
  mul r1.yzw, r1.yyzw, l(0.000000, 0.400000, 0.400000, 0.400000)
  div r1.yzw, r1.yyzw, r10.xxyz
  mul r1.x, |r1.x|, l(3.333333)
  mul r4.xyz, r12.xyzx, r1.xxxx
  log r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, r8.xyzx
  exp r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, l(-1.442695, -1.442695, -1.442695, 0.000000)
  exp r4.xyz, r4.xyzx
  mul r4.xyz, r4.xyzx, l(1.400000, 1.400000, 1.400000, 0.000000)
  div r4.xyz, r4.xyzx, r14.xyzx
  movc r1.xyz, cb0[1].zzzz, r4.xyzx, r1.yzwy
  mul r1.xyz, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
  mad r11.xyz, r15.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r1.xyzx
endif 
mul r1.xyz, r2.xyzx, r11.xyzx
mad r1.xyz, r3.xyzx, r6.xyzx, r1.xyzx
mul r1.xyz, r0.wwww, r1.xyzx
mul r2.x, r0.x, v1.x
mul r2.x, r2.x, l(1920.000000)
div r0.x, r2.x, r0.x
itof r2.x, cb0[1].y
mul r2.y, r0.x, r2.x
ge r2.y, r2.y, -r2.y
movc r2.x, r2.y, r2.x, -r2.x
div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r0.x, r0.x, r2.y
frc r0.x, r0.x
mul r0.x, r0.x, r2.x
round_ni r0.x, r0.x
mad r2.xyz, r0.xxxx, l(-0.300000, 0.300000, -0.300000, 0.000000), l(1.000000, 0.700000, 1.000000, 0.000000)
mov r3.x, cb0[1].x
mov r3.z, l(1.000000)
mul r2.xyz, r2.xyzx, r3.xxzx
mov r1.w, cb0[1].x
mul r2.xyz, r1.xywx, r2.xyzx
mov r1.x, l(0.830000)
mul r1.xyz, r2.xyzx, r1.xxzx
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[0].w
log r1.xyz, |r1.xyzx|
mul r1.xyz, r0.xxxx, r1.xyzx
exp r1.xyz, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.yzyy, t0.xyzw, s0
mul r2.xyz, r0.wwww, r0.xyzx
mad r0.xyz, -r0.xyzx, r0.wwww, r1.xyzx
mad_sat o0.xyz, cb0[0].xxxx, r0.xyzx, r2.xyzx
ret 
// Approximately 400 instruction slots used
