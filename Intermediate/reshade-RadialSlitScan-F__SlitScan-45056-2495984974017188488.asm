//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 coordinates;                // Offset:    0 Size:     8
//   float frame_rate;                  // Offset:    8 Size:     4 [unused]
//   float2 anim_rate;                  // Offset:   16 Size:     8
//   float min_depth;                   // Offset:   24 Size:     4 [unused]
//   float3 border_color;               // Offset:   32 Size:    12 [unused]
//   float opacity;                     // Offset:   44 Size:     4 [unused]
//   float blending_amount;             // Offset:   48 Size:     4
//   int render_type;                   // Offset:   52 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__texColorBuffer               texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
mad r0.xy, -cb0[0].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s1
dp2 r0.w, cb0[0].xyxx, cb0[0].xyxx
sqrt r0.w, r0.w
add r2.xyzw, cb0[0].xyxy, l(-1.000000, -0.000000, -0.000000, -1.000000)
dp2 r2.x, r2.xyxx, r2.xyxx
dp2 r2.y, r2.zwzz, r2.zwzz
add r2.zw, cb0[0].xxxy, l(0.000000, 0.000000, -1.000000, -1.000000)
dp2 r2.z, r2.zwzz, r2.zwzz
sqrt r2.xyz, r2.xyzx
max r0.w, r0.w, r2.x
max r2.x, r2.z, r2.y
max r0.w, r0.w, r2.x
mul r0.w, r0.w, cb0[1].x
mul r0.z, r0.x, l(1.777778)
mad r0.xy, -cb0[0].xyxx, l(0.888889, 0.500000, 0.000000, 0.000000), r0.zyzz
dp2 r0.x, r0.xyxx, r0.xyxx
sqrt r0.x, r0.x
mul r0.y, r0.w, l(1.777778)
ge r0.x, r0.x, r0.y
if_nz r0.x
  switch cb0[3].y
    case l(1)
    break 
    case l(2)
    mad r0.xyz, r1.xyzx, r1.xyzx, -r1.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(3)
    lt r0.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r1.xyzx
    and r0.x, r0.y, r0.x
    and r0.x, r0.z, r0.x
    add r0.yzw, -r1.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    div r0.yzw, r0.yyzw, r1.xxyz
    min r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    add r0.yzw, -r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    and r0.xyz, r0.yzwy, r0.xxxx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(4)
    mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(5)
    break 
    case l(6)
    add r0.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r0.xyz, -r0.xyzx, r0.xyzx, -r1.xyzx
    add r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(7)
    lt r0.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    and r0.x, r0.y, r0.x
    and r0.x, r0.z, r0.x
    add r0.yzw, -r1.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
    div r0.yzw, r1.xxyz, r0.yyzw
    min r0.yzw, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    movc r0.xyz, r0.xxxx, r0.yzwy, l(1.000000,1.000000,1.000000,0)
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(8)
    add r0.xyz, r1.xyzx, r1.xyzx
    min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(9)
    add r0.xyz, r1.xyzx, r1.xyzx
    min r0.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(10)
    ge r0.xyz, r1.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
    or r0.x, r0.y, r0.x
    or r0.x, r0.z, r0.x
    mul r0.yzw, r1.xxyz, r1.xxyz
    add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div_sat r0.yzw, r0.yyzw, r2.xxyz
    movc r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(11)
    mul r0.xyz, r1.xyzx, r1.xyzx
    add r2.xyz, r0.xyzx, r0.xyzx
    add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, r3.xyzx
    mad r3.xyz, -r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
    ge r4.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r0.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
    mad r0.xyz, r4.xyzx, r0.xyzx, r2.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(12)
    ge r0.xyzw, l(0.500000, 0.500000, 0.500000, 0.250000), r1.xyzx
    and r0.x, r0.y, r0.x
    and r0.x, r0.z, r0.x
    mad r2.xyz, -r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r2.xyz, r1.xyzx, r2.xyzx
    add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad_sat r2.xyz, -r2.xyzx, r3.xyzx, r1.xyzx
    mad r3.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    ge r0.yz, l(0.000000, 0.250000, 0.250000, 0.000000), r1.yyzy
    and r0.y, r0.y, r0.w
    and r0.y, r0.z, r0.y
    mad r4.xyz, r1.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), l(-12.000000, -12.000000, -12.000000, 0.000000)
    mad r4.xyz, r4.xyzx, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
    mul r4.xyz, r1.xyzx, r4.xyzx
    sqrt r5.xyz, r1.xyzx
    movc r0.yzw, r0.yyyy, r4.xxyz, r5.xxyz
    add r0.yzw, -r1.xxyz, r0.yyzw
    mad_sat r0.yzw, r3.xxyz, r0.yyzw, r1.xxyz
    movc r0.xyz, r0.xxxx, r2.xyzx, r0.yzwy
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(13)
    mul r0.xyz, r1.xyzx, r1.xyzx
    add r2.xyz, r0.xyzx, r0.xyzx
    add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r3.xyz, r3.xyzx, r3.xyzx
    mad r3.xyz, -r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
    ge r4.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r0.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
    mad r0.xyz, r4.xyzx, r0.xyzx, r2.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(14)
    mul r0.xyz, r1.xyzx, r1.xyzx
    add r2.xyz, r0.xyzx, r0.xyzx
    add r3.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    div r3.xyz, r1.xyzx, r3.xyzx
    ge r4.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r0.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
    mad r0.xyz, r4.xyzx, r0.xyzx, r2.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(15)
    lt r0.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r0.x, r0.y, r0.x
    or r0.x, r0.z, r0.x
    mad r0.yzw, r1.xxyz, l(0.000000, 3.000000, 3.000000, 3.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
    max r0.yzw, r0.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r2.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
    min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    movc r0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(16)
    lt r0.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r0.x, r0.y, r0.x
    or r0.x, r0.z, r0.x
    add r0.yzw, r1.xxyz, r1.xxyz
    min r0.yzw, r0.yyzw, r1.xxyz
    add r2.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r2.xyz, r2.xyzx, r2.xyzx
    max r2.xyz, r1.xyzx, r2.xyzx
    movc r0.xyz, r0.xxxx, r0.yzwy, r2.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(17)
    mul r0.xyz, r1.xyzx, r1.xyzx
    add r2.xyz, r0.xyzx, r0.xyzx
    add r3.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    div r3.xyz, r1.xyzx, r3.xyzx
    ge r4.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r0.xyz, -r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r3.xyzx
    mad r0.xyz, r4.xyzx, r0.xyzx, r2.xyzx
    lt r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r0.x, r0.y, r0.x
    or r0.x, r0.z, r0.x
    movc r0.x, r0.x, l(0), l(1.000000)
    add r0.xyz, -r1.xyzx, r0.xxxx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(18)
    mad r1.xyz, cb0[3].xxxx, -r1.xyzx, r1.xyzx
    break 
    case l(19)
    mul r0.xyz, r1.xyzx, r1.xyzx
    add r0.xyz, r0.xyzx, r0.xyzx
    mad r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r0.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(20)
    mad r1.xyz, cb0[3].xxxx, -r1.xyzx, r1.xyzx
    break 
    case l(21)
    add r0.xyz, r1.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
    div_sat r0.xyz, r1.xyzx, r0.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(22)
    add r0.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(23)
    add r0.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(24)
    ge r0.xyz, r1.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
    or r0.x, r0.y, r0.x
    or r0.x, r0.z, r0.x
    mul r0.yzw, r1.xxyz, r1.xxyz
    add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div_sat r0.yzw, r0.yyzw, r2.xxyz
    movc r0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(25)
    mad_sat r0.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(26)
    add r0.xyz, -r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(27)
    max r0.x, r1.z, r1.y
    max r0.x, r0.x, r1.x
    min r0.y, r1.z, r1.y
    min r0.y, r0.y, r1.x
    add r2.y, -r0.y, r0.x
    eq r0.zw, r0.xxxy, r1.xxxz
    and r3.x, r0.w, r0.z
    if_nz r3.x
      lt r3.x, r1.z, r1.x
      add r3.yz, -r1.zzzz, r1.yyxy
      mul r3.y, r2.y, r3.y
      div r2.z, r3.y, r3.z
      and r3.xy, r2.yzyy, r3.xxxx
      mov r3.z, l(0)
    else 
      eq r3.w, r0.y, r1.y
      and r0.z, r0.z, r3.w
      if_nz r0.z
        lt r0.z, r1.y, r1.x
        add r4.xy, -r1.yyyy, r1.zxzz
        mul r4.x, r2.y, r4.x
        div r2.w, r4.x, r4.y
        and r3.xz, r0.zzzz, r2.yywy
        mov r3.y, l(0)
      else 
        eq r0.z, r0.x, r1.y
        and r0.w, r0.w, r0.z
        if_nz r0.w
          lt r0.w, r1.z, r1.y
          add r4.xy, -r1.zzzz, r1.xyxx
          mul r2.w, r2.y, r4.x
          div r2.x, r2.w, r4.y
          and r3.xy, r2.xyxx, r0.wwww
          mov r3.z, l(0)
        else 
          eq r0.y, r0.y, r1.x
          and r0.z, r0.y, r0.z
          if_nz r0.z
            lt r0.z, r1.x, r1.y
            add r4.xy, -r1.xxxx, r1.zyzz
            mul r0.w, r2.y, r4.x
            div r2.z, r0.w, r4.y
            and r3.yz, r0.zzzz, r2.yyzy
            mov r3.x, l(0)
          else 
            eq r0.x, r0.x, r1.z
            and r0.z, r3.w, r0.x
            lt r4.xy, r1.yxyy, r1.zzzz
            add r5.xyzw, -r1.yyxx, r1.xzyz
            mul r4.zw, r2.yyyy, r5.xxxz
            div r2.xz, r4.zzwz, r5.yywy
            and r5.xz, r2.xxyx, r4.xxxx
            and r0.x, r0.y, r0.x
            and r2.yz, r2.zzyz, r4.yyyy
            mov r2.x, l(0)
            movc r0.xyw, r0.xxxx, r2.xyxz, r1.xyxz
            mov r5.y, l(0)
            movc r3.xyz, r0.zzzz, r5.xyzx, r0.xywx
          endif 
        endif 
      endif 
    endif 
    dp3 r0.x, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r0.y, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r0.x, -r0.y, r0.x
    add r0.xyz, r0.xxxx, r3.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(28)
    max r0.x, r1.z, r1.y
    max r0.x, r0.x, r1.x
    min r0.y, r1.z, r1.y
    min r0.y, r0.y, r1.x
    add r2.y, -r0.y, r0.x
    eq r0.zw, r0.xxxy, r1.xxxz
    and r3.x, r0.w, r0.z
    if_nz r3.x
      lt r3.x, r1.z, r1.x
      add r3.yz, -r1.zzzz, r1.yyxy
      mul r3.y, r2.y, r3.y
      div r2.z, r3.y, r3.z
      and r3.xy, r2.yzyy, r3.xxxx
      mov r3.z, l(0)
    else 
      eq r3.w, r0.y, r1.y
      and r0.z, r0.z, r3.w
      if_nz r0.z
        lt r0.z, r1.y, r1.x
        add r4.xy, -r1.yyyy, r1.zxzz
        mul r4.x, r2.y, r4.x
        div r2.w, r4.x, r4.y
        and r3.xz, r0.zzzz, r2.yywy
        mov r3.y, l(0)
      else 
        eq r0.z, r0.x, r1.y
        and r0.w, r0.w, r0.z
        if_nz r0.w
          lt r0.w, r1.z, r1.y
          add r4.xy, -r1.zzzz, r1.xyxx
          mul r2.w, r2.y, r4.x
          div r2.x, r2.w, r4.y
          and r3.xy, r2.xyxx, r0.wwww
          mov r3.z, l(0)
        else 
          eq r0.y, r0.y, r1.x
          and r0.z, r0.y, r0.z
          if_nz r0.z
            lt r0.z, r1.x, r1.y
            add r4.xy, -r1.xxxx, r1.zyzz
            mul r0.w, r2.y, r4.x
            div r2.z, r0.w, r4.y
            and r3.yz, r0.zzzz, r2.yyzy
            mov r3.x, l(0)
          else 
            eq r0.x, r0.x, r1.z
            and r0.z, r3.w, r0.x
            lt r4.xy, r1.yxyy, r1.zzzz
            add r5.xyzw, -r1.yyxx, r1.xzyz
            mul r4.zw, r2.yyyy, r5.xxxz
            div r2.xz, r4.zzwz, r5.yywy
            and r5.xz, r2.xxyx, r4.xxxx
            and r0.x, r0.y, r0.x
            and r2.yz, r2.zzyz, r4.yyyy
            mov r2.x, l(0)
            movc r0.xyw, r0.xxxx, r2.xyxz, r1.xyxz
            mov r5.y, l(0)
            movc r3.xyz, r0.zzzz, r5.xyzx, r0.xywx
          endif 
        endif 
      endif 
    endif 
    dp3 r0.x, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r0.y, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r0.x, -r0.y, r0.x
    add r0.xyz, r0.xxxx, r3.xyzx
    add r0.xyz, -r1.xyzx, r0.xyzx
    mad r1.xyz, cb0[3].xxxx, r0.xyzx, r1.xyzx
    break 
    case l(29)
    break 
    case l(30)
    break 
    default 
    break 
  endswitch 
  mov o0.xyz, r1.xyzx
  mov o0.w, l(1.000000)
else 
  discard_nz l(-1)
  mov o0.xyzw, r1.xyzw
endif 
ret 
// Approximately 394 instruction slots used
