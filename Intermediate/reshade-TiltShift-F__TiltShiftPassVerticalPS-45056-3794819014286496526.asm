//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float4 K;                          // Offset:    0 Size:    16
//   int BlurAngle;                     // Offset:   16 Size:     4
//   float BlurOffset;                  // Offset:   20 Size:     4
//   bool VisibleLine;                  // Offset:   24 Size:     4
//   uint BlurLineWidth;                // Offset:   28 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s2                              sampler      NA          NA             s2      1 
// __srgbV__ReShade__BackBufferTex    texture  float4          2d             t1      1 
// __V__BlueNoise__BlueNoiseTex      texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyz
dcl_temps 6
itof r0.x, cb0[1].x
mul r0.x, r0.x, l(0.017453)
sincos r0.x, r1.x, r0.x
mov r2.x, -r0.x
mul r0.y, r0.x, cb0[1].y
mul r3.z, r1.x, cb0[1].y
mul r3.y, r0.y, l(-1.777778)
add r0.yz, r3.yyzy, v1.zzwz
mov r2.y, r1.x
dp2 r0.y, r2.xyxx, r0.yzyy
mul r1.x, r0.y, r0.y
mul r1.y, r1.x, r1.x
mul r1.z, r1.x, r1.y
mul r1.w, r1.x, r1.z
dp4 r0.y, r1.xyzw, cb0[0].xyzw
add r0.y, r0.y, l(1.000000)
rcp r0.y, r0.y
add r0.y, -r0.y, l(1.000000)
mul r0.z, |r0.y|, l(1080.000000)
round_pi r0.z, r0.z
ftou r0.z, r0.z
ine r0.w, r0.z, l(0)
ne r1.xyzw, cb0[0].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
or r1.xy, r1.zwzz, r1.xyxx
or r1.x, r1.y, r1.x
and r0.w, r0.w, r1.x
if_nz r0.w
  and r0.w, r0.z, l(1)
  iadd r0.z, r0.w, r0.z
  utof r0.z, r0.z
  min r0.z, r0.z, l(128.000000)
  ftou r0.z, r0.z
  utof r0.w, r0.z
  rcp r0.w, r0.w
  ishl r0.z, r0.z, l(1)
  iadd r1.x, r0.z, l(-1)
  utof r1.x, r1.x
  rcp r1.x, r1.x
  ult r1.y, l(1), r0.z
  mov r4.x, v1.x
  mov r5.xyz, l(0,0,0,0)
  mov r1.z, l(0)
  mov r3.y, l(1)
  mov r1.w, r1.y
  loop 
    breakc_z r1.w
    utof r2.w, r3.y
    mad r2.w, r2.w, r0.w, l(-1.000000)
    dp2 r2.w, r2.wwww, r2.wwww
    mul r2.w, r2.w, l(-7.213475)
    exp r2.w, r2.w
    iadd r3.yw, r3.yyyy, l(0, 2, 0, -1)
    utof r3.w, r3.w
    mad r3.w, r3.w, r1.x, l(-0.500000)
    mad r4.y, |r0.y|, r3.w, v1.y
    sample_l_indexable(texture2d)(float,float,float,float) r4.yzw, r4.xyxx, t1.wxyz, s2, l(0.000000)
    mad r5.xyz, r4.yzwy, r2.wwww, r5.xyzx
    add r1.z, r1.z, r2.w
    ult r1.w, r3.y, r0.z
  endloop 
  div r0.yzw, r5.xxyz, r1.zzzz
else 
  ftou r1.xy, v0.xyxx
  mov r1.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.yzw, r1.xyzw, t1.wxyz
endif 
mov_sat r0.yzw, r0.yyzw
mul r1.x, r2.x, cb0[1].y
mul r3.x, r1.x, l(1.777778)
mov r2.z, r0.x
mul r1.xy, r2.zyzz, l(-540.000000, 540.000000, 0.000000, 0.000000)
add r1.zw, r3.xxxz, v1.zzzw
dp2 r0.x, r1.xyxx, r1.zwzz
utof r1.x, cb0[1].w
mad_sat r0.x, r1.x, l(0.500000), -|r0.x|
dp3 r1.x, l(0.299000, 0.587000, 0.114000, 0.000000), r0.yzwy
mad r1.x, r1.x, l(2.000000), l(-1.000000)
ge r1.y, l(0.040499), |r1.x|
mul r1.z, |r1.x|, l(0.077399)
add r1.x, |r1.x|, l(0.055000)
mul r1.x, r1.x, l(0.947867)
log r1.x, r1.x
mul r1.x, r1.x, l(2.400000)
exp r1.x, r1.x
movc r1.x, r1.y, r1.z, r1.x
add r1.xyz, -r0.yzwy, r1.xxxx
mad r1.xyz, r0.xxxx, r1.xyzx, r0.yzwy
movc r0.xyz, cb0[1].zzzz, r1.xyzx, r0.yzwy
ge r1.xyz, l(0.003131, 0.003131, 0.003131, 0.000000), r0.xyzx
mul r2.xyz, r0.xyzx, l(12.920000, 12.920000, 12.920000, 0.000000)
log r0.xyz, |r0.xyzx|
mul r0.xyz, r0.xyzx, l(0.416667, 0.416667, 0.416667, 0.000000)
exp r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(1.055000, 1.055000, 1.055000, 0.000000), l(-0.055000, -0.055000, -0.055000, 0.000000)
movc r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
ftou r1.xy, v0.xyxx
mul r0.xyz, r0.xyzx, l(255.000000, 255.000000, 255.000000, 0.000000)
and r1.xy, r1.xyxx, l(63, 63, 0, 0)
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyzw, t4.xyzw
frc r2.xyz, r0.xyzx
ge r1.xyz, r2.xyzx, r1.xyzx
round_pi r2.xyz, r0.xyzx
round_ni r0.xyz, r0.xyzx
movc r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
mul o0.xyz, r0.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
ret 
// Approximately 107 instruction slots used
