//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8
//   bool enable_dither;                // Offset:    8 Size:     4
//   float dither_strength;             // Offset:   12 Size:     4
//   int PD80_LutSelector;              // Offset:   16 Size:     4
//   float PD80_MixChroma;              // Offset:   20 Size:     4
//   float PD80_MixLuma;                // Offset:   24 Size:     4
//   float PD80_Intensity;              // Offset:   28 Size:     4
//   float3 ib;                         // Offset:   32 Size:    12
//   float3 iw;                         // Offset:   48 Size:    12
//   float3 ob;                         // Offset:   64 Size:    12
//   float3 ow;                         // Offset:   80 Size:    12
//   float ig;                          // Offset:   92 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// __V__prod80_02_Bonus_LUT_packName__prod80_02_Bonus_LUT_packTex    texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
mul r0.xy, v1.xyxx, l(3.750000, 2.109375, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t6.xyzw, s1
add r1.x, cb0[0].x, l(10.000000)
mad r0.xyzw, r1.xxxx, l(0.618034, 0.618034, 0.618034, 0.618034), r0.xyzw
frc r0.xyzw, r0.xyzw
mad r0.xyzw, r0.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mul r0.xyzw, r0.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
mul r1.x, cb0[0].w, l(0.003922)
mul r0.xyzw, r0.xyzw, r1.xxxx
movc r0.xyzw, cb0[0].zzzz, r0.xyzw, l(0,0,0,0)
add_sat r1.xyz, r0.yzxy, cb0[3].xyzx
add_sat r2.xyz, r0.xyzx, cb0[2].xyzx
add r1.xyz, r1.xyzx, -r2.xyzx
max r1.xyz, r1.xyzx, l(0.000001, 0.000001, 0.000001, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t0.xyzw, s0
mul r1.w, r3.z, l(63.000000)
frc r1.w, r1.w
mad r2.w, r3.z, l(63.000000), -r1.w
mad r4.xy, r3.xyxx, l(63.000000, 63.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
mul r4.xy, r4.xyxx, l(0.000244, 0.000312, 0.000000, 0.000000)
mad r5.x, r2.w, l(0.015625), r4.x
add r5.z, r5.x, l(0.015625)
itof r2.w, cb0[1].x
mad r5.y, r2.w, l(0.020000), r4.y
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r5.zyzz, t10.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t10.xyzw, s0
add r4.xyz, r4.xyzx, -r5.xyzx
mad r4.xyz, r1.wwww, r4.xyzx, r5.xyzx
add_sat r2.xyz, -r2.xyzx, r4.xyzx
div r1.xyz, r2.xyzx, r1.xyzx
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, cb0[5].wwww
exp r1.xyz, r1.xyzx
add_sat r2.xyz, r0.wxzw, cb0[5].xyzx
add_sat r4.xyz, r0.zxyz, cb0[4].xyzx
add r2.xyz, r2.xyzx, -r4.xyzx
max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r1.xyz, r1.xyzx, r2.xyzx, r4.xyzx
dp3 r2.x, l(0.412456, 0.357576, 0.180438, 0.000000), r1.xyzx
mad r0.y, r2.x, l(950.368164), l(16.000000)
mul r0.y, r0.y, l(0.008621)
dp3 r2.y, l(0.212673, 0.715152, 0.072175, 0.000000), r1.xyzx
dp3 r2.z, l(0.019334, 0.119192, 0.950304, 0.000000), r1.xyzx
mul r1.xyz, r2.xyzx, l(1.052111, 1.000000, 0.918417, 0.000000)
lt r4.xyz, l(0.008418, 0.008856, 0.009643, 0.000000), r2.xyzx
mad r2.xy, r2.yzyy, l(903.296326, 829.602722, 0.000000, 0.000000), l(16.000000, 16.000000, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(0.008621, 0.008621, 0.000000, 0.000000)
log r1.xyz, r1.xyzx
mul r1.xyz, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
exp r1.xyz, r1.xyzx
movc r0.y, r4.x, r1.x, r0.y
movc r1.xy, r4.yzyy, r1.yzyy, r2.xyxx
add r2.y, r0.y, -r1.x
mad r2.xw, r1.xxxx, l(116.000000, 0.000000, 0.000000, 116.000000), l(-16.000000, 0.000000, 0.000000, -16.000000)
add r2.z, -r1.y, r1.x
dp3 r1.x, l(0.412456, 0.357576, 0.180438, 0.000000), r3.xyzx
dp3 r1.y, l(0.212673, 0.715152, 0.072175, 0.000000), r3.xyzx
dp3 r1.z, l(0.019334, 0.119192, 0.950304, 0.000000), r3.xyzx
mul r1.xyz, r1.xyzx, l(1.052111, 1.000000, 0.918417, 0.000000)
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
log r4.xyz, r1.xyzx
mul r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
exp r4.xyz, r4.xyzx
mad r5.xyz, r1.xyzx, l(903.296326, 903.296326, 903.296326, 0.000000), l(16.000000, 16.000000, 16.000000, 0.000000)
lt r1.xyz, l(0.008856, 0.008856, 0.008856, 0.000000), r1.xyzx
mul r5.xyz, r5.xyzx, l(0.008621, 0.008621, 0.008621, 0.000000)
movc r1.xyz, r1.xyzx, r4.xyzx, r5.xyzx
mad r4.xw, r1.yyyy, l(116.000000, 0.000000, 0.000000, 116.000000), l(-16.000000, 0.000000, 0.000000, -16.000000)
add r4.yz, -r1.yyzy, r1.xxyx
mul r1.xyzw, r4.xyzw, l(0.010000, 4.629630, 1.851852, 0.010000)
mad r2.xyzw, r2.xyzw, l(0.010000, 4.629630, 1.851852, 0.010000), -r1.wyzw
mad r1.xyzw, cb0[1].zyyz, r2.xyzw, r1.xyzw
mul r2.xy, r1.zwzz, l(0.540000, 0.110706, 0.000000, 0.000000)
mad r0.y, r1.x, l(100.000000), l(16.000000)
mad r1.x, r0.y, l(0.008621), -r2.x
mul r0.y, r0.y, l(0.008621)
mul r1.z, r1.x, r1.x
mul r1.z, r1.x, r1.z
mad r1.x, r1.x, l(116.000000), l(-16.000000)
mul r1.x, r1.x, l(0.001107)
lt r2.x, l(0.008856), r1.z
movc r4.z, r2.x, r1.z, r1.x
lt r1.x, l(0.080000), r1.w
mad r1.y, r1.y, l(0.216000), r0.y
mul r1.z, r0.y, r0.y
mul r0.y, r0.y, r1.z
movc r4.y, r1.x, r0.y, r2.y
mul r0.y, r1.y, r1.y
mul r0.y, r1.y, r0.y
mad r1.x, r1.y, l(116.000000), l(-16.000000)
mul r1.x, r1.x, l(0.001107)
lt r1.y, l(0.008856), r0.y
movc r4.x, r1.y, r0.y, r1.x
mul r1.xyz, r4.xyzx, l(0.950470, 1.000000, 1.088830, 0.000000)
min r1.xyz, r1.xyzx, l(0.950470, 1.000000, 1.088830, 0.000000)
max r1.xyz, r1.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3_sat r2.x, l(3.240454, -1.537138, -0.498531, 0.000000), r1.xyzx
dp3_sat r2.y, l(-0.969266, 1.876011, 0.041556, 0.000000), r1.xyzx
dp3_sat r2.z, l(0.055643, -0.204026, 1.057225, 0.000000), r1.xyzx
add_sat r0.xyz, r0.wzxw, r2.xyzx
add r0.xyz, -r3.xyzx, r0.xyzx
mad o0.xyz, cb0[1].wwww, r0.xyzx, r3.xyzx
mov o0.w, r3.w
ret 
// Approximately 104 instruction slots used
