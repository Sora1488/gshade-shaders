//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int _1312;                         // Offset:    0 Size:     4 [unused]
//   float uIntensity;                  // Offset:    4 Size:     4
//   float uSaturation;                 // Offset:    8 Size:     4 [unused]
//   float3 ColorFilter;                // Offset:   16 Size:    12 [unused]
//   int BloomBlendMode;                // Offset:   28 Size:     4
//   float uLensDirtAmount;             // Offset:   32 Size:     4
//   int AdaptMode;                     // Offset:   36 Size:     4
//   float uAdaptAmount;                // Offset:   40 Size:     4
//   float uAdaptSensitivity;           // Offset:   44 Size:     4 [unused]
//   float uAdaptExposure;              // Offset:   48 Size:     4
//   bool uAdaptUseLimits;              // Offset:   52 Size:     4 [unused]
//   float2 uAdaptLimits;               // Offset:   56 Size:     8 [unused]
//   float uAdaptTime;                  // Offset:   64 Size:     4 [unused]
//   float uAdaptPrecision;             // Offset:   68 Size:     4 [unused]
//   int uAdaptFormula;                 // Offset:   72 Size:     4 [unused]
//   float uMean;                       // Offset:   76 Size:     4 [unused]
//   float uVariance;                   // Offset:   80 Size:     4 [unused]
//   float uGhostingAmount;             // Offset:   84 Size:     4 [unused]
//   float3 DepthMultiplier;            // Offset:   96 Size:    12 [unused]
//   float2 DepthRange;                 // Offset:  112 Size:     8 [unused]
//   float DepthSmoothness;             // Offset:  120 Size:     4 [unused]
//   float uMaxBrightness;              // Offset:  124 Size:     4
//   bool uNormalizeBrightness;         // Offset:  128 Size:     4
//   bool MagicMode;                    // Offset:  132 Size:     4
//   float uSigma;                      // Offset:  136 Size:     4 [unused]
//   float uPadding;                    // Offset:  140 Size:     4 [unused]
//   float FrameTime;                   // Offset:  144 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __srgbV__ReShade__BackBufferTex    texture  float4          2d             t1      1 
// __V__FXShaders__NeoBloom_AtlasB    texture  float4          2d             t8      1 
// __V__FXShaders__NeoBloom_Adapt    texture  float4          2d            t10      1 
// __V__FXShaders__NeoBloom_LensDirt    texture  float4          2d            t14      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_output o0.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t1.wxyz, s0
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[7].w
add r1.yzw, -r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
max r1.xyz, r1.xxxx, r1.yzwy
div r1.xyz, r0.yzwy, r1.xyzx
movc r1.xyz, cb0[8].yyyy, r0.yzwy, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t8.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r3.xyz, v1.zwzz, t14.xyzw, s0
mul r4.xyz, r2.xyzx, cb0[2].xxxx
mad r2.xyz, r3.xyzx, r4.xyzx, r2.xyzx
mul r0.w, cb0[3].x, l(1.442695)
exp r0.w, r0.w
sample_indexable(texture2d)(float,float,float,float) r1.w, l(0.000000, 0.000000, 0.000000, 0.000000), t10.yzwx, s2
max r1.w, r1.w, l(0.001000)
div r0.w, r0.w, r1.w
add r0.w, r0.w, l(-1.000000)
mad r0.w, cb0[2].z, r0.w, l(1.000000)
mul r3.xyz, r0.wwww, r2.xyzx
mul r4.xyz, r3.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
mad r5.xyz, r3.xyzx, l(0.015000, 0.015000, 0.015000, 0.000000), l(0.050000, 0.050000, 0.050000, 0.000000)
mad r5.xyz, r4.xyzx, r5.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
mad r3.xyz, r3.xyzx, l(0.015000, 0.015000, 0.015000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r3.xyz, r4.xyzx, r3.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
div r3.xyz, r5.xyzx, r3.xyzx
add r3.xyz, r3.xyzx, l(-0.066667, -0.066667, -0.066667, 0.000000)
movc r2.xyz, cb0[8].yyyy, r3.xyzx, r2.xyzx
switch cb0[2].y
  case l(0)
  div r1.w, cb0[0].y, cb0[7].w
  movc r1.w, cb0[8].x, r1.w, cb0[0].y
  switch cb0[1].w
    case l(0)
    add r2.w, r1.w, l(1.000000)
    log r2.w, r2.w
    add r3.xyz, -r1.xyzx, r2.xyzx
    mad r0.xyz, r2.wwww, r3.zxyz, r1.zxyz
    break 
    case l(1)
    mul r3.xyz, r1.wwww, r2.xyzx
    mad r0.xyz, r3.zxyz, l(3.000000, 3.000000, 3.000000, 0.000000), r1.zxyz
    break 
    case l(2)
    add r3.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r4.xyz, -r2.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r0.xyz, -r3.zxyz, r4.zxyz, l(1.000000, 1.000000, 1.000000, 0.000000)
    break 
    default 
    mov r0.xyz, l(0,0,0,0)
    break 
  endswitch 
  mul r1.xyz, r0.wwww, r0.yzxy
  break 
  case l(1)
  mul r3.xyz, r0.wwww, r2.xyzx
  div r1.w, cb0[0].y, cb0[7].w
  movc r1.w, cb0[8].x, r1.w, cb0[0].y
  switch cb0[1].w
    case l(0)
    add r2.w, r1.w, l(1.000000)
    log r2.w, r2.w
    mad r2.xyz, r2.xyzx, r0.wwww, -r1.xyzx
    mad r0.xyz, r2.wwww, r2.zxyz, r1.zxyz
    break 
    case l(1)
    mul r2.xyz, r1.wwww, r3.xyzx
    mad r0.xyz, r2.zxyz, l(3.000000, 3.000000, 3.000000, 0.000000), r1.zxyz
    break 
    case l(2)
    add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r3.xyz, -r3.xyzx, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r0.xyz, -r2.zxyz, r3.zxyz, l(1.000000, 1.000000, 1.000000, 0.000000)
    break 
    default 
    mov r0.xyz, l(0,0,0,0)
    break 
  endswitch 
  mov r1.xyz, r0.yzxy
  break 
  default 
  break 
endswitch 
mov o0.w, r0.x
add r0.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r0.xyz, r1.xyzx, r0.xyzx
movc o0.xyz, cb0[8].yyyy, r1.xyzx, r0.xyzx
ret 
// Approximately 86 instruction slots used
