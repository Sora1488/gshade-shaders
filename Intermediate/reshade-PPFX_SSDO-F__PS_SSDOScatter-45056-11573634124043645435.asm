//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __srgbV__texColorLOD              texture  float4          2d             t5      1 
// __V__texViewSpace                 texture  float4          2d             t8      1 
// __V__texSSDONoise                 texture  float4          2d            t16      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t5
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t16
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t8.xyzw, s0
mul r1.xy, v1.xyxx, l(480.000000, 270.000000, 0.000000, 0.000000)
frc r1.xy, r1.xyxx
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t16.xyzw, s1, l(0.000000)
mul r1.xy, r1.xxxx, l(811.139771, 297.719177, 0.000000, 0.000000)
mov r2.w, l(1.000000)
mov r3.xyz, l(0,0,0,0)
mov r1.z, l(1.000000)
loop 
  lt r1.w, l(10.000000), r1.z
  breakc_nz r1.w
  mul r4.xy, r1.zzzz, r1.xyxx
  frc r4.xy, r4.xyxx
  mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  dp2 r1.w, r4.xyxx, r4.xyxx
  rsq r1.w, r1.w
  mul r2.xy, r1.wwww, r4.xyxx
  mov r2.z, -r2.y
  dp3 r1.w, r2.xzwx, r2.xzwx
  rsq r1.w, r1.w
  mul r4.xyz, r1.wwww, r2.xzwx
  dp3 r1.w, r4.xyzx, r0.xyzx
  lt r2.z, l(0.000000), r1.w
  lt r1.w, r1.w, l(0.000000)
  iadd r1.w, -r2.z, r1.w
  itof r1.w, r1.w
  mul r2.xy, r1.wwww, r2.xyxx
  mul r2.xy, r1.zzzz, r2.xyxx
  mul r2.xy, r2.xyxx, l(0.003646, 0.006481, 0.000000, 0.000000)
  mul r1.w, r1.z, l(0.100000)
  max r1.w, r1.w, l(0.750000)
  mul r4.x, r1.w, r2.x
  mad r2.xy, r2.xyxx, r1.wwww, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t8.xyzw, s0, l(2.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r2.xyxx, t5.xyzw, s0, l(3.000000)
  max r6.xyz, r6.xyzx, l(0.000010, 0.000010, 0.000010, 0.000000)
  dp3 r1.w, r6.xyzx, r6.xyzx
  rsq r1.w, r1.w
  mul r6.xyz, r1.wwww, r6.xyzx
  mad r6.xyz, -r6.xyzx, l(0.800000, 0.800000, 0.800000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
  add r4.z, -r2.y, v1.y
  add r5.xyzw, r0.wxyz, -r5.wxyz
  mul r2.xy, r0.wwww, r4.xzxx
  mov r2.z, r5.x
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r3.w, r1.w
  mul r2.xyz, r2.xyzx, r3.wwww
  dp3 r2.x, r2.xyzx, r0.xyzx
  ge r2.x, r2.x, l(0.125000)
  and r2.x, r2.x, l(0x3f800000)
  dp3 r2.y, r5.yzwy, r5.yzwy
  sqrt r2.y, r2.y
  add_sat r2.y, r2.y, l(-0.010000)
  lt r2.y, l(0.000000), r2.y
  itof r2.y, -r2.y
  mul r2.x, r2.y, r2.x
  sqrt r1.w, r1.w
  add r1.w, -r1.w, l(0.064815)
  max r1.w, r1.w, l(0.000000)
  mul r1.w, r1.w, l(15.428572)
  mul r2.xyz, r2.xxxx, r6.xyzx
  mul r1.w, r1.w, r1.w
  mul r2.xyz, r2.xyzx, r1.wwww
  mad r3.xyz, r2.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000), r3.xyzx
  add r1.z, r1.z, l(1.000000)
endloop 
mul r0.xyz, r3.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)
add r1.x, r0.w, l(-0.950000)
mul_sat r1.x, r1.x, l(-19.999996)
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mad_sat o0.xyz, -r0.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov o0.w, r0.w
ret 
// Approximately 75 instruction slots used
