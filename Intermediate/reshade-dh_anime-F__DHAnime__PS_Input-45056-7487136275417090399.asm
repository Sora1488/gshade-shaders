//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int iBlackLineThickness;           // Offset:    0 Size:     4 [unused]
//   float fBlackLineThreshold;         // Offset:    4 Size:     4 [unused]
//   float iSurfaceBlur;                // Offset:    8 Size:     4
//   float fSaturation;                 // Offset:   12 Size:     4 [unused]
//   float iShadingSteps;               // Offset:   16 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
add r0.xyzw, v1.xyxy, l(-0.000000, -0.000926, 0.000521, 0.000000)
add r1.xyzw, v1.xyxy, l(-0.500000, -0.500000, -0.500000, -0.500926)
sample_l_indexable(texture2d)(float,float,float,float) r2.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r2.y, -r2.x, l(999.000000), l(1000.000000)
div r2.y, r2.x, r2.y
mul r2.xz, r1.yyxy, r2.yyyy
mul r2.xzw, r2.xxyz, l(1000.000000, 0.000000, 1000.000000, 1000.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r3.x, r0.x, r0.y
mul r3.yz, r1.zzwz, r3.xxxx
mad r1.xyz, -r3.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r2.zwxz
add r0.xy, v1.yxyy, l(-0.500000, -0.499479, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
div r3.y, r0.z, r0.w
mul r3.xz, r0.xxyx, r3.yyyy
mad r0.xyz, -r3.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r2.xzwx
mul r2.xzw, r0.xxyz, r1.xxyz
mad r0.xyz, r1.zxyz, r0.yzxy, -r2.xzwx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
lt r0.x, l(0.000000), cb0[0].z
if_nz r0.x
  ftoi r0.x, -cb0[0].z
  mul r0.y, cb0[0].z, cb0[0].z
  mul r0.z, r2.y, l(1000.000000)
  mov r1.xyzw, l(0,0,0,0)
  mov r0.w, l(0)
  mov r2.x, r0.x
  loop 
    itof r2.y, r2.x
    lt r2.y, cb0[0].z, r2.y
    breakc_nz r2.y
    itof r3.x, r2.x
    mov r4.xyzw, r1.xyzw
    mov r2.y, r0.w
    mov r2.z, r0.x
    loop 
      itof r2.w, r2.z
      lt r2.w, cb0[0].z, r2.w
      breakc_nz r2.w
      itof r3.y, r2.z
      dp2 r2.w, r3.xyxx, r3.xyxx
      ge r2.w, r0.y, r2.w
      if_nz r2.w
        mad r3.yz, r3.xxyx, l(0.000000, 0.000521, 0.000926, 0.000000), v1.xxyx
        sample_l_indexable(texture2d)(float,float,float,float) r2.w, r3.yzyy, t2.yzwx, s0, l(0.000000)
        mad r3.w, -r2.w, l(999.000000), l(1000.000000)
        div r2.w, r2.w, r3.w
        mul r2.w, r2.w, l(1000.000000)
        div r2.w, r0.z, r2.w
        ge r3.w, r2.w, l(0.950000)
        ge r2.w, l(1.050000), r2.w
        and r2.w, r2.w, r3.w
        if_nz r2.w
          sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
          add r4.xyzw, r4.xyzw, r5.xyzw
          iadd r2.y, r2.y, l(1)
        endif 
      endif 
      iadd r2.z, r2.z, l(1)
    endloop 
    mov r1.xyzw, r4.xyzw
    mov r0.w, r2.y
    iadd r2.x, r2.x, l(1)
  endloop 
  itof r0.x, r0.w
  div o1.xyzw, r1.xyzw, r0.xxxx
else 
  sample_l_indexable(texture2d)(float,float,float,float) o1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
endif 
mov o0.w, l(1.000000)
ret 
// Approximately 76 instruction slots used
