//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__ReVeilCS__BackBuffer         texture  float4          2d             t8      1 
// __V__ReVeilCS__Mean               texture  float4          2d            t10      1 
// __V__ReVeilCS__Variance           texture  float4          2d            t12      1 
// __V__ReVeilCS__Maximum            texture  float4          2d            t20      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   x           0   TARGET   float   x   
// SV_TARGET                1   x           1   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xy
dcl_output o0.x
dcl_output o1.x
dcl_temps 1
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t12.xyzw, s0, l(8.000000)
sample_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t12.yxzw, s0
add r0.x, -r0.x, r0.y
max r0.x, r0.x, l(0.000000)
div r0.x, r0.x, r0.y
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t8.wxyz, s0
min r0.y, r0.z, r0.y
min r0.y, r0.w, r0.y
sample_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t10.yzxw, s0
add r0.w, -r0.z, r0.y
mul_sat r0.x, r0.w, r0.x
add_sat r0.x, r0.x, r0.z
mul r0.x, r0.y, r0.x
sample_l_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t20.yxzw, s0, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t20.yzxw, s0, l(2.000000)
add r0.y, r0.z, r0.y
sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t20.yzxw, s0, l(3.000000)
add r0.y, r0.z, r0.y
sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t20.yzxw, s0, l(4.000000)
add r0.y, r0.z, r0.y
mul r0.y, r0.y, l(0.250000)
max r0.y, r0.y, l(0.050000)
min r0.y, r0.y, l(1.000000)
div r0.x, r0.x, r0.y
mov o1.x, r0.y
add r0.x, -r0.x, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, v1.xyxx, t2.yxzw, s0, l(0.000000)
mad r0.z, -r0.y, l(999.000000), l(1000.000000)
div r0.y, r0.y, r0.z
mul r0.y, r0.y, l(-0.108202)
exp r0.y, r0.y
mul r0.x, r0.y, r0.x
mul o0.x, r0.x, l(0.882497)
ret 
// Approximately 34 instruction slots used
