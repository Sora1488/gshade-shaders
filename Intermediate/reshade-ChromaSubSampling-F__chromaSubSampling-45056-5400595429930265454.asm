//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int chromaSubType;                 // Offset:    0 Size:     4
//   bool showChroma;                   // Offset:    4 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__chromaSubTex                 texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t4.xyzw, s0
if_z cb0[0].x
  add r1.xy, v1.xyxx, l(0.000521, 0.000000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t4.xyzw, s0
  add r1.xyz, r0.xyzx, r1.xyzx
else 
  ieq r0.w, cb0[0].x, l(1)
  if_nz r0.w
    add r2.xyzw, v1.xyxy, l(0.000521, 0.000926, 0.000521, 0.000000)
    sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.zwzz, t4.xyzw, s0
    add r3.xyz, r0.xyzx, r3.xyzx
    add r2.zw, v1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000926)
    sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.zwzz, t4.xyzw, s0
    add r3.xyz, r3.xyzx, r4.xyzx
    sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyxx, t4.xyzw, s0
    add r1.xyz, r2.xyzx, r3.xyzx
  else 
    ieq r0.w, cb0[0].x, l(2)
    if_nz r0.w
      add r2.xyzw, v1.xyxy, l(0.000521, 0.000000, 0.001042, 0.000000)
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t4.xyzw, s0
      add r3.xyz, r0.xyzx, r3.xyzx
      sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t4.xyzw, s0
      add r2.xyz, r2.xyzx, r3.xyzx
      add r3.xy, v1.xyxx, l(0.001563, 0.000000, 0.000000, 0.000000)
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t4.xyzw, s0
      add r1.xyz, r2.xyzx, r3.xyzx
    else 
      add r2.xyzw, v1.xxyy, l(0.000521, -0.000521, 0.000926, -0.000926)
      add r3.xyzw, v1.xyxy, l(0.000521, 0.000000, -0.000521, 0.000000)
      sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t4.xyzw, s0
      add r0.xyz, r0.xyzx, r4.xyzx
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t4.xyzw, s0
      add r0.xyz, r0.xyzx, r3.xyzx
      add r3.xyzw, v1.xyxy, l(0.000000, 0.000926, 0.000000, -0.000926)
      sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t4.xyzw, s0
      add r0.xyz, r0.xyzx, r4.xyzx
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t4.xyzw, s0
      add r0.xyz, r0.xyzx, r3.xyzx
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xzxx, t4.xyzw, s0
      add r0.xyz, r0.xyzx, r3.xyzx
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.ywyy, t4.xyzw, s0
      add r0.xyz, r0.xyzx, r3.xyzx
      sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xwxx, t4.xyzw, s0
      add r0.xyz, r0.xyzx, r3.xyzx
      sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.yzyy, t4.xyzw, s0
      add r1.xyz, r0.xyzx, r2.xyzx
    endif 
  endif 
endif 
add r0.x, r1.y, r1.x
add r0.x, r1.z, r0.x
mad r0.xyz, -r0.xxxx, l(0.333333, 0.333333, 0.333333, 0.000000), r1.xyzx
if_nz cb0[0].y
  mov o0.xyz, r0.xyzx
  ret 
else 
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
  add r0.w, r1.y, r1.x
  add r0.w, r1.z, r0.w
  mad o0.xyz, r0.wwww, l(0.333333, 0.333333, 0.333333, 0.000000), r0.xyzx
  ret 
endif 
ret 
// Approximately 64 instruction slots used
