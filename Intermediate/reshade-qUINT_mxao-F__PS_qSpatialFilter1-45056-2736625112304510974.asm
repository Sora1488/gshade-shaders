//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__qMXAO_NormalTex              texture  float4          2d             t8      1 
// __V__CommonTex0                   texture  float4          2d            t10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   x           2     NONE   float       
// TEXCOORD                 4    yzw        2     NONE   float       
// TEXCOORD                 5   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t10.wxyz, s0, l(0.000000)
add r1.xyzw, v1.xyxy, l(0.000586, 0.000347, -0.000586, -0.000347)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t8.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t8.xyzw, s0, l(0.000000)
add r0.y, r2.w, -r3.w
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
add r0.y, -|r0.y|, l(1.000000)
max r0.y, r0.y, l(0.000000)
mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r0.z, r2.xyzx, r3.xyzx
mad_sat r0.z, r0.z, l(16.000000), l(-15.000000)
mul r0.w, r0.z, r0.y
mad r0.y, r0.y, r0.z, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t10.xywz, s0, l(0.000000)
mad r0.w, r0.z, r0.w, r0.x
add r0.x, r0.z, r0.x
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.zwzz, t8.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.zwzz, t10.xywz, s0, l(0.000000)
add r1.x, -r3.w, r2.w
mad r1.yzw, r2.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r1.y, r1.yzwy, r3.xyzx
mad_sat r1.y, r1.y, l(16.000000), l(-15.000000)
add r1.x, -|r1.x|, l(1.000000)
max r1.x, r1.x, l(0.000000)
mul r1.z, r1.y, r1.x
mad r0.y, r1.x, r1.y, r0.y
mad r0.w, r0.z, r1.z, r0.w
add r0.x, r0.z, r0.x
add r1.xyzw, v1.xyxy, l(-0.000195, 0.001042, 0.000195, -0.001042)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t8.xyzw, s0, l(0.000000)
add r0.z, -r3.w, r2.w
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r2.x, r2.xyzx, r3.xyzx
mad_sat r2.x, r2.x, l(16.000000), l(-15.000000)
add r0.z, -|r0.z|, l(1.000000)
max r0.z, r0.z, l(0.000000)
mul r2.y, r2.x, r0.z
mad r0.y, r0.z, r2.x, r0.y
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t10.xywz, s0, l(0.000000)
mad r0.w, r0.z, r2.y, r0.w
add r0.x, r0.z, r0.x
sample_l_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.zwzz, t8.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.zwzz, t10.xywz, s0, l(0.000000)
add r1.x, -r3.w, r2.w
mad r1.yzw, r2.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.000000, -1.000000, -1.000000)
dp3 r1.y, r1.yzwy, r3.xyzx
mad_sat r1.y, r1.y, l(16.000000), l(-15.000000)
add r1.x, -|r1.x|, l(1.000000)
max r1.x, r1.x, l(0.000000)
mul r1.z, r1.y, r1.x
mad r0.y, r1.x, r1.y, r0.y
mad r0.w, r0.z, r1.z, r0.w
add r0.x, r0.z, r0.x
div r0.z, r0.w, r0.y
lt r0.y, r0.y, l(2.000000)
and r0.y, r0.y, l(0x3f800000)
mad r0.x, r0.x, l(0.200000), -r0.z
mad o0.xyzw, r0.yyyy, r0.xxxx, r0.zzzz
ret 
// Approximately 59 instruction slots used
