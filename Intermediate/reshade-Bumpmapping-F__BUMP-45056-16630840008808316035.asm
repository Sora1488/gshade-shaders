//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float SMOOTHING;                   // Offset:    0 Size:     4 [unused]
//   float RANGE;                       // Offset:    4 Size:     4
//   float EMBOSS;                      // Offset:    8 Size:     4
//   float CONTRAST;                    // Offset:   12 Size:     4
//   float SMART;                       // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__SmoothTexture01              texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 6
mul r0.xy, cb0[0].yyyy, l(0.000521, 0.000926, 0.000000, 0.000000)
mov r0.w, l(0)
add r1.xyzw, -r0.xyxw, v1.xyxy
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.zwzz, t4.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t4.xyzw, s0
add r3.xyzw, r0.xwwy, v1.xyxy
add r0.xy, -r0.wyww, v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t4.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t4.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t4.xyzw, s0
add r5.xyz, r2.xyzx, r4.xyzx
add r2.xyz, r2.xyzx, -r4.xyzx
add r4.xyz, r5.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mul r5.xyz, |r2.xyzx|, l(2.250000, 2.250000, 2.250000, 0.000000)
div_sat r4.xyz, r5.xyzx, r4.xyzx
mad r4.xyz, r4.xyzx, l(0.700000, 0.700000, 0.700000, 0.000000), l(-0.700000, -0.700000, -0.700000, 0.000000)
mad r4.xyz, cb0[1].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r2.xyzx, r4.xyzx
mad r4.xy, cb0[0].yyyy, l(0.000521, 0.000926, 0.000000, 0.000000), v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t4.xyzw, s0
add r5.xyz, r1.xyzx, r4.xyzx
add r1.xyz, r1.xyzx, -r4.xyzx
add r4.xyz, r5.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mul r5.xyz, |r1.xyzx|, l(2.250000, 2.250000, 2.250000, 0.000000)
div_sat r4.xyz, r5.xyzx, r4.xyzx
mad r4.xyz, r4.xyzx, l(0.700000, 0.700000, 0.700000, 0.000000), l(-0.700000, -0.700000, -0.700000, 0.000000)
mad r4.xyz, cb0[1].xxxx, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, r4.xyzx, r1.xyzx, r2.xyzx
add r2.xyz, r0.xyzx, r3.xyzx
add r0.xyz, r0.xyzx, -r3.xyzx
add r2.xyz, r2.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)
mul r3.xyz, |r0.xyzx|, l(2.250000, 2.250000, 2.250000, 0.000000)
div_sat r2.xyz, r3.xyzx, r2.xyzx
mad r2.xyz, r2.xyzx, l(0.700000, 0.700000, 0.700000, 0.000000), l(-0.700000, -0.700000, -0.700000, 0.000000)
mad r2.xyz, cb0[1].xxxx, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.xyz, r2.xyzx, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t4.xyzw, s0
add r1.xyz, r1.xyzx, r2.xyzx
mul r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.xyz, -cb0[0].zzzz, r0.xyzx, r1.xyzx
add r0.w, -cb0[0].w, l(1.000000)
mul r2.xyz, r0.wwww, r1.xyzx
max r0.xyz, r0.xyzx, r2.xyzx
add r0.w, cb0[0].w, l(1.000000)
mul r1.xyz, r0.wwww, r1.xyzx
min o0.xyz, r0.xyzx, r1.xyzx
ret 
// Approximately 48 instruction slots used
