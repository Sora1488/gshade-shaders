//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float BLOOM_THRESHOLD;             // Offset:    0 Size:     4 [unused]
//   float BLOOM_STRENGTH;              // Offset:    4 Size:     4
//   float BLOOM_RADIUS;                // Offset:    8 Size:     4 [unused]
//   float BLOOM_SATURATION;            // Offset:   12 Size:     4
//   int BLOOM_BLEND;                   // Offset:   16 Size:     4
//   bool BLOOM_DEBUG;                  // Offset:   20 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__TexBloomV                    texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t6.xyzw, s0
dp3 r1.x, r0.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r0.xyz, r0.xyzx, -r1.xxxx
mad r0.xyz, cb0[0].wwww, r0.xyzx, r1.xxxx
mul r1.xyz, r0.xyzx, cb0[0].yyyy
if_nz cb0[1].y
  mov o0.w, r0.w
  mov o0.xyz, r1.xyzx
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
mad r3.xyz, r0.xyzx, cb0[0].yyyy, r2.xyzx
add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mov_sat r5.xyz, r4.xyzx
mad r5.xyz, r1.xyzx, r5.xyzx, r2.xyzx
mad r0.xyz, -r0.xyzx, cb0[0].yyyy, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, -r4.xyzx, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r6.xyz, r1.xyzx, r1.xyzx
mad r1.xyz, -r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r2.xyzx, r2.xyzx
mul r6.xyz, r2.xyzx, r6.xyzx
mad r1.xyz, r1.xyzx, r7.xyzx, r6.xyzx
ieq r6.xyzw, cb0[1].xxxx, l(1, 2, 3, 4)
div r0.xyz, r2.xyzx, r0.xyzx
movc r0.xyz, r6.wwww, r0.xyzx, r2.xyzx
movc r0.xyz, r6.zzzz, r1.xyzx, r0.xyzx
movc r0.xyz, r6.yyyy, r4.xyzx, r0.xyzx
movc r0.xyz, r6.xxxx, r5.xyzx, r0.xyzx
movc o0.xyz, cb0[1].xxxx, r0.xyzx, r3.xyzx
mov o0.w, r2.w
ret 
// Approximately 31 instruction slots used
