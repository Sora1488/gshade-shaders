//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float GravityIntensity;            // Offset:    0 Size:     4
//   float GravityRNG;                  // Offset:    4 Size:     4
//   bool UseImage;                     // Offset:    8 Size:     4
//   bool InvertGravity;                // Offset:   12 Size:     4 [unused]
//   bool AllowOverlapping;             // Offset:   16 Size:     4 [unused]
//   float3 BlendColor;                 // Offset:   20 Size:    12 [unused]
//   float EffectFactor;                // Offset:   32 Size:     4 [unused]
//   bool FilterDepth;                  // Offset:   36 Size:     4 [unused]
//   float FocusDepth;                  // Offset:   40 Size:     4 [unused]
//   float FocusRangeDepth;             // Offset:   44 Size:     4 [unused]
//   float FocusEdgeDepth;              // Offset:   48 Size:     4 [unused]
//   bool Spherical;                    // Offset:   52 Size:     4 [unused]
//   int Sphere_FieldOfView;            // Offset:   56 Size:     4 [unused]
//   float Sphere_FocusHorizontal;      // Offset:   60 Size:     4 [unused]
//   float Sphere_FocusVertical;        // Offset:   64 Size:     4 [unused]
//   bool FilterColor;                  // Offset:   68 Size:     4 [unused]
//   bool ShowSelectedHue;              // Offset:   72 Size:     4 [unused]
//   float Value;                       // Offset:   76 Size:     4 [unused]
//   float ValueRange;                  // Offset:   80 Size:     4 [unused]
//   float Hue;                         // Offset:   84 Size:     4 [unused]
//   float HueRange;                    // Offset:   88 Size:     4 [unused]
//   float Saturation;                  // Offset:   92 Size:     4 [unused]
//   float SaturationRange;             // Offset:   96 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__texGravitySeedMapCopy        texture  float4          2d             t6      1 
// __V__texGravitySeedMap2           texture  float4          2d             t8      1 
// __V__texGravityCurrentSettings    texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   x           0   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.x
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.x, l(0.000000, 0.250000, 0.000000, 0.000000), t10.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.y, l(0.000000, 0.750000, 0.000000, 0.000000), t10.yxzw, s0
add r0.x, r0.y, r0.x
movc r0.y, cb0[0].z, l(0.010000), l(0)
add r0.y, r0.y, cb0[0].y
add r0.y, r0.y, cb0[0].x
add r0.x, -r0.y, r0.x
lt r0.x, l(0.001000), |r0.x|
if_nz r0.x
  sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t8.xyzw, s0
  add r0.x, r0.x, cb0[0].y
  add r0.x, r0.x, l(-1.000000)
  div_sat r0.x, r0.x, cb0[0].y
  mul r0.y, cb0[0].y, l(0.033000)
  add r0.zw, v1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  mul r0.z, r0.z, r0.y
  mad r0.z, r0.z, l(1.777778), l(-0.675000)
  mad r0.y, r0.y, r0.w, l(-0.460000)
  mov r1.xy, r0.zyzz
  mov r0.w, l(0)
  loop 
    ige r1.z, r0.w, l(100)
    breakc_nz r1.z
    mul r1.z, r1.y, r1.y
    mad r1.z, r1.x, r1.x, -r1.z
    add r2.x, r0.z, r1.z
    dp2 r1.z, r1.yyyy, r1.xxxx
    add r2.y, r0.y, r1.z
    dp2 r1.z, r2.xyxx, r2.xyxx
    lt r1.z, l(4.000000), r1.z
    if_nz r1.z
      break 
    endif 
    mov r1.xy, r2.xyxx
    iadd r0.w, r0.w, l(1)
  endloop 
  ieq r0.y, r0.w, l(100)
  itof r0.z, r0.w
  mad r0.z, r0.z, l(0.010000), l(-0.800000)
  mul_sat r0.z, r0.z, l(4.545455)
  movc r0.y, r0.y, l(0), r0.z
  movc o0.x, cb0[0].z, r0.x, r0.y
else 
  sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t6.xyzw, s0
  mov o0.x, r0.x
endif 
ret 
// Approximately 47 instruction slots used
