//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 4
add r0.xy, v1.xxxx, l(0.000521, -0.000521, 0.000000, 0.000000)
ge r0.x, r0.x, v1.x
ge r0.y, v1.x, r0.y
and r0.x, r0.y, r0.x
mad r0.yzw, -v1.xxxx, l(0.000000, 1.777778, 1.777778, 1.777778), l(0.000000, 1.000000, 1.000926, 0.999074)
ge r0.z, r0.z, v1.y
and r0.z, r0.z, r0.x
ge r0.w, v1.y, r0.w
eq r0.y, r0.y, l(-1.000000)
and r0.z, r0.w, r0.z
mad r1.xyzw, v1.xxxx, l(1.777778, 1.777778, 1.777778, 1.777778), l(-0.777778, 0.000926, -0.000926, -0.776852)
ge r1.yw, r1.yyyw, v1.yyyy
and r1.yw, r0.xxxx, r1.yyyw
ge r0.w, v1.y, r1.z
and r0.w, r0.w, r1.y
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t0.xyzw, s0
movc r3.xyz, r0.wwww, l(0,0,0,0), r2.xyzx
eq r1.yz, v1.xxxx, l(0.000000, -1.000000, -0.562500, 0.000000)
or r0.w, r1.z, r1.y
movc r2.xyz, r0.wwww, r2.xyzx, r3.xyzx
movc r3.xyz, r0.zzzz, l(0,0,0,0), r2.xyzx
or r0.y, r0.y, r1.y
movc r0.yzw, r0.yyyy, r2.xxyz, r3.xxyz
add r1.z, -v1.x, l(1.000000)
mad r2.xy, r1.zzzz, l(1.777778, 1.777778, 0.000000, 0.000000), l(0.000926, -0.000926, 0.000000, 0.000000)
eq r1.xz, r1.xxzx, l(-1.000000, 0.000000, -0.562500, 0.000000)
or r1.xz, r1.xxzx, r1.yyyy
ge r1.y, r2.x, v1.y
ge r2.x, v1.y, r2.y
and r0.x, r0.x, r1.y
and r0.x, r2.x, r0.x
movc r2.xyz, r0.xxxx, l(0,0,0,0), r0.yzwy
movc r0.xyz, r1.zzzz, r0.yzwy, r2.xyzx
mad r0.w, v1.x, l(1.777778), l(-0.778704)
ge r0.w, v1.y, r0.w
and r0.w, r0.w, r1.w
movc r1.yzw, r0.wwww, l(0,0,0,0), r0.xxyz
movc o0.xyz, r1.xxxx, r0.xyzx, r1.yzwy
ret 
// Approximately 39 instruction slots used
