//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float SSR_FIELD_OF_VIEW;           // Offset:    0 Size:     4 [unused]
//   float SSR_REFLECTION_INTENSITY;    // Offset:    4 Size:     4
//   float SSR_FRESNEL_EXP;             // Offset:    8 Size:     4
//   float SSR_FADE_DIST;               // Offset:   12 Size:     4 [unused]
//   float SSR_RAY_INC;                 // Offset:   16 Size:     4
//   float SSR_ACCEPT_RANGE;            // Offset:   20 Size:     4
//   float SSR_JITTER_AMOUNT;           // Offset:   24 Size:     4
//   float SSR_FILTER_SIZE;             // Offset:   28 Size:     4 [unused]
//   float SSR_RELIEF_AMOUNT;           // Offset:   32 Size:     4
//   float SSR_RELIEF_SCALE;            // Offset:   36 Size:     4
//   float FRAME_TIME;                  // Offset:   40 Size:     4 [unused]
//   int FRAME_COUNT;                   // Offset:   44 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__qUINT__BackBufferTex         texture  float4          2d             t0      1 
// __V__qUINT__DepthBufferTex        texture  float4          2d             t2      1 
// __V__SSR_ColorTex                 texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 4   xyz         2     NONE   float   xyz 
// TEXCOORD                 5   xyz         3     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 12
mad r0.xyz, v1.xyxx, v3.xyzx, v2.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div_sat r0.w, r0.w, r1.x
mul r0.xyz, r0.wwww, r0.xyzx
mul r0.xyw, r0.xyxz, l(1000.000000, 1000.000000, 0.000000, 1000.000000)
add r1.xyzw, v1.xyxy, l(0.000521, 0.000000, -0.000521, -0.000000)
mad r2.xyz, r1.yxxy, v3.yzxy, v2.yzxy
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div_sat r1.x, r1.x, r1.y
mul r2.xyz, r1.xxxx, r2.xyzx
mad r2.xyz, r2.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), -r0.ywxy
mad r3.xyz, r1.wzzw, v3.yzxy, v2.yzxy
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.zwzz, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div_sat r1.x, r1.x, r1.y
mul r1.xyz, r1.xxxx, r3.xyzx
mad r1.xyz, -r1.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r0.ywxy
add r3.xyzw, v1.xyxy, l(0.000000, 0.000926, -0.000000, -0.000926)
mad r4.xyz, r3.xxyx, v3.zxyz, v2.zxyz
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t2.yzwx, s0, l(0.000000)
mad r2.w, -r1.w, l(999.000000), l(1000.000000)
div_sat r1.w, r1.w, r2.w
mul r4.xyz, r1.wwww, r4.xyzx
mad r4.xyz, r4.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), -r0.wxyw
mad r5.xyz, r3.zzwz, v3.zxyz, v2.zxyz
sample_l_indexable(texture2d)(float,float,float,float) r1.w, r3.zwzz, t2.yzwx, s0, l(0.000000)
mad r2.w, -r1.w, l(999.000000), l(1000.000000)
div_sat r1.w, r1.w, r2.w
mul r3.xyz, r1.wwww, r5.xyzx
mad r3.xyz, -r3.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r0.wxyw
lt r1.w, |r1.y|, |r2.y|
and r1.w, r1.w, l(0x3f800000)
add r5.xyz, -r2.xyzx, r1.xyzx
mad r1.xzw, r1.wwww, r5.xxyz, r2.xxyz
lt r2.x, |r3.x|, |r4.x|
and r2.x, r2.x, l(0x3f800000)
add r2.yzw, -r4.xxyz, r3.xxyz
mad r2.xyz, r2.xxxx, r2.yzwy, r4.xyzx
mul r1.y, r1.y, r1.y
mad r1.y, r1.z, r1.z, -r1.y
mul r2.w, r3.x, r3.x
mad r2.w, r2.x, r2.x, -r2.w
add o1.w, |r1.y|, |r2.w|
mul r3.xyz, r1.xzwx, r2.xyzx
mad r1.xyz, r2.zxyz, r1.zwxz, -r3.xyzx
dp3 r1.w, r1.xyzx, r1.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r1.xyzx
mov r2.w, l(0)
mov r3.xy, l(1.000000,3.000000,0,0)
loop 
  lt r3.z, r3.y, l(1.000000)
  breakc_nz r3.z
  mul r3.x, r3.x, l(4.000000)
  add r3.z, -r3.y, l(1.000000)
  exp r3.z, r3.z
  mul r3.zw, r3.zzzz, v0.xxxy
  round_ni r3.zw, r3.zzzw
  add r4.xyzw, r3.zwzw, r3.zwzw
  ge r4.xyzw, r4.xyzw, -r4.zwzw
  movc r4.xyzw, r4.xyzw, l(2.000000,2.000000,0.500000,0.500000), l(-2.000000,-2.000000,-0.500000,-0.500000)
  mul r3.zw, r3.zzzw, r4.zzzw
  frc r3.zw, r3.zzzw
  mul r3.zw, r3.zzzw, r4.xxxy
  add r4.x, r3.z, r3.z
  mad r3.z, r3.z, l(-4.000000), l(3.000000)
  mad r3.z, r3.w, r3.z, r4.x
  mul r3.z, r3.x, r3.z
  mad r2.w, r3.z, l(0.333333), r2.w
  add r3.y, r3.y, l(-1.000000)
endloop 
mad r2.w, r2.w, l(0.011905), l(-0.500000)
dp3 r3.x, r0.xywx, r0.xywx
rsq r3.x, r3.x
mul r3.xyz, r0.xywx, r3.xxxx
div r4.xy, l(0.020833, 0.037037, 0.000000, 0.000000), r0.wwww
mul r4.xy, r4.xyxx, cb0[2].yyyy
mul r3.w, cb0[2].x, l(0.005000)
mov r4.z, l(0)
add r5.xyzw, r4.xzzy, v1.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t0.xyzw, s0, l(0.000000)
dp3 r4.w, r6.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
mul r4.w, r3.w, r4.w
add r6.xyzw, -r4.xzzy, v1.xyxy
sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t0.xyzw, s0, l(0.000000)
dp3 r4.z, r7.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zwzz, t0.xyzw, s0, l(0.000000)
dp3 r7.x, r7.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
mul r7.x, r3.w, r7.x
sample_l_indexable(texture2d)(float,float,float,float) r7.yzw, r6.zwzz, t0.wxyz, s0, l(0.000000)
dp3 r7.y, r7.yzwy, l(0.333000, 0.333000, 0.333000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t2.xyzw, s0, l(0.000000)
mad r5.y, -r5.x, l(999.000000), l(1000.000000)
div_sat r5.x, r5.x, r5.y
sample_l_indexable(texture2d)(float,float,float,float) r5.y, r6.xyxx, t2.yxzw, s0, l(0.000000)
mad r6.x, -r5.y, l(999.000000), l(1000.000000)
div_sat r5.y, r5.y, r6.x
sample_l_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t2.yzxw, s0, l(0.000000)
mad r5.w, -r5.z, l(999.000000), l(1000.000000)
div_sat r5.z, r5.z, r5.w
sample_l_indexable(texture2d)(float,float,float,float) r5.w, r6.zwzz, t2.yzwx, s0, l(0.000000)
mad r6.x, -r5.w, l(999.000000), l(1000.000000)
div_sat r5.w, r5.w, r6.x
add r5.xz, -r5.xxzx, r5.yywy
mov r5.xy, |r5.xzxx|
mad r5.xy, -r5.xyxx, l(1000.000000, 1000.000000, 0.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
max r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r6.x, r4.z, r3.w, -r4.w
mad r6.y, r7.y, r3.w, -r7.x
mul r4.zw, r5.xxxy, r6.xxxy
div r4.xy, r4.zwzz, r4.xyxx
mul r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r4.z, l(1.000000)
dp3 r3.w, r4.xyzx, r4.xyzx
rsq r5.z, r3.w
mul r5.xy, r4.xyxx, r5.zzzz
mad r1.xyz, r1.xyzx, r1.wwww, l(0.000000, 0.000000, 1.000000, 0.000000)
mul r4.xyz, r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000)
dp3 r1.w, r1.xyzx, r4.xyzx
mul r1.xyw, r1.wwww, r1.xyxz
div r1.xyz, r1.xywx, r1.zzzz
mad r1.xyz, -r5.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), r1.xyzx
dp3 r1.w, r3.xyzx, r1.xyzx
add r1.w, r1.w, r1.w
mad r4.xyz, r1.xyzx, -r1.wwww, r3.xyzx
mul r1.w, r2.w, cb0[1].z
mad r1.w, r1.w, l(0.050000), l(0.200000)
sqrt r0.z, r0.z
mul r0.z, r0.z, r1.w
dp3 r1.w, r4.xyzx, r3.xyzx
add_sat r2.w, -r1.w, l(1.000000)
add r2.w, r2.w, l(0.001000)
rcp r2.w, r2.w
mul r0.z, r0.z, r2.w
mad r0.xyw, r4.xyxz, r0.zzzz, r0.xyxw
div r5.xy, v2.xyxx, v3.xyxx
mul r2.w, cb0[1].x, l(0.050000)
mov r6.z, l(0)
mov r7.z, l(20)
mov r5.zw, v1.xxxy
mov r7.x, r0.z
mov r8.xyz, r0.xywx
mov r9.zw, l(0,0,1,0)
mov r3.w, l(-1)
loop 
  breakc_z r3.w
  mul r10.xy, r8.zzzz, v3.xyxx
  div r10.xy, r8.xyxx, r10.xyxx
  add r5.zw, -r5.xxxy, r10.xxxy
  mad r4.w, r5.z, v3.z, v2.z
  sample_l_indexable(texture2d)(float,float,float,float) r6.w, r5.zwzz, t2.yzwx, s0, l(0.000000)
  mad r7.w, -r6.w, l(999.000000), l(1000.000000)
  div_sat r6.w, r6.w, r7.w
  mul r4.w, r4.w, r6.w
  mad r4.w, r4.w, l(1000.000000), -r8.z
  lt r6.w, r4.w, l(0.000000)
  mul r7.w, r7.x, -cb0[1].y
  lt r4.w, r7.w, r4.w
  and r4.w, r4.w, r6.w
  ilt r6.w, r9.w, l(3)
  div r7.w, r7.x, cb0[1].x
  mad r10.xyz, -r4.xyzx, r7.wwww, r8.xyzx
  mul r6.x, r2.w, r7.w
  mov r6.y, r10.z
  mov r7.y, r8.z
  movc r11.xyz, r6.wwww, r6.xyzx, r7.xyzx
  movc r6.xy, r6.wwww, r10.xyxx, r8.xyxx
  iadd r11.w, r9.w, l(1)
  movc r10.xy, r4.wwww, r6.xyxx, r8.xyxx
  mov r9.xy, r7.xyxx
  movc r9.xyzw, r4.wwww, r11.xyzw, r9.xyzw
  mov r10.z, r9.y
  mad r8.xyz, r4.xyzx, r9.xxxx, r10.xyzx
  mul r7.x, r9.x, cb0[1].x
  mad_sat r4.w, -r5.w, r5.w, r5.w
  ne r4.w, l(0.000000, 0.000000, 0.000000, 0.000000), r4.w
  movc r4.w, r4.w, l(0), l(20)
  iadd r4.w, r4.w, r9.z
  iadd r9.z, r4.w, l(1)
  ilt r3.w, r4.w, l(20)
endloop 
dp3 r0.x, -r3.xyzx, r1.xyzx
add_sat r0.x, -r0.x, l(1.000000)
log r0.y, r0.x
mul r0.y, r0.y, cb0[0].z
exp r0.y, r0.y
mad r0.y, r0.y, l(0.960000), l(0.040000)
mul r0.y, r0.y, cb0[0].y
mov_sat r1.w, r1.w
mul r0.x, r0.x, r1.w
movc r0.z, r9.w, l(1.000000), l(0)
mul r0.y, r0.y, r0.z
mul r0.x, r0.x, r0.y
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r5.zwzz, t4.wxyz, s0
mul o0.xyz, r0.xxxx, r0.yzwy
mad o1.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mov o0.w, r0.x
ret 
// Approximately 200 instruction slots used
