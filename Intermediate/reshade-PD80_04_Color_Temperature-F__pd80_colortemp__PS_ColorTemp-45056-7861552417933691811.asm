//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
mov r0.zw, l(0,0,-1.000000,0.666667)
mov r1.zw, l(0,0,0,-0.333333)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t0.xyzw, s0
mul r3.xyz, r2.xyzx, l(1.000000, 0.996510, 0.980557, 0.000000)
max r2.xyz, r2.yzxy, l(0.000001, 0.000001, 0.000001, 0.000000)
max r3.xyw, r3.yzyx, l(0.000001, 0.000001, 0.000000, 0.000001)
lt r2.w, r3.x, r3.y
mov r0.xy, r3.yxyy
mov r1.xy, r0.yxyy
movc r0.xyzw, r2.wwww, r0.xyzw, r1.xyzw
lt r1.x, r3.w, r0.x
mov r3.xyz, r0.xywx
mov r0.xyw, r3.wywx
movc r0.xyzw, r1.xxxx, r3.xyzw, r0.xyzw
min r1.x, r0.y, r0.w
add r1.x, r0.x, -r1.x
mad r0.x, -r1.x, l(0.500000), r0.x
mad r0.x, r0.x, l(2.000000), l(-1.000000)
add r0.x, -|r0.x|, l(1.000001)
div r0.x, r1.x, r0.x
mad r1.x, r1.x, l(6.000000), l(0.000001)
lt r1.y, r2.x, r2.y
movc r2.xy, r1.yyyy, r2.yxyy, r2.xyxx
lt r1.y, r2.z, r2.x
movc r1.yzw, r1.yyyy, r2.xxyz, r2.zzyx
min r1.z, r1.z, r1.w
add r1.z, -r1.z, r1.y
mad r1.y, -r1.z, l(0.500000), r1.y
mad r1.z, r1.y, l(2.000000), l(-1.000000)
add r1.z, -|r1.z|, l(1.000000)
mul r0.x, r0.x, r1.z
add r0.y, -r0.y, r0.w
div r0.y, r0.y, r1.x
add r0.y, r0.z, r0.y
mad r0.yzw, |r0.yyyy|, l(0.000000, 6.000000, 6.000000, 6.000000), l(0.000000, -3.000000, -2.000000, -4.000000)
mad_sat r0.yzw, |r0.yyzw|, l(0.000000, 1.000000, -1.000000, -1.000000), l(0.000000, -1.000000, 2.000000, 2.000000)
add r0.yzw, r0.yyzw, l(0.000000, -0.500000, -0.500000, -0.500000)
mad o0.xyz, r0.yzwy, r0.xxxx, r1.yyyy
mov o0.w, l(1.000000)
ret 
// Approximately 40 instruction slots used
