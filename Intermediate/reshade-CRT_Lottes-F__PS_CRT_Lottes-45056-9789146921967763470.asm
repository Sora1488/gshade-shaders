//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 f2Warp;                     // Offset:    0 Size:     8
//   float fThin;                       // Offset:    8 Size:     4
//   float fBlur;                       // Offset:   12 Size:     4
//   float fMask;                       // Offset:   16 Size:     4
//   float fDownscale;                  // Offset:   20 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __srgbV__ReShade__BackBufferTex    texture  float4          2d             t1      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
div r0.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[0].yxyy
mad r0.zw, v1.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r1.xy, r0.wzww, r0.wzww
mad r0.xy, r1.xyxx, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, r0.zwzz
div r0.zw, l(0.000000, 0.000000, 1920.000000, 1080.000000), cb0[1].yyyy
mul r1.xy, r0.wzww, l(0.500000, 0.500000, 0.000000, 0.000000)
mad r1.xy, r0.xyxx, r1.xyxx, r1.xyxx
mul r0.xy, r0.yxyy, r0.yxyy
min r0.xy, r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
add r0.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.x, -r0.x, r0.y, l(1.000000)
mad_sat r0.x, -r0.x, r0.w, r0.w
div r0.yz, l(1.000000, 1.000000, 1.000000, 1.000000), r0.zzwz
add r1.zw, r1.xxxy, l(0.000000, 0.000000, -0.500000, -1.500000)
round_ni r1.zw, r1.zzzw
add r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
add r1.xy, -r1.zwzz, r1.xyxx
mad r0.w, -r1.x, cb0[0].z, cb0[0].z
min r0.w, r0.w, l(0.500000)
mul r0.w, r0.w, l(6.283185)
sincos null, r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r2.x, r1.y, r1.y
mul r2.x, r2.x, -cb0[0].w
exp r2.x, r2.x
add r2.yzw, r1.yyyy, l(0.000000, -1.000000, -2.000000, -3.000000)
mul r1.x, r1.x, cb0[0].z
min r1.x, r1.x, l(0.500000)
mul r1.x, r1.x, l(6.283185)
sincos null, r1.x, r1.x
mad r1.x, r1.x, l(0.500000), l(0.500000)
mul r2.yzw, r2.yyzw, r2.yyzw
mul r2.yzw, r2.yyzw, -cb0[0].wwww
exp r2.yzw, r2.yyzw
add r1.y, r2.y, r2.x
add r1.y, r2.z, r1.y
add r1.y, r2.w, r1.y
div r1.y, l(1.000000, 1.000000, 1.000000, 1.000000), r1.y
mul r0.x, r0.x, r1.y
mul r0.w, r0.x, r0.w
mul r0.x, r0.x, r1.x
mul r3.zw, r0.yyyz, r1.wwwz
mad r3.xy, r1.wzww, r0.yzyy, r0.yzyy
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r3.zyzz, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyxx, t1.xyzw, s0
mul r4.xyz, r2.yyyy, r4.xyzx
mad r1.xyz, r1.xyzx, r2.xxxx, r4.xyzx
add r4.y, r0.y, r3.x
add r4.x, r0.y, r4.y
mov r4.zw, r3.wwwy
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r3.xwxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t1.xyzw, s0
mul r5.xyz, r2.yyyy, r5.xyzx
mad r3.xyz, r3.xyzx, r2.xxxx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r4.ywyy, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r6.xyz, r4.yzyy, t1.xyzw, s0
mad r3.xyz, r6.xyzx, r2.zzzz, r3.xyzx
mad r1.xyz, r5.xyzx, r2.zzzz, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r4.xwxx, t1.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xzxx, t1.xyzw, s0
mad r3.xyz, r4.xyzx, r2.wwww, r3.xyzx
mad r1.xyz, r2.xyzx, r2.wwww, r1.xyzx
mul r0.yzw, r0.wwww, r1.xxyz
mad r0.xyz, r3.xyzx, r0.xxxx, r0.yzwy
mul r0.w, v1.x, l(640.000000)
frc r0.w, r0.w
lt r1.xy, r0.wwww, l(0.333333, 0.666667, 0.000000, 0.000000)
mov r2.x, l(1.000000)
mov r3.x, cb0[1].x
mov r3.yz, l(0,1.000000,1.000000,0)
movc r2.yz, r1.yyyy, r3.xxzx, r3.zzxz
movc r1.xyz, r1.xxxx, r3.xyzx, r2.xyzx
mul r0.xyz, r0.xyzx, r1.xyzx
max r0.w, r0.z, r0.y
max r0.w, r0.w, r0.x
max r0.w, r0.w, l(0.000000)
mad r1.x, cb0[1].x, l(0.500000), l(0.500000)
mad r1.x, r1.x, l(0.500000), l(0.500000)
add r1.y, -cb0[0].z, l(1.500000)
mul r1.x, r1.x, r1.y
div r1.x, l(0.180000), r1.x
add r1.y, r1.x, l(-0.180000)
mul r1.z, r1.x, l(0.820000)
mad r1.x, r1.x, l(-0.180000), l(0.180000)
div r1.xy, r1.xyxx, r1.zzzz
mad r1.x, r0.w, r1.y, r1.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r1.x, r0.w, r1.x
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mul o0.xyz, r1.xxxx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 94 instruction slots used
