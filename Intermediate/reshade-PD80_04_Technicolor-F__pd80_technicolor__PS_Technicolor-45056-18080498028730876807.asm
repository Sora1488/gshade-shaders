//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float3 Red2strip;                  // Offset:    0 Size:    12
//   float3 Cyan2strip;                 // Offset:   16 Size:    12
//   float3 colorKey;                   // Offset:   32 Size:    12
//   float Saturation2;                 // Offset:   44 Size:     4
//   bool enable3strip;                 // Offset:   48 Size:     4
//   float3 ColorStrength;              // Offset:   52 Size:    12
//   float Brightness;                  // Offset:   64 Size:     4
//   float Saturation;                  // Offset:   68 Size:     4
//   float Strength;                    // Offset:   72 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[5], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mov_sat r0.xyz, r0.xyzx
add r1.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r2.xyz, r0.xyzx, r1.yxyy
mul r1.xyz, r1.zzxz, r2.xyzx
mad r2.xyz, -r1.yxyy, cb0[3].zyzz, r0.xyzx
mad r2.xyz, r1.xyzx, cb0[4].xxxx, r2.xyzx
mad r1.xyz, -r1.zzxz, cb0[3].wwyw, r2.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad r1.xyz, cb0[4].zzzz, r1.xyzx, r0.xyzx
dp3 r0.z, r1.xyzx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r1.xyz, -r0.zzzz, r1.xyzx
mad r1.xyz, cb0[4].yyyy, r1.xyzx, r0.zzzz
dp3 r2.x, l(-0.333332, 0.666666, 0.666666, 0.000000), cb0[2].xyzx
dp3 r2.y, l(0.666666, -0.333332, 0.666666, 0.000000), cb0[2].xyzx
dp3 r2.z, l(0.666666, 0.666666, -0.333332, 0.000000), cb0[2].xyzx
max r2.xyz, r0.yyyy, r2.xyzx
add r0.xy, -r0.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mad r0.xzw, -r0.xxxx, cb0[1].xxyz, l(1.000000, 0.000000, 1.000000, 1.000000)
mad r3.xyz, -r0.yyyy, cb0[0].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.xyz, r0.xzwx, r3.xyzx
mul r0.xyz, r2.xyzx, r0.xyzx
dp3 r2.x, l(-0.328075, 0.736399, 0.591677, 0.000000), r0.xyzx
dp3 r2.y, l(0.591677, -0.328075, 0.736399, 0.000000), r0.xyzx
dp3 r2.z, l(0.736399, 0.591677, -0.328075, 0.000000), r0.xyzx
dp3 r0.x, r2.xyzx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r0.yzw, -r0.xxxx, r2.xxyz
mad r0.xyz, cb0[2].wwww, r0.yzwy, r0.xxxx
movc o0.xyz, cb0[3].xxxx, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 31 instruction slots used
