//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   uint Strength;                     // Offset:    0 Size:     4
//   float Offset;                      // Offset:    4 Size:     4
//   bool UseMask;                      // Offset:    8 Size:     4
//   float Clamp;                       // Offset:   12 Size:     4
//   bool Preview;                      // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__BlueNoise__BlueNoiseTex      texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 3
mad r0.xy, v1.xyxx, l(2.000000, 1.125000, 0.000000, 0.000000), l(-1.000000, -0.562500, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
min r0.x, r0.x, l(1.000000)
utof r0.y, cb0[0].x
mad r0.x, -r0.x, r0.y, r0.y
movc r0.x, cb0[0].z, r0.x, r0.y
mad r1.xy, cb0[0].yyyy, l(0.000926, 0.000521, 0.000000, 0.000000), v1.yxyy
mov r1.zw, v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r0.yzw, r1.zxzz, t0.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.ywyy, t0.xyzw, s0
dp3 r1.x, l(0.299000, 0.587000, 0.114000, 0.000000), r1.xyzx
dp3 r0.y, l(0.299000, 0.587000, 0.114000, 0.000000), r0.yzwy
mad r2.xy, -cb0[0].yyyy, l(0.000926, 0.000521, 0.000000, 0.000000), v1.yxyy
mov r2.zw, v1.xxxy
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r2.zxzz, t0.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.ywyy, t0.xyzw, s0
dp3 r0.z, l(0.299000, 0.587000, 0.114000, 0.000000), r2.xyzx
dp3 r0.w, l(0.299000, 0.587000, 0.114000, 0.000000), r1.yzwy
add r0.y, r0.w, r0.y
add r0.y, r1.x, r0.y
add r0.y, r0.z, r0.y
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
dp3 r0.z, l(0.299000, 0.587000, 0.114000, 0.000000), r1.xyzx
mad r0.y, r0.y, l(0.250000), -r0.z
mul r0.y, r0.y, l(0.500000)
mad r0.x, r0.x, -r0.y, l(0.500000)
add r0.y, -cb0[0].w, l(1.000000)
max r0.y, r0.y, r0.x
min r0.y, r0.y, cb0[0].w
ne r0.z, cb0[0].w, l(1.000000)
movc r0.x, r0.z, r0.y, r0.x
min r0.y, r0.x, l(0.500000)
min r2.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
max r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mad r0.yzw, r2.xxyz, r0.yyyy, r1.xxyz
max r1.w, r0.x, l(0.500000)
mad r1.xyz, -r1.xyzx, r1.wwww, r1.wwww
add r0.yzw, r0.yyzw, r1.xxyz
mad r0.yzw, r0.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -1.500000, -1.500000, -1.500000)
movc r0.xyz, cb0[1].xxxx, r0.xxxx, r0.yzwy
mul r0.xyz, r0.xyzx, l(255.000000, 255.000000, 255.000000, 0.000000)
frc r1.xyz, r0.xyzx
ftou r2.xy, v0.xyxx
and r2.xy, r2.xyxx, l(63, 63, 0, 0)
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyzw, t4.xyzw
ge r1.xyz, r1.xyzx, r2.xyzx
round_pi r2.xyz, r0.xyzx
round_ni r0.xyz, r0.xyzx
movc r0.xyz, r1.xyzx, r2.xyzx, r0.xyzx
mul o0.xyz, r0.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000)
ret 
// Approximately 52 instruction slots used
