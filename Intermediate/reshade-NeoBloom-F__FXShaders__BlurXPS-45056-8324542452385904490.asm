//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int _1312;                         // Offset:    0 Size:     4 [unused]
//   float uIntensity;                  // Offset:    4 Size:     4 [unused]
//   float uSaturation;                 // Offset:    8 Size:     4 [unused]
//   float3 ColorFilter;                // Offset:   16 Size:    12 [unused]
//   int BloomBlendMode;                // Offset:   28 Size:     4 [unused]
//   float uLensDirtAmount;             // Offset:   32 Size:     4 [unused]
//   int AdaptMode;                     // Offset:   36 Size:     4 [unused]
//   float uAdaptAmount;                // Offset:   40 Size:     4 [unused]
//   float uAdaptSensitivity;           // Offset:   44 Size:     4 [unused]
//   float uAdaptExposure;              // Offset:   48 Size:     4 [unused]
//   bool uAdaptUseLimits;              // Offset:   52 Size:     4 [unused]
//   float2 uAdaptLimits;               // Offset:   56 Size:     8 [unused]
//   float uAdaptTime;                  // Offset:   64 Size:     4 [unused]
//   float uAdaptPrecision;             // Offset:   68 Size:     4 [unused]
//   int uAdaptFormula;                 // Offset:   72 Size:     4 [unused]
//   float uMean;                       // Offset:   76 Size:     4 [unused]
//   float uVariance;                   // Offset:   80 Size:     4 [unused]
//   float uGhostingAmount;             // Offset:   84 Size:     4 [unused]
//   float3 DepthMultiplier;            // Offset:   96 Size:    12 [unused]
//   float2 DepthRange;                 // Offset:  112 Size:     8 [unused]
//   float DepthSmoothness;             // Offset:  120 Size:     4 [unused]
//   float uMaxBrightness;              // Offset:  124 Size:     4 [unused]
//   bool uNormalizeBrightness;         // Offset:  128 Size:     4 [unused]
//   bool MagicMode;                    // Offset:  132 Size:     4 [unused]
//   float uSigma;                      // Offset:  136 Size:     4
//   float uPadding;                    // Offset:  140 Size:     4 [unused]
//   float FrameTime;                   // Offset:  144 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__FXShaders__NeoBloom_AtlasA    texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[9], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 18
add r0.xyzw, v1.xyxy, l(0.001042, 0.000000, 0.002083, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t6.xyzw, s1
add r2.xyzw, v1.xyxy, l(-0.001042, 0.000000, -0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xyxx, t6.xyzw, s1
add r4.xyzw, v1.xyxy, l(-0.003125, 0.000000, -0.002083, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r4.xyxx, t6.xyzw, s1
add r6.xyzw, v1.xyxy, l(-0.005208, 0.000000, -0.004167, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r6.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r6.xyxx, t6.xyzw, s1
add r8.xyzw, v1.xyxy, l(-0.007292, 0.000000, -0.006250, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r8.xyzw, r8.xyxx, t6.xyzw, s1
add r10.xyzw, v1.xyxy, l(-0.009375, 0.000000, -0.008333, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r11.xyzw, r10.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r10.xyzw, r10.xyxx, t6.xyzw, s1
add r12.xyzw, v1.xyxy, l(-0.011458, 0.000000, -0.010417, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r13.xyzw, r12.zwzz, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r12.xyzw, r12.xyxx, t6.xyzw, s1
add r14.xyzw, v1.xyxy, l(-0.013542, -0.000000, -0.012500, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r15.xyzw, r14.xyxx, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r14.xyzw, r14.zwzz, t6.xyzw, s1
dp2 r16.x, cb0[8].zzzz, cb0[8].zzzz
div r17.xyzw, l(-169.000000, -144.000000, -121.000000, -100.000000), r16.xxxx
mul r17.xyzw, r17.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
exp r17.xyzw, r17.xyzw
mul r14.xyzw, r14.xyzw, r17.yyyy
mad r14.xyzw, r15.xyzw, r17.xxxx, r14.xyzw
mad r12.xyzw, r12.xyzw, r17.zzzz, r14.xyzw
mad r12.xyzw, r13.xyzw, r17.wwww, r12.xyzw
div r13.xyzw, l(-81.000000, -64.000000, -49.000000, -36.000000), r16.xxxx
mul r13.xyzw, r13.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
exp r13.xyzw, r13.xyzw
mad r10.xyzw, r10.xyzw, r13.xxxx, r12.xyzw
mad r10.xyzw, r11.xyzw, r13.yyyy, r10.xyzw
mad r8.xyzw, r8.xyzw, r13.zzzz, r10.xyzw
mad r8.xyzw, r9.xyzw, r13.wwww, r8.xyzw
div r9.xyzw, l(-25.000000, -16.000000, -9.000000, -4.000000), r16.xxxx
div r10.x, l(-1.000000), r16.x
mul r10.x, r10.x, l(1.442695)
exp r10.x, r10.x
mul r9.xyzw, r9.xyzw, l(1.442695, 1.442695, 1.442695, 1.442695)
exp r9.xyzw, r9.xyzw
mad r6.xyzw, r6.xyzw, r9.xxxx, r8.xyzw
mad r6.xyzw, r7.xyzw, r9.yyyy, r6.xyzw
mad r4.xyzw, r4.xyzw, r9.zzzz, r6.xyzw
mad r4.xyzw, r5.xyzw, r9.wwww, r4.xyzw
mad r2.xyzw, r2.xyzw, r10.xxxx, r4.xyzw
add r2.xyzw, r3.xyzw, r2.xyzw
mad r0.xyzw, r0.xyzw, r10.xxxx, r2.xyzw
mad r0.xyzw, r1.xyzw, r9.wwww, r0.xyzw
add r1.xyzw, v1.xyxy, l(0.003125, 0.000000, 0.004167, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t6.xyzw, s1
mad r0.xyzw, r2.xyzw, r9.zzzz, r0.xyzw
mad r0.xyzw, r1.xyzw, r9.yyyy, r0.xyzw
add r1.xyzw, v1.xyxy, l(0.005208, 0.000000, 0.006250, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t6.xyzw, s1
mad r0.xyzw, r2.xyzw, r9.xxxx, r0.xyzw
mad r0.xyzw, r1.xyzw, r13.wwww, r0.xyzw
add r1.xyzw, v1.xyxy, l(0.007292, 0.000000, 0.008333, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t6.xyzw, s1
mad r0.xyzw, r2.xyzw, r13.zzzz, r0.xyzw
mad r0.xyzw, r1.xyzw, r13.yyyy, r0.xyzw
add r1.xyzw, v1.xyxy, l(0.009375, 0.000000, 0.010417, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t6.xyzw, s1
mad r0.xyzw, r2.xyzw, r13.xxxx, r0.xyzw
mad r0.xyzw, r1.xyzw, r17.wwww, r0.xyzw
add r1.xyzw, v1.xyxy, l(0.011458, 0.000000, 0.012500, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.zwzz, t6.xyzw, s1
mad r0.xyzw, r2.xyzw, r17.zzzz, r0.xyzw
mad r0.xyzw, r1.xyzw, r17.yyyy, r0.xyzw
add r1.xy, v1.xyxx, l(0.013542, 0.000000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t6.xyzw, s1
mad r0.xyzw, r1.xyzw, r17.xxxx, r0.xyzw
add r1.x, r17.y, r17.x
add r1.x, r17.z, r1.x
add r1.x, r17.w, r1.x
add r1.x, r13.x, r1.x
add r1.x, r13.y, r1.x
add r1.x, r13.z, r1.x
add r1.x, r13.w, r1.x
add r1.x, r9.x, r1.x
add r1.x, r9.y, r1.x
add r1.x, r9.z, r1.x
add r1.x, r9.w, r1.x
mad r1.x, r10.x, l(2.000000), r1.x
add r1.x, r9.w, r1.x
add r1.x, r9.z, r1.x
add r1.x, r9.y, r1.x
add r1.x, r9.x, r1.x
add r1.x, r13.w, r1.x
add r1.x, r13.z, r1.x
add r1.x, r13.y, r1.x
add r1.x, r13.x, r1.x
add r1.x, r17.w, r1.x
add r1.x, r17.z, r1.x
add r1.x, r17.y, r1.x
add r1.x, r17.x, r1.x
add r1.x, r1.x, l(1.000000)
div o0.xyzw, r0.xyzw, r1.xxxx
ret 
// Approximately 108 instruction slots used
