//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__RemoveTint__texMinRGB        texture  float4          2d             t6      1 
// __V__RemoveTint__texMaxRGB        texture  float4          2d             t8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
ld_indexable(texture2d)(float,float,float,float) r0.xyz, l(0, 0, 0, 0), t8.xyzw
ld_indexable(texture2d)(float,float,float,float) r1.xyz, l(0, 0, 0, 0), t6.xyzw
add r0.xyz, r0.xyzx, -r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t0.xyzw, s0
add r1.xyz, -r1.xyzx, r2.xyzx
div r0.xyz, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, r2.xyzx
sqrt r0.w, r0.w
mad r1.xyz, -r0.xyzx, r0.wwww, r2.xyzx
mul r0.xyz, r0.wwww, r0.xyzx
dp3 r0.w, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r1.w, |r0.w|, |r0.w|
mul r0.w, |r0.w|, r1.w
min r0.w, r0.w, l(1.000000)
mad_sat o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 20 instruction slots used
