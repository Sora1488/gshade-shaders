//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int mode;                          // Offset:    0 Size:     4
//   float radius;                      // Offset:    4 Size:     4
//   float angle;                       // Offset:    8 Size:     4
//   float period;                      // Offset:   12 Size:     4
//   float amplitude;                   // Offset:   16 Size:     4
//   float2 coordinates;                // Offset:   20 Size:     8
//   bool use_mouse_point;              // Offset:   28 Size:     4
//   float aspect_ratio;                // Offset:   32 Size:     4
//   bool use_offset_coords;            // Offset:   36 Size:     4
//   float2 offset_coords;              // Offset:   40 Size:     8
//   float2 depth_bounds;               // Offset:   48 Size:     8
//   float min_depth;                   // Offset:   56 Size:     4
//   float tension;                     // Offset:   60 Size:     4
//   float phase;                       // Offset:   64 Size:     4
//   int animate;                       // Offset:   68 Size:     4
//   int render_type;                   // Offset:   72 Size:     4
//   float blending_amount;             // Offset:   76 Size:     4
//   float anim_rate;                   // Offset:   80 Size:     4
//   float2 mouse_coordinates;          // Offset:   84 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texColorBuffer               texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s1
mul r0.y, cb0[2].z, l(0.500000)
mad r0.z, cb0[2].x, l(0.004375), l(0.562500)
mul r2.xy, cb0[1].yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r3.xyzw, cb0[5].yzxx, l(0.000260, 0.000463, 0.000500, 0.000750)
movc r2.yz, cb0[1].wwww, r3.xxyx, r2.xxyx
add r4.yz, -r2.yyzy, v1.xxyx
div r2.x, r2.y, r0.z
div r0.y, r0.y, r0.z
div r4.x, r4.y, r0.z
add r2.yw, -r2.xxxz, r4.xxxz
dp2 r0.w, r2.ywyy, r2.ywyy
sqrt r0.w, r0.w
add r3.x, -r0.w, cb0[0].y
add r3.y, -r3.x, cb0[0].y
mad r3.y, cb0[3].w, r3.y, r3.x
max r3.x, r3.x, l(0.000000)
div r3.x, r3.x, r3.y
mul r3.x, r3.x, r3.x
ieq r4.xy, cb0[4].yyyy, l(1, 2, 0, 0)
sincos r3.z, null, r3.z
mul r3.z, r3.z, cb0[1].x
movc r3.z, r4.x, r3.z, cb0[1].x
mul r3.z, r3.z, r3.x
div r4.x, r3.x, cb0[0].w
mul r4.x, r4.x, cb0[0].z
and r3.w, r3.w, r4.y
add r3.w, r3.w, cb0[4].x
mad r3.w, r4.x, l(0.017453), r3.w
sincos r3.w, null, r3.w
mul r3.z, r3.w, r3.z
sincos r4.x, r5.x, r3.z
mov r6.x, -r4.x
mov r6.y, r5.x
dp2 r4.y, r6.yxyy, r2.ywyy
mov r6.z, r4.x
dp2 r4.z, r6.zyzz, r2.ywyy
mul r2.yw, r2.yyyw, r5.xxxx
movc r2.yw, cb0[0].xxxx, r2.yyyw, r4.yyyz
mul r4.y, r0.y, l(2.000000)
mov r4.z, cb0[2].w
add r3.zw, r2.yyyw, r4.yyyz
mad r2.xy, r2.xzxx, l(2.000000, 2.000000, 0.000000, 0.000000), r2.ywyy
movc r2.yz, cb0[2].yyyy, r3.zzwz, r2.xxyx
mul r2.x, r0.z, r2.y
sample_l_indexable(texture2d)(float,float,float,float) r0.y, r2.xzxx, t2.yxzw, s0, l(0.000000)
mad r0.z, -r0.y, l(999.000000), l(1000.000000)
div r0.y, r0.y, r0.z
ge r0.z, r0.y, cb0[3].x
ge r0.y, cb0[3].y, r0.y
and r0.y, r0.y, r0.z
if_nz r0.y
  mul r0.y, r3.x, cb0[4].w
  mul r0.y, r0.y, l(10.000000)
  min r0.y, r0.y, l(1.000000)
  movc r0.y, cb0[4].z, r0.y, cb0[4].w
  if_nz cb0[2].y
    ge r0.z, r3.y, r0.w
    if_nz r0.z
      sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xzxx, t4.xyzw, s1
      switch cb0[4].z
        case l(1)
        min r5.xyz, r1.xyzx, r3.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(2)
        mad r5.xyz, r1.xyzx, r3.xyzx, -r1.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(3)
        lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
        and r0.z, r5.y, r5.x
        and r0.z, r5.z, r0.z
        add r5.xyz, -r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        div r5.xyz, r5.xyzx, r3.xyzx
        min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        and r5.xyz, r0.zzzz, r5.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(4)
        add r5.xyz, r1.xyzx, r3.xyzx
        add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
        max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(5)
        max r5.xyz, r1.xyzx, r3.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(6)
        add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        add r6.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        mad r5.xyz, -r5.xyzx, r6.xyzx, -r1.xyzx
        add r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(7)
        lt r5.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        and r0.z, r5.y, r5.x
        and r0.z, r5.z, r0.z
        add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        div r5.xyz, r1.xyzx, r5.xyzx
        min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        movc r5.xyz, r0.zzzz, r5.xyzx, l(1.000000,1.000000,1.000000,0)
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(8)
        add r5.xyz, r1.xyzx, r3.xyzx
        min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(9)
        add r5.xyz, r1.xyzx, r3.xyzx
        min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(10)
        ge r5.xyz, r1.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
        or r0.z, r5.y, r5.x
        or r0.z, r5.z, r0.z
        mul r5.xyz, r3.xyzx, r3.xyzx
        add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        div_sat r5.xyz, r5.xyzx, r6.xyzx
        movc r5.xyz, r0.zzzz, r1.xyzx, r5.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(11)
        mul r5.xyz, r1.xyzx, r3.xyzx
        add r6.xyz, r5.xyzx, r5.xyzx
        add r7.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        add r7.xyz, r7.xyzx, r7.xyzx
        add r8.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        mad r7.xyz, -r7.xyzx, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        ge r8.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
        mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
        mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(12)
        ge r5.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
        and r0.z, r5.y, r5.x
        and r0.z, r5.z, r0.z
        mad r5.xyz, -r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
        mul r5.xyz, r1.xyzx, r5.xyzx
        add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        mad_sat r5.xyz, -r5.xyzx, r6.xyzx, r1.xyzx
        mad r6.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
        ge r7.xyz, l(0.250000, 0.250000, 0.250000, 0.000000), r1.xyzx
        and r0.w, r7.y, r7.x
        and r0.w, r7.z, r0.w
        mad r7.xyz, r1.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), l(-12.000000, -12.000000, -12.000000, 0.000000)
        mad r7.xyz, r7.xyzx, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
        mul r7.xyz, r1.xyzx, r7.xyzx
        sqrt r8.xyz, r1.xyzx
        movc r7.xyz, r0.wwww, r7.xyzx, r8.xyzx
        add r7.xyz, -r1.xyzx, r7.xyzx
        mad_sat r6.xyz, r6.xyzx, r7.xyzx, r1.xyzx
        movc r5.xyz, r0.zzzz, r5.xyzx, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(13)
        mul r5.xyz, r1.xyzx, r3.xyzx
        add r6.xyz, r5.xyzx, r5.xyzx
        add r7.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        add r7.xyz, r7.xyzx, r7.xyzx
        add r8.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        mad r7.xyz, -r7.xyzx, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        ge r8.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
        mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
        mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(14)
        mul r5.xyz, r1.xyzx, r3.xyzx
        add r6.xyz, r5.xyzx, r5.xyzx
        add r7.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
        add r7.xyz, r7.xyzx, r7.xyzx
        div r7.xyz, r3.xyzx, r7.xyzx
        ge r8.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
        mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
        mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(15)
        lt r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        or r0.z, r5.y, r5.x
        or r0.z, r5.z, r0.z
        mad r5.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
        add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
        max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        add r6.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
        mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
        min r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        movc r5.xyz, r0.zzzz, r5.xyzx, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(16)
        lt r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        or r0.z, r5.y, r5.x
        or r0.z, r5.z, r0.z
        add r5.xyz, r3.xyzx, r3.xyzx
        min r5.xyz, r1.xyzx, r5.xyzx
        add r6.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
        add r6.xyz, r6.xyzx, r6.xyzx
        max r6.xyz, r1.xyzx, r6.xyzx
        movc r5.xyz, r0.zzzz, r5.xyzx, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(17)
        mul r5.xyz, r1.xyzx, r3.xyzx
        add r6.xyz, r5.xyzx, r5.xyzx
        add r7.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
        add r7.xyz, r7.xyzx, r7.xyzx
        div r7.xyz, r3.xyzx, r7.xyzx
        ge r8.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
        mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
        mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
        lt r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        or r0.z, r5.y, r5.x
        or r0.z, r5.z, r0.z
        movc r0.z, r0.z, l(0), l(1.000000)
        add r5.xyz, -r1.xyzx, r0.zzzz
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(18)
        add r5.xyz, r1.xyzx, -r3.xyzx
        add r6.xyz, -r1.xyzx, r3.xyzx
        max r5.xyz, r5.xyzx, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(19)
        add r5.xyz, r1.xyzx, r3.xyzx
        mul r6.xyz, r1.xyzx, r3.xyzx
        mad r5.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(20)
        add r5.xyz, r1.xyzx, -r3.xyzx
        max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(21)
        add r5.xyz, r3.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
        div_sat r5.xyz, r1.xyzx, r5.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(22)
        div r5.xyz, r1.xyzx, r3.xyzx
        div r5.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r5.xyzx
        mov_sat r5.xyz, r5.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(23)
        div_sat r5.xyz, r1.xyzx, r3.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(24)
        ge r5.xyz, r3.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
        or r0.z, r5.y, r5.x
        or r0.z, r5.z, r0.z
        mul r5.xyz, r1.xyzx, r1.xyzx
        add r6.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
        div_sat r5.xyz, r5.xyzx, r6.xyzx
        movc r5.xyz, r0.zzzz, r3.xyzx, r5.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(25)
        add r5.xyz, r1.xyzx, r3.xyzx
        add_sat r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(26)
        add r5.xyz, r1.xyzx, -r3.xyzx
        add_sat r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(27)
        max r0.z, r1.z, r1.y
        max r0.z, r0.z, r1.x
        min r0.w, r1.z, r1.y
        min r0.w, r0.w, r1.x
        add r5.y, -r0.w, r0.z
        max r0.z, r3.z, r3.y
        max r0.z, r0.z, r3.x
        eq r0.w, r0.z, r3.x
        min r2.y, r3.z, r3.y
        min r2.y, r2.y, r3.x
        eq r2.w, r2.y, r3.z
        and r4.w, r0.w, r2.w
        if_nz r4.w
          lt r4.w, r3.z, r3.x
          add r6.xy, -r3.zzzz, r3.yxyy
          mul r6.x, r5.y, r6.x
          div r5.z, r6.x, r6.y
          and r6.xy, r4.wwww, r5.yzyy
          mov r6.z, l(0)
        else 
          eq r4.w, r2.y, r3.y
          and r0.w, r0.w, r4.w
          if_nz r0.w
            lt r0.w, r3.y, r3.x
            add r7.xy, -r3.yyyy, r3.zxzz
            mul r6.w, r5.y, r7.x
            div r5.w, r6.w, r7.y
            and r6.xz, r0.wwww, r5.yywy
            mov r6.y, l(0)
          else 
            eq r0.w, r0.z, r3.y
            and r2.w, r2.w, r0.w
            if_nz r2.w
              lt r2.w, r3.z, r3.y
              add r7.xy, -r3.zzzz, r3.xyxx
              mul r5.w, r5.y, r7.x
              div r5.x, r5.w, r7.y
              and r6.xy, r5.xyxx, r2.wwww
              mov r6.z, l(0)
            else 
              eq r2.y, r2.y, r3.x
              and r0.w, r0.w, r2.y
              if_nz r0.w
                lt r0.w, r3.x, r3.y
                add r7.xy, -r3.xxxx, r3.zyzz
                mul r2.w, r5.y, r7.x
                div r5.z, r2.w, r7.y
                and r6.yz, r0.wwww, r5.yyzy
                mov r6.x, l(0)
              else 
                eq r0.z, r0.z, r3.z
                and r0.w, r4.w, r0.z
                lt r7.xy, r3.yxyy, r3.zzzz
                add r8.xyzw, -r3.yyxx, r3.xzyz
                mul r7.zw, r5.yyyy, r8.xxxz
                div r5.xz, r7.zzwz, r8.yywy
                and r8.xz, r5.xxyx, r7.xxxx
                and r0.z, r2.y, r0.z
                and r5.yz, r5.zzyz, r7.yyyy
                mov r5.x, l(0)
                movc r5.xyz, r0.zzzz, r5.xyzx, r3.xyzx
                mov r8.y, l(0)
                movc r6.xyz, r0.wwww, r8.xyzx, r5.xyzx
              endif 
            endif 
          endif 
        endif 
        dp3 r0.z, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        dp3 r0.w, r6.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        add r0.z, -r0.w, r0.z
        add r5.xyz, r0.zzzz, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(28)
        max r0.z, r3.z, r3.y
        max r0.z, r0.z, r3.x
        min r0.w, r3.z, r3.y
        min r0.w, r0.w, r3.x
        add r5.y, -r0.w, r0.z
        max r0.z, r1.z, r1.y
        max r0.z, r0.z, r1.x
        eq r0.w, r0.z, r1.x
        min r2.y, r1.z, r1.y
        min r2.y, r1.x, r2.y
        eq r2.w, r1.z, r2.y
        and r4.w, r0.w, r2.w
        if_nz r4.w
          lt r4.w, r1.z, r1.x
          add r6.xy, -r1.zzzz, r1.yxyy
          mul r6.x, r5.y, r6.x
          div r5.z, r6.x, r6.y
          and r6.xy, r4.wwww, r5.yzyy
          mov r6.z, l(0)
        else 
          eq r4.w, r1.y, r2.y
          and r0.w, r0.w, r4.w
          if_nz r0.w
            lt r0.w, r1.y, r1.x
            add r7.xy, -r1.yyyy, r1.zxzz
            mul r6.w, r5.y, r7.x
            div r5.w, r6.w, r7.y
            and r6.xz, r0.wwww, r5.yywy
            mov r6.y, l(0)
          else 
            eq r0.w, r0.z, r1.y
            and r2.w, r2.w, r0.w
            if_nz r2.w
              lt r2.w, r1.z, r1.y
              add r7.xy, -r1.zzzz, r1.xyxx
              mul r5.w, r5.y, r7.x
              div r5.x, r5.w, r7.y
              and r6.xy, r5.xyxx, r2.wwww
              mov r6.z, l(0)
            else 
              eq r2.y, r1.x, r2.y
              and r0.w, r0.w, r2.y
              if_nz r0.w
                lt r0.w, r1.x, r1.y
                add r7.xy, -r1.xxxx, r1.zyzz
                mul r2.w, r5.y, r7.x
                div r5.z, r2.w, r7.y
                and r6.yz, r0.wwww, r5.yyzy
                mov r6.x, l(0)
              else 
                eq r0.z, r0.z, r1.z
                and r0.w, r4.w, r0.z
                lt r7.xy, r1.yxyy, r1.zzzz
                add r8.xyzw, -r1.yyxx, r1.xzyz
                mul r7.zw, r5.yyyy, r8.xxxz
                div r5.xz, r7.zzwz, r8.yywy
                and r8.xz, r5.xxyx, r7.xxxx
                and r0.z, r2.y, r0.z
                and r5.yz, r5.zzyz, r7.yyyy
                mov r5.x, l(0)
                movc r5.xyz, r0.zzzz, r5.xyzx, r1.xyzx
                mov r8.y, l(0)
                movc r6.xyz, r0.wwww, r8.xyzx, r5.xyzx
              endif 
            endif 
          endif 
        endif 
        dp3 r0.z, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        dp3 r0.w, r6.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        add r0.z, -r0.w, r0.z
        add r5.xyz, r0.zzzz, r6.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(29)
        dp3 r0.z, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        dp3 r0.w, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        add r0.z, -r0.w, r0.z
        add r5.xyz, r0.zzzz, r3.xyzx
        add r5.xyz, -r1.xyzx, r5.xyzx
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        case l(30)
        dp3 r0.z, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        dp3 r0.w, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
        add r5.xyz, -r0.wwww, r0.zzzz
        mad r4.xyz, r0.yyyy, r5.xyzx, r1.xyzx
        break 
        default 
        add r3.xyz, -r1.xyzx, r3.xyzx
        mad r4.xyz, r0.yyyy, r3.xyzx, r1.xyzx
        break 
      endswitch 
      mov o0.xyz, r4.xyzx
      mov o0.w, r3.w
    else 
      mov o0.xyzw, r1.xyzw
    endif 
  else 
    sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r2.xzxx, t4.xyzw, s1
    switch cb0[4].z
      case l(1)
      min r4.xyz, r1.xyzx, r2.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(2)
      mad r4.xyz, r1.xyzx, r2.xyzx, -r1.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(3)
      lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
      and r0.z, r4.y, r4.x
      and r0.z, r4.z, r0.z
      add r4.xyz, -r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      div r4.xyz, r4.xyzx, r2.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r4.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      and r4.xyz, r0.zzzz, r4.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(4)
      add r4.xyz, r1.xyzx, r2.xyzx
      add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(5)
      max r4.xyz, r1.xyzx, r2.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(6)
      add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r4.xyz, -r4.xyzx, r5.xyzx, -r1.xyzx
      add r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(7)
      lt r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      and r0.z, r4.y, r4.x
      and r0.z, r4.z, r0.z
      add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r4.xyz, r1.xyzx, r4.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r4.xyz, r0.zzzz, r4.xyzx, l(1.000000,1.000000,1.000000,0)
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(8)
      add r4.xyz, r1.xyzx, r2.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(9)
      add r4.xyz, r1.xyzx, r2.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(10)
      ge r4.xyz, r1.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
      or r0.z, r4.y, r4.x
      or r0.z, r4.z, r0.z
      mul r4.xyz, r2.xyzx, r2.xyzx
      add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div_sat r4.xyz, r4.xyzx, r5.xyzx
      movc r4.xyz, r0.zzzz, r1.xyzx, r4.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(11)
      mul r4.xyz, r1.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      add r7.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r6.xyz, -r6.xyzx, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      ge r7.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(12)
      ge r4.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
      and r0.z, r4.y, r4.x
      and r0.z, r4.z, r0.z
      mad r4.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r4.xyz, r1.xyzx, r4.xyzx
      add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad_sat r4.xyz, -r4.xyzx, r5.xyzx, r1.xyzx
      mad r5.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      ge r6.xyz, l(0.250000, 0.250000, 0.250000, 0.000000), r1.xyzx
      and r0.w, r6.y, r6.x
      and r0.w, r6.z, r0.w
      mad r6.xyz, r1.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), l(-12.000000, -12.000000, -12.000000, 0.000000)
      mad r6.xyz, r6.xyzx, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
      mul r6.xyz, r1.xyzx, r6.xyzx
      sqrt r7.xyz, r1.xyzx
      movc r6.xyz, r0.wwww, r6.xyzx, r7.xyzx
      add r6.xyz, -r1.xyzx, r6.xyzx
      mad_sat r5.xyz, r5.xyzx, r6.xyzx, r1.xyzx
      movc r4.xyz, r0.zzzz, r4.xyzx, r5.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(13)
      mul r4.xyz, r1.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      add r7.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r6.xyz, -r6.xyzx, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      ge r7.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(14)
      mul r4.xyz, r1.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      div r6.xyz, r2.xyzx, r6.xyzx
      ge r7.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(15)
      lt r4.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r0.z, r4.y, r4.x
      or r0.z, r4.z, r0.z
      mad r4.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
      add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r5.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
      min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r4.xyz, r0.zzzz, r4.xyzx, r5.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(16)
      lt r4.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r0.z, r4.y, r4.x
      or r0.z, r4.z, r0.z
      add r4.xyz, r2.xyzx, r2.xyzx
      min r4.xyz, r1.xyzx, r4.xyzx
      add r5.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      add r5.xyz, r5.xyzx, r5.xyzx
      max r5.xyz, r1.xyzx, r5.xyzx
      movc r4.xyz, r0.zzzz, r4.xyzx, r5.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(17)
      mul r4.xyz, r1.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      div r6.xyz, r2.xyzx, r6.xyzx
      ge r7.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      lt r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r0.z, r4.y, r4.x
      or r0.z, r4.z, r0.z
      movc r0.z, r0.z, l(0), l(1.000000)
      add r4.xyz, -r1.xyzx, r0.zzzz
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(18)
      add r4.xyz, r1.xyzx, -r2.xyzx
      add r5.xyz, -r1.xyzx, r2.xyzx
      max r4.xyz, r4.xyzx, r5.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(19)
      add r4.xyz, r1.xyzx, r2.xyzx
      mul r5.xyz, r1.xyzx, r2.xyzx
      mad r4.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(20)
      add r4.xyz, r1.xyzx, -r2.xyzx
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(21)
      add r4.xyz, r2.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
      div_sat r4.xyz, r1.xyzx, r4.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(22)
      div r4.xyz, r1.xyzx, r2.xyzx
      div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
      mov_sat r4.xyz, r4.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(23)
      div_sat r4.xyz, r1.xyzx, r2.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(24)
      ge r4.xyz, r2.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
      or r0.z, r4.y, r4.x
      or r0.z, r4.z, r0.z
      mul r4.xyz, r1.xyzx, r1.xyzx
      add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div_sat r4.xyz, r4.xyzx, r5.xyzx
      movc r4.xyz, r0.zzzz, r2.xyzx, r4.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(25)
      add r4.xyz, r1.xyzx, r2.xyzx
      add_sat r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(26)
      add r4.xyz, r1.xyzx, -r2.xyzx
      add_sat r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(27)
      max r0.z, r1.z, r1.y
      max r0.z, r0.z, r1.x
      min r0.w, r1.z, r1.y
      min r0.w, r0.w, r1.x
      add r4.y, -r0.w, r0.z
      max r0.z, r2.z, r2.y
      max r0.z, r0.z, r2.x
      eq r0.w, r0.z, r2.x
      min r3.w, r2.z, r2.y
      min r3.w, r2.x, r3.w
      eq r5.x, r2.z, r3.w
      and r5.y, r0.w, r5.x
      if_nz r5.y
        lt r5.y, r2.z, r2.x
        add r5.zw, -r2.zzzz, r2.yyyx
        mul r5.z, r4.y, r5.z
        div r4.z, r5.z, r5.w
        and r6.xy, r4.yzyy, r5.yyyy
        mov r6.z, l(0)
      else 
        eq r5.y, r2.y, r3.w
        and r0.w, r0.w, r5.y
        if_nz r0.w
          lt r0.w, r2.y, r2.x
          add r5.zw, -r2.yyyy, r2.zzzx
          mul r5.z, r4.y, r5.z
          div r4.w, r5.z, r5.w
          and r6.xz, r0.wwww, r4.yywy
          mov r6.y, l(0)
        else 
          eq r0.w, r0.z, r2.y
          and r4.w, r5.x, r0.w
          if_nz r4.w
            lt r4.w, r2.z, r2.y
            add r5.xz, -r2.zzzz, r2.xxyx
            mul r5.x, r4.y, r5.x
            div r4.x, r5.x, r5.z
            and r6.xy, r4.xyxx, r4.wwww
            mov r6.z, l(0)
          else 
            eq r3.w, r2.x, r3.w
            and r0.w, r0.w, r3.w
            if_nz r0.w
              lt r0.w, r2.x, r2.y
              add r5.xz, -r2.xxxx, r2.zzyz
              mul r4.w, r4.y, r5.x
              div r4.z, r4.w, r5.z
              and r6.yz, r0.wwww, r4.yyzy
              mov r6.x, l(0)
            else 
              eq r0.z, r0.z, r2.z
              and r0.w, r5.y, r0.z
              lt r5.xy, r2.yxyy, r2.zzzz
              add r7.xyzw, -r2.yyxx, r2.xzyz
              mul r5.zw, r4.yyyy, r7.xxxz
              div r4.xz, r5.zzwz, r7.yywy
              and r7.xz, r4.xxyx, r5.xxxx
              and r0.z, r3.w, r0.z
              and r4.yz, r4.zzyz, r5.yyyy
              mov r4.x, l(0)
              movc r4.xyz, r0.zzzz, r4.xyzx, r2.xyzx
              mov r7.y, l(0)
              movc r6.xyz, r0.wwww, r7.xyzx, r4.xyzx
            endif 
          endif 
        endif 
      endif 
      dp3 r0.z, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r0.w, r6.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r0.z, -r0.w, r0.z
      add r4.xyz, r0.zzzz, r6.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(28)
      max r0.z, r2.z, r2.y
      max r0.z, r0.z, r2.x
      min r0.w, r2.z, r2.y
      min r0.w, r0.w, r2.x
      add r4.y, -r0.w, r0.z
      max r0.z, r1.z, r1.y
      max r0.z, r0.z, r1.x
      eq r0.w, r0.z, r1.x
      min r3.w, r1.z, r1.y
      min r3.w, r1.x, r3.w
      eq r5.x, r1.z, r3.w
      and r5.y, r0.w, r5.x
      if_nz r5.y
        lt r5.y, r1.z, r1.x
        add r5.zw, -r1.zzzz, r1.yyyx
        mul r5.z, r4.y, r5.z
        div r4.z, r5.z, r5.w
        and r6.xy, r4.yzyy, r5.yyyy
        mov r6.z, l(0)
      else 
        eq r5.y, r1.y, r3.w
        and r0.w, r0.w, r5.y
        if_nz r0.w
          lt r0.w, r1.y, r1.x
          add r5.zw, -r1.yyyy, r1.zzzx
          mul r5.z, r4.y, r5.z
          div r4.w, r5.z, r5.w
          and r6.xz, r0.wwww, r4.yywy
          mov r6.y, l(0)
        else 
          eq r0.w, r0.z, r1.y
          and r4.w, r5.x, r0.w
          if_nz r4.w
            lt r4.w, r1.z, r1.y
            add r5.xz, -r1.zzzz, r1.xxyx
            mul r5.x, r4.y, r5.x
            div r4.x, r5.x, r5.z
            and r6.xy, r4.xyxx, r4.wwww
            mov r6.z, l(0)
          else 
            eq r3.w, r1.x, r3.w
            and r0.w, r0.w, r3.w
            if_nz r0.w
              lt r0.w, r1.x, r1.y
              add r5.xz, -r1.xxxx, r1.zzyz
              mul r4.w, r4.y, r5.x
              div r4.z, r4.w, r5.z
              and r6.yz, r0.wwww, r4.yyzy
              mov r6.x, l(0)
            else 
              eq r0.z, r0.z, r1.z
              and r0.w, r5.y, r0.z
              lt r5.xy, r1.yxyy, r1.zzzz
              add r7.xyzw, -r1.yyxx, r1.xzyz
              mul r5.zw, r4.yyyy, r7.xxxz
              div r4.xz, r5.zzwz, r7.yywy
              and r7.xz, r4.xxyx, r5.xxxx
              and r0.z, r3.w, r0.z
              and r4.yz, r4.zzyz, r5.yyyy
              mov r4.x, l(0)
              movc r4.xyz, r0.zzzz, r4.xyzx, r1.xyzx
              mov r7.y, l(0)
              movc r6.xyz, r0.wwww, r7.xyzx, r4.xyzx
            endif 
          endif 
        endif 
      endif 
      dp3 r0.z, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r0.w, r6.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r0.z, -r0.w, r0.z
      add r4.xyz, r0.zzzz, r6.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(29)
      dp3 r0.z, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r0.w, r2.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r0.z, -r0.w, r0.z
      add r4.xyz, r0.zzzz, r2.xyzx
      add r4.xyz, -r1.xyzx, r4.xyzx
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      case l(30)
      dp3 r0.z, r2.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r0.w, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r4.xyz, -r0.wwww, r0.zzzz
      mad r3.xyz, r0.yyyy, r4.xyzx, r1.xyzx
      break 
      default 
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r3.xyz, r0.yyyy, r2.xyzx, r1.xyzx
      break 
    endswitch 
    mov o0.xyz, r3.xyzx
    mov o0.w, r2.w
  endif 
else 
  mov o0.xyzw, r1.xyzw
endif 
lt r0.x, r0.x, cb0[3].z
if_nz r0.x
  mov o0.xyzw, r1.xyzw
endif 
ret 
// Approximately 907 instruction slots used
