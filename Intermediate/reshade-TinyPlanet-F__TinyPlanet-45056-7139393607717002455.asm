//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__texColorBuffer               texture  float4          2d             t4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, l(10.000000, 5.625000, 0.000000, 0.000000)
dp2 r0.x, r0.xyxx, r0.xyxx
add r0.xy, r0.xxxx, l(-1.000000, 1.000000, 0.000000, 0.000000)
mad r0.zw, v1.xxxy, l(0.000000, 0.000000, 20.000000, 11.250000), l(0.000000, 0.000000, -10.000000, -5.625000)
div r0.xyz, r0.zwxz, r0.yyyy
dp2 r1.y, r0.xyxx, l(0.008727, 0.999962, 0.000000, 0.000000)
dp2 r1.x, r0.xyxx, l(0.999962, -0.008727, 0.000000, 0.000000)
max r0.x, |r1.x|, |r1.y|
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
min r0.y, |r1.x|, |r1.y|
mul r0.x, r0.x, r0.y
mul r0.y, r0.x, r0.x
mad r0.w, r0.y, l(0.020835), l(-0.085133)
mad r0.w, r0.y, r0.w, l(0.180141)
mad r0.w, r0.y, r0.w, l(-0.330299)
mad r0.y, r0.y, r0.w, l(0.999866)
mul r0.w, r0.y, r0.x
mad r0.w, r0.w, l(-2.000000), l(1.570796)
lt r1.w, |r1.x|, |r1.y|
and r0.w, r0.w, r1.w
mad r0.x, r0.x, r0.y, r0.w
lt r0.y, r1.x, -r1.x
and r0.y, r0.y, l(0xc0490fdb)
add r0.x, r0.y, r0.x
min r0.y, r1.x, r1.y
lt r0.y, r0.y, -r0.y
max r0.w, r1.x, r1.y
ge r0.w, r0.w, -r0.w
and r0.y, r0.w, r0.y
movc r0.x, r0.y, -r0.x, r0.x
mov r1.z, r0.z
dp3 r0.z, r1.xyzx, r1.xyzx
sqrt r0.z, r0.z
div r0.z, r1.z, r0.z
mad r0.w, |r0.z|, l(-0.018729), l(0.074261)
mad r0.w, r0.w, |r0.z|, l(-0.212114)
mad r0.w, r0.w, |r0.z|, l(1.570729)
add r1.x, -|r0.z|, l(1.000000)
lt r0.z, r0.z, -r0.z
sqrt r1.x, r1.x
mul r1.y, r0.w, r1.x
mad r1.y, r1.y, l(-2.000000), l(3.141593)
and r0.z, r0.z, r1.y
mad r0.y, r0.w, r1.x, r0.z
mul r0.xy, r0.xyxx, l(0.159155, 0.318310, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) o0.xyzw, r0.xyxx, t4.xyzw, s1
ret 
// Approximately 48 instruction slots used
