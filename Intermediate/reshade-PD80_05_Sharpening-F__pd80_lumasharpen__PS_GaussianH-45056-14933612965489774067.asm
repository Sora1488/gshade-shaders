//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mul r0.xyz, r0.xyzx, l(0.886538, 0.886538, 0.886538, 0.000000)
mov r1.y, l(0)
mov r2.z, l(0.007167)
mov r3.xyz, r0.xyzx
mov r0.w, l(0.886538)
mov r2.xy, l(0.075053,0.000607,0,0)
mov r1.zw, l(0,0,1.000000,0)
loop 
  itof r2.w, r1.w
  ge r2.w, r2.w, l(4.000000)
  breakc_nz r2.w
  mul r1.x, r1.z, l(0.000521)
  add r4.xy, r1.xyxx, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0, l(0.000000)
  mad r4.xyz, r4.xyzx, r2.xxxx, r3.xyzx
  add r5.xy, -r1.xyxx, v1.xyxx
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyxx, t0.xyzw, s0, l(0.000000)
  mad r3.xyz, r5.xyzx, r2.xxxx, r4.xyzx
  mad r0.w, r2.x, l(2.000000), r0.w
  add r1.z, r1.z, l(1.000000)
  mul r2.xy, r2.yzyy, r2.xyxx
  iadd r1.w, r1.w, l(1)
endloop 
div o0.xyz, r3.xyzx, r0.wwww
mov o0.w, l(1.000000)
ret 
// Approximately 27 instruction slots used
