//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int _895;                          // Offset:    0 Size:     4 [unused]
//   int _896;                          // Offset:    4 Size:     4 [unused]
//   int _897;                          // Offset:    8 Size:     4 [unused]
//   float InputExposure;               // Offset:   12 Size:     4
//   float Exposure;                    // Offset:   16 Size:     4 [unused]
//   int InvTonemap;                    // Offset:   20 Size:     4
//   int Tonemap;                       // Offset:   24 Size:     4 [unused]
//   float BloomAmount;                 // Offset:   28 Size:     4 [unused]
//   float BloomBrightness;             // Offset:   32 Size:     4
//   float BloomSaturation;             // Offset:   36 Size:     4
//   float BlurSize;                    // Offset:   40 Size:     4 [unused]
//   float BlendingAmount;              // Offset:   44 Size:     4 [unused]
//   float BlendingBase;                // Offset:   48 Size:     4 [unused]
//   bool ShowBloom;                    // Offset:   52 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __srgbV__FXShaders__ColorTex      texture  float4          2d             t1      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t1.xyzw, s0
lt r1.x, l(1.000000), cb0[2].y
mul r1.y, |cb0[2].y|, |cb0[2].y|
movc r1.x, r1.x, r1.y, cb0[2].y
dp3 r1.y, r0.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r0.xyz, r0.xyzx, -r1.yyyy
mad_sat r0.xyz, r0.xyzx, r1.xxxx, r1.yyyy
switch cb0[1].y
  case l(1)
  max r1.w, r0.z, r0.y
  max r1.w, r0.x, r1.w
  add r1.w, -r1.w, l(1.000000)
  max r1.w, r1.w, l(0.100000)
  rcp r1.w, r1.w
  mul r1.xyz, r0.xyzx, r1.wwww
  break 
  case l(2)
  mul r2.xyz, r0.xyzx, l(-0.155000, -0.155000, -0.155000, 0.000000)
  max r3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
  add r3.xyz, r3.xyzx, l(-1.019000, -1.019000, -1.019000, 0.000000)
  div r1.xyz, r2.xyzx, r3.xyzx
  break 
  case l(3)
  mad r2.xyz, r0.xyzx, l(0.590000, 0.590000, 0.590000, 0.000000), l(-0.030000, -0.030000, -0.030000, 0.000000)
  mad r3.xyz, r0.xyzx, l(1.405600, 1.405600, 1.405600, 0.000000), l(0.000900, 0.000900, 0.000900, 0.000000)
  mad r3.xyz, -r0.xyzx, l(0.035400, 0.035400, 0.035400, 0.000000), r3.xyzx
  mul r4.xyz, r0.xyzx, r0.xyzx
  mad r3.xyz, -r4.xyzx, l(1.360800, 1.360800, 1.360800, 0.000000), r3.xyzx
  mad r3.xyz, r4.xyzx, l(0.348100, 0.348100, 0.348100, 0.000000), r3.xyzx
  sqrt r3.xyz, r3.xyzx
  add r2.xyz, r2.xyzx, r3.xyzx
  mad r3.xyz, -r0.xyzx, l(2.430000, 2.430000, 2.430000, 0.000000), l(2.510000, 2.510000, 2.510000, 0.000000)
  add r3.xyz, r3.xyzx, r3.xyzx
  div r1.xyz, r2.xyzx, r3.xyzx
  break 
  case l(4)
  mad r2.xyz, -r0.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), l(0.005000, 0.005000, 0.005000, 0.000000)
  mad r3.xyz, r0.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), l(-0.005000, -0.005000, -0.005000, 0.000000)
  mul r4.xyz, r0.xyzx, l(0.072000, 0.072000, 0.072000, 0.000000)
  mad r5.xyz, r0.xyzx, l(0.045000, 0.045000, 0.045000, 0.000000), l(-0.042000, -0.042000, -0.042000, 0.000000)
  mul r4.xyz, r4.xyzx, r5.xyzx
  mad r3.xyz, |r3.xyzx|, |r3.xyzx|, -r4.xyzx
  sqrt r3.xyz, r3.xyzx
  add r2.xyz, r2.xyzx, -r3.xyzx
  mad r3.xyz, r0.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), l(-0.280000, -0.280000, -0.280000, 0.000000)
  mul r3.xyz, r3.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000)
  div r1.xyz, r2.xyzx, r3.xyzx
  mov r1.xyz, |r1.xyzx|
  break 
  case l(5)
  mad r2.xyz, -r0.xyzx, l(0.432951, 0.432951, 0.432951, 0.000000), l(0.024579, 0.024579, 0.024579, 0.000000)
  mad r3.xyz, r0.xyzx, l(0.432951, 0.432951, 0.432951, 0.000000), l(-0.024579, -0.024579, -0.024579, 0.000000)
  mad r4.xyz, r0.xyzx, l(0.983729, 0.983729, 0.983729, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r5.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
  mad r6.xyz, r0.xyzx, l(0.238081, 0.238081, 0.238081, 0.000000), l(0.000091, 0.000091, 0.000091, 0.000000)
  mul r5.xyz, r5.xyzx, r6.xyzx
  mad r3.xyz, |r3.xyzx|, |r3.xyzx|, -r5.xyzx
  sqrt r3.xyz, r3.xyzx
  add r2.xyz, r2.xyzx, -r3.xyzx
  add r3.xyz, r4.xyzx, r4.xyzx
  div r1.xyz, r2.xyzx, r3.xyzx
  mov r1.xyz, |r1.xyzx|
  break 
  default 
  add r2.xyz, r0.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  min r2.xyz, r2.xyzx, l(-0.100000, -0.100000, -0.100000, 0.000000)
  div r1.xyz, r0.xyzx, r2.xyzx
  mov r1.xyz, -r1.xyzx
  break 
endswitch 
mul r0.x, cb0[0].w, l(1.442695)
exp r0.x, r0.x
div r0.xyz, r1.xyzx, r0.xxxx
mul r1.x, cb0[2].x, l(1.442695)
exp r1.x, r1.x
mul o0.xyz, r0.xyzx, r1.xxxx
mov o0.w, r0.w
ret 
// Approximately 78 instruction slots used
