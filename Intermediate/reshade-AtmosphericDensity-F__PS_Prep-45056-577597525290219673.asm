//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Timer;                       // Offset:    0 Size:     4 [unused]
//   bool HasDepth;                     // Offset:    4 Size:     4 [unused]
//   int DISTANCE;                      // Offset:    8 Size:     4
//   int HIGHLIGHT_DIST;                // Offset:   12 Size:     4
//   float3 FOG_TINT;                   // Offset:   16 Size:    12
//   int AUTO_COLOR;                    // Offset:   28 Size:     4
//   int WIDTH;                         // Offset:   32 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__TexColor                     texture  float4          2d             t4      1 
// __V__TexBlur2                     texture  float4          2d            t12      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 5
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
add r0.y, -r0.x, l(1.000000)
log r0.x, |r0.x|
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), r0.y
and r0.y, r0.y, l(0x3f800000)
itof r1.xyzw, cb0[0].zzzw
mad r1.xyz, r1.xyzx, l(-0.097500, 0.020000, -0.002500, 0.000000), l(10.000000, 2.000000, 0.500000, 0.000000)
mul r0.z, r1.w, l(0.010000)
mad r0.z, r0.z, r1.z, l(-0.500000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.x, r0.x, r1.x
exp r0.x, r0.x
mul r0.y, r0.y, r0.x
sample_indexable(texture2d)(float,float,float,float) r1.xzw, v1.xyxx, t4.xwyz, s1
log r2.xyz, |r1.xzwx|
mul r2.xyz, r1.yyyy, r2.xyzx
exp r2.xyz, r2.xyzx
add r2.xyz, -r1.xzwx, r2.xyzx
mad r1.xyz, r0.yyyy, r2.xyzx, r1.xzwx
dp3 r0.y, r1.xyzx, l(0.212395, 0.701049, 0.086556, 0.000000)
add r2.xyz, -r0.yyyy, r1.xyzx
movc r0.w, cb0[1].w, l(1.000000), l(0.750000)
mad r2.xyz, r0.wwww, r2.xyzx, r0.yyyy
add r2.xyz, -r1.xyzx, r2.xyzx
mad r1.xyz, r0.xxxx, r2.xyzx, r1.xyzx
mov_sat r2.xyz, r1.xyzx
mad r3.xyz, r2.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r2.xyz, r2.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
add r0.y, r0.x, l(-1.000000)
mul_sat r0.y, r0.z, r0.y
mad r0.z, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r0.z
mad r0.yzw, -r2.xxyz, r0.yyyy, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r0.xyz, r0.yzwy, r0.xxxx
itof r0.w, cb0[2].x
mad r0.w, r0.w, l(-0.020000), l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t12.yzwx, s1
mul r2.x, r1.w, l(1.570796)
sincos r2.x, null, r2.x
mad r2.x, r2.x, r2.x, -r1.w
mad r0.w, r0.w, r2.x, r1.w
ilt r2.xy, l(0, 1, 0, 0), cb0[1].wwww
movc r0.w, r2.y, r0.w, r1.w
dp3 r1.w, cb0[1].xyzx, l(0.333300, 0.333300, 0.333300, 0.000000)
add r2.yzw, -r1.wwww, cb0[1].xxyz
add r2.yzw, r0.wwww, r2.yyzw
movc r2.xyz, r2.xxxx, r2.yzwy, cb0[1].xyzx
add r3.xyz, r2.xyzx, l(0.125000, 0.125000, 0.125000, 0.000000)
add r4.xyz, r2.xyzx, -r3.xyzx
mad r2.xyz, r2.xyzx, r4.xyzx, r3.xyzx
add r2.xyz, -r1.xyzx, r2.xyzx
mad o0.xyz, r0.xyzx, r2.xyzx, r1.xyzx
ret 
// Approximately 57 instruction slots used
