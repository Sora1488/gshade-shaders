//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8
//   float2 pingpong;                   // Offset:    8 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
mul r1.xy, v1.xyxx, l(3.750000, 2.109375, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t6.xyzw, s1
add r0.w, cb0[0].x, l(2.000000)
mad r1.xyzw, r0.wwww, l(0.618034, 0.618034, 0.618034, 0.618034), r1.xyzw
frc r1.xyzw, r1.xyzw
mad r1.xyzw, r1.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(-1.000000, -1.000000, -1.000000, -1.000000)
mad_sat r0.xyz, r1.wwww, l(0.001961, 0.001961, 0.001961, 0.000000), r0.xyzx
mul r2.xyz, r1.xyzx, l(0.001961, 0.001961, 0.001961, 0.000000)
max r2.xyz, r2.zxyz, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.xyz, r0.xyzx, -r2.yzxy
max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
mad r3.xyz, r1.yzxy, l(0.001961, 0.001961, 0.001961, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, r1.wxzw, l(0.001961, 0.001961, 0.001961, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
min r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r1.xyz, -r2.xyzx, r1.xyzx
min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r3.xyz, -r2.yzxy, r3.xyzx
div r0.xyz, r0.xyzx, r3.xyzx
mad o0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 22 instruction slots used
