//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   uint DeliriumIntensity;            // Offset:    0 Size:     4 [unused]
//   float timer;                       // Offset:    4 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
add r0.x, cb0[0].y, l(500.000000)
mul r0.y, v1.x, l(12.566371)
mad r0.x, r0.x, l(0.001333), r0.y
mad r0.y, cb0[0].y, l(0.002000), r0.y
sincos r0.xy, null, r0.xyxx
add r0.z, v1.y, l(-0.500000)
mad r0.z, -r0.z, r0.z, l(0.250000)
mul r0.xy, r0.zzzz, r0.xyxx
mad_sat r1.y, r0.y, l(0.166667), v1.y
mad_sat r1.w, r0.x, l(0.250000), v1.y
mov r1.xz, v1.xxxx
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r1.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r1.xyxx, t0.xyzw, s0
add r2.x, r0.y, r0.x
add r2.x, r0.z, r2.x
mul r0.xyzw, r0.xyzw, l(0.150000, 0.150000, 0.150000, 0.150000)
mad r0.xyzw, r1.xyzw, l(0.850000, 0.850000, 0.850000, 0.850000), r0.xyzw
add r2.y, r1.y, r1.x
add r2.y, r1.z, r2.y
lt r2.x, r2.x, r2.y
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
mul r1.xy, cb0[0].yyyy, l(0.001802, 0.000450, 0.000000, 0.000000)
sincos r1.xy, null, r1.xyxx
add r1.x, r1.y, r1.x
add_sat r1.x, r1.x, l(-0.650000)
add r1.x, -r1.x, l(1.000000)
mul o0.xyzw, r0.xyzw, r1.xxxx
ret 
// Approximately 28 instruction slots used
