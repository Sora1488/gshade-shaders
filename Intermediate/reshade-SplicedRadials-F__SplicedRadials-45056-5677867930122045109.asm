//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float radius;                      // Offset:    0 Size:     4
//   float inner_radius;                // Offset:    4 Size:     4
//   int number_splices;                // Offset:    8 Size:     4
//   float angle;                       // Offset:   12 Size:     4
//   float tension;                     // Offset:   16 Size:     4
//   float2 coordinates;                // Offset:   20 Size:     8
//   bool use_mouse_point;              // Offset:   28 Size:     4
//   float aspect_ratio;                // Offset:   32 Size:     4
//   bool use_offset_coords;            // Offset:   36 Size:     4
//   float2 offset_coords;              // Offset:   40 Size:     8
//   float2 depth_bounds;               // Offset:   48 Size:     8
//   float min_depth;                   // Offset:   56 Size:     4
//   int animate;                       // Offset:   60 Size:     4
//   int render_type;                   // Offset:   64 Size:     4
//   float blending_amount;             // Offset:   68 Size:     4
//   float anim_rate;                   // Offset:   72 Size:     4
//   float2 mouse_coordinates;          // Offset:   80 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texColorBuffer               texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
mul r0.x, cb0[2].z, l(0.500000)
mad r0.y, cb0[2].x, l(0.004375), l(0.562500)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s1
sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
mul r2.xy, cb0[1].yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r2.zw, cb0[5].xxxy, l(0.000000, 0.000000, 0.000260, 0.000463)
movc r2.yz, cb0[1].wwww, r2.zzwz, r2.xxyx
add r3.yz, -r2.yyzy, v1.xxyx
div r2.x, r2.y, r0.y
div r0.xz, r0.xxzx, r0.yywy
div r3.x, r3.y, r0.y
add r2.yw, -r2.xxxz, r3.xxxz
dp2 r0.w, r2.ywyy, r2.ywyy
sqrt r0.w, r0.w
add r3.x, -r0.w, cb0[0].x
add r3.y, -r3.x, cb0[0].x
mad r3.y, cb0[1].x, r3.y, r3.x
add r3.y, r3.y, -cb0[0].y
iadd r3.z, cb0[0].z, l(1)
itof r3.z, r3.z
div r3.y, r3.y, r3.z
frc r3.y, r3.y
max r3.w, r3.x, l(0.000000)
div r3.y, r3.w, r3.y
frc r3.w, r3.y
add r3.y, -r3.w, r3.y
div r3.z, cb0[0].w, r3.z
mul r3.y, r3.y, r3.z
add r3.z, -cb0[0].y, cb0[0].x
ge r3.x, r3.x, r3.z
movc r3.x, r3.x, cb0[0].w, r3.y
ieq r3.y, cb0[3].w, l(1)
mul r3.z, cb0[4].z, l(0.000500)
sincos r3.z, null, r3.z
movc r3.y, r3.y, r3.z, l(1.000000)
mul r3.x, r3.y, r3.x
mul r3.x, r3.x, l(0.017453)
sincos r4.x, r5.x, r3.x
mov r6.x, -r4.x
mov r6.y, r5.x
dp2 r3.y, r6.yxyy, r2.ywyy
mov r6.z, r4.x
dp2 r3.z, r6.zyzz, r2.ywyy
mul r4.y, r0.x, l(2.000000)
mov r4.z, cb0[2].w
add r2.yw, r3.yyyz, r4.yyyz
mad r2.xz, r2.xxzx, l(2.000000, 0.000000, 2.000000, 0.000000), r3.yyzy
movc r2.yz, cb0[2].yyyy, r2.yywy, r2.xxzx
mul r2.x, r0.y, r2.y
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r2.xzxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
ge r0.y, r0.x, cb0[3].x
ge r0.x, cb0[3].y, r0.x
and r0.x, r0.x, r0.y
if_nz r0.x
  if_nz cb0[2].y
    ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r3.x
    if_nz r0.x
      sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xzxx, t4.xyzw, s1
      mov o0.w, r3.w
    else 
      mov r3.xyz, r1.xyzx
      mov o0.w, r1.w
    endif 
  else 
    sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.xzxx, t4.xyzw, s1
    mov o0.w, r3.w
  endif 
  ge r0.x, cb0[0].x, r0.w
  if_nz r0.x
    switch cb0[4].x
      case l(1)
      min r2.xyz, r1.xyzx, r3.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(2)
      mad r2.xyz, r1.xyzx, r3.xyzx, -r1.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(3)
      lt r2.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
      and r2.x, r2.y, r2.x
      and r2.x, r2.z, r2.x
      add r2.yzw, -r1.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
      div r2.yzw, r2.yyzw, r3.xxyz
      min r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      add r2.yzw, -r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      and r2.xyz, r2.yzwy, r2.xxxx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(4)
      add r2.xyz, r1.xyzx, r3.xyzx
      add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(5)
      max r2.xyz, r1.xyzx, r3.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(6)
      add r2.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r2.xyz, -r2.xyzx, r4.xyzx, -r1.xyzx
      add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(7)
      lt r2.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      and r2.x, r2.y, r2.x
      and r2.x, r2.z, r2.x
      add r2.yzw, -r3.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
      div r2.yzw, r1.xxyz, r2.yyzw
      min r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
      movc r2.xyz, r2.xxxx, r2.yzwy, l(1.000000,1.000000,1.000000,0)
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(8)
      add r2.xyz, r1.xyzx, r3.xyzx
      min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(9)
      add r2.xyz, r1.xyzx, r3.xyzx
      min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(10)
      ge r2.xyz, r1.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
      or r2.x, r2.y, r2.x
      or r2.x, r2.z, r2.x
      mul r2.yzw, r3.xxyz, r3.xxyz
      add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div_sat r2.yzw, r2.yyzw, r4.xxyz
      movc r2.xyz, r2.xxxx, r1.xyzx, r2.yzwy
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(11)
      mul r2.xyz, r1.xyzx, r3.xyzx
      add r4.xyz, r2.xyzx, r2.xyzx
      add r5.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r5.xyz, r5.xyzx, r5.xyzx
      add r6.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r5.xyz, -r5.xyzx, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      ge r6.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r6.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
      mad r2.xyz, r6.xyzx, r2.xyzx, r4.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(12)
      ge r2.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
      and r2.x, r2.y, r2.x
      and r2.x, r2.z, r2.x
      mad r2.yzw, -r3.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, 1.000000, 1.000000, 1.000000)
      mul r2.yzw, r1.xxyz, r2.yyzw
      add r4.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad_sat r2.yzw, -r2.yyzw, r4.xxyz, r1.xxyz
      mad r4.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      ge r5.xyz, l(0.250000, 0.250000, 0.250000, 0.000000), r1.xyzx
      and r3.w, r5.y, r5.x
      and r3.w, r5.z, r3.w
      mad r5.xyz, r1.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), l(-12.000000, -12.000000, -12.000000, 0.000000)
      mad r5.xyz, r5.xyzx, r1.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
      mul r5.xyz, r1.xyzx, r5.xyzx
      sqrt r6.xyz, r1.xyzx
      movc r5.xyz, r3.wwww, r5.xyzx, r6.xyzx
      add r5.xyz, -r1.xyzx, r5.xyzx
      mad_sat r4.xyz, r4.xyzx, r5.xyzx, r1.xyzx
      movc r2.xyz, r2.xxxx, r2.yzwy, r4.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(13)
      mul r2.xyz, r1.xyzx, r3.xyzx
      add r4.xyz, r2.xyzx, r2.xyzx
      add r5.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r5.xyz, r5.xyzx, r5.xyzx
      add r6.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r5.xyz, -r5.xyzx, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      ge r6.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r6.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
      mad r2.xyz, r6.xyzx, r2.xyzx, r4.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(14)
      mul r2.xyz, r1.xyzx, r3.xyzx
      add r4.xyz, r2.xyzx, r2.xyzx
      add r5.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
      add r5.xyz, r5.xyzx, r5.xyzx
      div r5.xyz, r3.xyzx, r5.xyzx
      ge r6.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r6.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
      mad r2.xyz, r6.xyzx, r2.xyzx, r4.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(15)
      lt r2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r2.x, r2.y, r2.x
      or r2.x, r2.z, r2.x
      mad r2.yzw, r3.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), r1.xxyz
      add r2.yzw, r2.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
      max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r4.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      mad r4.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r1.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r2.xyz, r2.xxxx, r2.yzwy, r4.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(16)
      lt r2.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r2.x, r2.y, r2.x
      or r2.x, r2.z, r2.x
      add r2.yzw, r3.xxyz, r3.xxyz
      min r2.yzw, r1.xxyz, r2.yyzw
      add r4.xyz, r3.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      add r4.xyz, r4.xyzx, r4.xyzx
      max r4.xyz, r1.xyzx, r4.xyzx
      movc r2.xyz, r2.xxxx, r2.yzwy, r4.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(17)
      mul r2.xyz, r1.xyzx, r3.xyzx
      add r4.xyz, r2.xyzx, r2.xyzx
      add r5.xyz, -r1.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
      add r5.xyz, r5.xyzx, r5.xyzx
      div r5.xyz, r3.xyzx, r5.xyzx
      ge r6.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r6.xyz, r6.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
      mad r2.xyz, r6.xyzx, r2.xyzx, r4.xyzx
      lt r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r2.x, r2.y, r2.x
      or r2.x, r2.z, r2.x
      movc r2.x, r2.x, l(0), l(1.000000)
      add r2.xyz, -r1.xyzx, r2.xxxx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(18)
      add r2.xyz, r1.xyzx, -r3.xyzx
      add r4.xyz, -r1.xyzx, r3.xyzx
      max r2.xyz, r2.xyzx, r4.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(19)
      add r2.xyz, r1.xyzx, r3.xyzx
      mul r4.xyz, r1.xyzx, r3.xyzx
      mad r2.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r2.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(20)
      add r2.xyz, r1.xyzx, -r3.xyzx
      max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(21)
      add r2.xyz, r3.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
      div_sat r2.xyz, r1.xyzx, r2.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(22)
      div r2.xyz, r1.xyzx, r3.xyzx
      div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
      mov_sat r2.xyz, r2.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(23)
      div_sat r2.xyz, r1.xyzx, r3.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(24)
      ge r2.xyz, r3.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
      or r2.x, r2.y, r2.x
      or r2.x, r2.z, r2.x
      mul r2.yzw, r1.xxyz, r1.xxyz
      add r4.xyz, -r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div_sat r2.yzw, r2.yyzw, r4.xxyz
      movc r2.xyz, r2.xxxx, r3.xyzx, r2.yzwy
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(25)
      add r2.xyz, r1.xyzx, r3.xyzx
      add_sat r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(26)
      add r2.xyz, r1.xyzx, -r3.xyzx
      add_sat r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(27)
      max r2.x, r1.z, r1.y
      max r2.x, r1.x, r2.x
      min r2.y, r1.z, r1.y
      min r2.y, r1.x, r2.y
      add r2.y, -r2.y, r2.x
      max r3.w, r3.z, r3.y
      max r3.w, r3.w, r3.x
      eq r4.x, r3.w, r3.x
      min r4.y, r3.z, r3.y
      min r4.y, r3.x, r4.y
      eq r4.z, r3.z, r4.y
      and r4.w, r4.z, r4.x
      if_nz r4.w
        lt r4.w, r3.z, r3.x
        add r5.xy, -r3.zzzz, r3.yxyy
        mul r5.x, r2.y, r5.x
        div r2.z, r5.x, r5.y
        and r5.xy, r2.yzyy, r4.wwww
        mov r5.z, l(0)
      else 
        eq r4.w, r3.y, r4.y
        and r4.x, r4.w, r4.x
        if_nz r4.x
          lt r4.x, r3.y, r3.x
          add r6.xy, -r3.yyyy, r3.zxzz
          mul r5.w, r2.y, r6.x
          div r2.w, r5.w, r6.y
          and r5.xz, r2.yywy, r4.xxxx
          mov r5.y, l(0)
        else 
          eq r2.w, r3.w, r3.y
          and r4.x, r4.z, r2.w
          if_nz r4.x
            lt r4.x, r3.z, r3.y
            add r6.xy, -r3.zzzz, r3.xyxx
            mul r4.z, r2.y, r6.x
            div r2.x, r4.z, r6.y
            and r5.xy, r2.xyxx, r4.xxxx
            mov r5.z, l(0)
          else 
            eq r4.x, r3.x, r4.y
            and r2.w, r2.w, r4.x
            if_nz r2.w
              lt r2.w, r3.x, r3.y
              add r4.yz, -r3.xxxx, r3.zzyz
              mul r4.y, r2.y, r4.y
              div r2.z, r4.y, r4.z
              and r5.yz, r2.yyzy, r2.wwww
              mov r5.x, l(0)
            else 
              eq r2.w, r3.w, r3.z
              and r3.w, r4.w, r2.w
              lt r4.yz, r3.yyxy, r3.zzzz
              add r6.xyzw, -r3.yyxx, r3.xzyz
              mul r6.xz, r2.yyyy, r6.xxzx
              div r2.xz, r6.xxzx, r6.yywy
              and r6.xz, r2.xxyx, r4.yyyy
              and r2.x, r4.x, r2.w
              and r4.yz, r2.zzyz, r4.zzzz
              mov r4.x, l(0)
              movc r2.xyz, r2.xxxx, r4.xyzx, r3.xyzx
              mov r6.y, l(0)
              movc r5.xyz, r3.wwww, r6.xyzx, r2.xyzx
            endif 
          endif 
        endif 
      endif 
      dp3 r2.x, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r2.y, r5.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r2.x, -r2.y, r2.x
      add r2.xyz, r2.xxxx, r5.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(28)
      max r2.x, r3.z, r3.y
      max r2.x, r2.x, r3.x
      min r2.y, r3.z, r3.y
      min r2.y, r2.y, r3.x
      add r2.y, -r2.y, r2.x
      max r3.w, r1.z, r1.y
      max r3.w, r1.x, r3.w
      eq r4.x, r1.x, r3.w
      min r4.y, r1.z, r1.y
      min r4.y, r1.x, r4.y
      eq r4.z, r1.z, r4.y
      and r4.w, r4.z, r4.x
      if_nz r4.w
        lt r4.w, r1.z, r1.x
        add r5.xy, -r1.zzzz, r1.yxyy
        mul r5.x, r2.y, r5.x
        div r2.z, r5.x, r5.y
        and r5.xy, r2.yzyy, r4.wwww
        mov r5.z, l(0)
      else 
        eq r4.w, r1.y, r4.y
        and r4.x, r4.w, r4.x
        if_nz r4.x
          lt r4.x, r1.y, r1.x
          add r6.xy, -r1.yyyy, r1.zxzz
          mul r5.w, r2.y, r6.x
          div r2.w, r5.w, r6.y
          and r5.xz, r2.yywy, r4.xxxx
          mov r5.y, l(0)
        else 
          eq r2.w, r1.y, r3.w
          and r4.x, r4.z, r2.w
          if_nz r4.x
            lt r4.x, r1.z, r1.y
            add r6.xy, -r1.zzzz, r1.xyxx
            mul r4.z, r2.y, r6.x
            div r2.x, r4.z, r6.y
            and r5.xy, r2.xyxx, r4.xxxx
            mov r5.z, l(0)
          else 
            eq r4.x, r1.x, r4.y
            and r2.w, r2.w, r4.x
            if_nz r2.w
              lt r2.w, r1.x, r1.y
              add r4.yz, -r1.xxxx, r1.zzyz
              mul r4.y, r2.y, r4.y
              div r2.z, r4.y, r4.z
              and r5.yz, r2.yyzy, r2.wwww
              mov r5.x, l(0)
            else 
              eq r2.w, r1.z, r3.w
              and r3.w, r4.w, r2.w
              lt r4.yz, r1.yyxy, r1.zzzz
              add r6.xyzw, -r1.yyxx, r1.xzyz
              mul r6.xz, r2.yyyy, r6.xxzx
              div r2.xz, r6.xxzx, r6.yywy
              and r6.xz, r2.xxyx, r4.yyyy
              and r2.x, r4.x, r2.w
              and r4.yz, r2.zzyz, r4.zzzz
              mov r4.x, l(0)
              movc r2.xyz, r2.xxxx, r4.xyzx, r1.xyzx
              mov r6.y, l(0)
              movc r5.xyz, r3.wwww, r6.xyzx, r2.xyzx
            endif 
          endif 
        endif 
      endif 
      dp3 r2.x, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r2.y, r5.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r2.x, -r2.y, r2.x
      add r2.xyz, r2.xxxx, r5.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(29)
      dp3 r2.x, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r2.y, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r2.x, -r2.y, r2.x
      add r2.xyz, r2.xxxx, r3.xyzx
      add r2.xyz, -r1.xyzx, r2.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      case l(30)
      dp3 r2.x, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r2.y, r1.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r2.xyz, -r2.yyyy, r2.xxxx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
      default 
      add r2.xyz, -r1.xyzx, r3.xyzx
      mad r0.xyw, cb0[4].yyyy, r2.xyxz, r1.xyxz
      break 
    endswitch 
    mov o0.xyz, r0.xywx
  else 
    mov o0.xyz, r3.xyzx
  endif 
else 
  mov o0.xyzw, r1.xyzw
endif 
lt r0.x, r0.z, cb0[3].z
if_nz r0.x
  mov o0.xyzw, r1.xyzw
endif 
ret 
// Approximately 497 instruction slots used
