//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int _1017;                         // Offset:    0 Size:     4 [unused]
//   float4 VignetteColor;              // Offset:   16 Size:    16
//   int BlendMode;                     // Offset:   32 Size:     4
//   float2 VignetteStartEnd;           // Offset:   36 Size:     8
//   float VignetteDepth;               // Offset:   44 Size:     4
//   float VignetteRatio;               // Offset:   48 Size:     4
//   int VignetteShape;                 // Offset:   52 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div r1.x, r1.x, r1.y
add r1.x, -r1.x, l(1.000000)
lt r1.x, r1.x, cb0[2].w
if_nz r1.x
  add r1.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mad r1.xy, r1.xyxx, l(1.000000, 0.562500, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  add r1.xy, r1.xyxx, -v1.xyxx
  mad r1.xy, cb0[3].xxxx, r1.xyxx, v1.xyxx
  switch cb0[3].y
    case l(1)
    add r2.xy, -r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r1.w, r2.xyxx, r2.xyxx
    sqrt r1.w, r1.w
    mul r1.z, r1.w, l(1.570795)
    break 
    case l(2)
    add r1.w, r1.y, l(-0.500000)
    add r1.z, |r1.w|, |r1.w|
    break 
    case l(3)
    add r1.w, r1.x, l(-0.500000)
    add r1.z, |r1.w|, |r1.w|
    break 
    case l(4)
    add r2.xy, r1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    add r2.xy, |r2.xyxx|, |r2.xyxx|
    max r1.z, r2.y, r2.x
    break 
    case l(5)
    add r2.xy, -r1.xyxx, l(0.500000, 1.000000, 0.000000, 0.000000)
    dp2 r1.w, r2.xyxx, r2.xyxx
    sqrt r1.z, r1.w
    break 
    case l(6)
    add r1.xy, -r1.xyxx, l(0.500000, 0.000000, 0.000000, 0.000000)
    dp2 r1.x, r1.xyxx, r1.xyxx
    sqrt r1.z, r1.x
    break 
    default 
    mov r1.z, l(1.000000)
    break 
  endswitch 
  add r1.x, -cb0[2].y, cb0[2].z
  add r1.y, r1.z, -cb0[2].y
  div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
  mul_sat r1.x, r1.x, r1.y
  mad r1.y, r1.x, l(-2.000000), l(3.000000)
  mul r1.x, r1.x, r1.x
  mul r1.x, r1.x, r1.y
  mul r1.x, r1.x, cb0[1].w
  switch cb0[2].x
    case l(1)
    min r2.xyz, r0.xyzx, cb0[1].xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(2)
    mad r2.xyz, r0.xyzx, cb0[1].xyzx, -r0.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(3)
    lt r2.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), cb0[1].xyzx
    and r2.x, r2.y, r2.x
    and r2.x, r2.z, r2.x
    add r2.yzw, -r0.xxyz, l(0.000000, 0.500000, 0.500000, 0.500000)
    div r2.yzw, r2.yyzw, cb0[1].xxyz
    min r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    add r2.yzw, -r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    and r2.xyz, r2.yzwy, r2.xxxx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(4)
    add r2.xyz, r0.xyzx, cb0[1].xyzx
    add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(5)
    max r2.xyz, r0.xyzx, cb0[1].xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(6)
    add r2.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r3.xyz, -cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r2.xyz, -r2.xyzx, r3.xyzx, -r0.xyzx
    add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(7)
    lt r2.xyz, cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    and r2.x, r2.y, r2.x
    and r2.x, r2.z, r2.x
    add r2.yzw, -cb0[1].xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
    div r2.yzw, r0.xxyz, r2.yyzw
    min r2.yzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
    movc r2.xyz, r2.xxxx, r2.yzwy, l(1.000000,1.000000,1.000000,0)
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(8)
    add r2.xyz, r0.xyzx, cb0[1].xyzx
    min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(9)
    add r2.xyz, r0.xyzx, cb0[1].xyzx
    min r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(10)
    ge r2.xyz, r0.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
    or r2.x, r2.y, r2.x
    or r2.x, r2.z, r2.x
    mul r2.yzw, cb0[1].xxyz, cb0[1].xxyz
    add r3.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div_sat r2.yzw, r2.yyzw, r3.xxyz
    movc r2.xyz, r2.xxxx, r0.xyzx, r2.yzwy
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(11)
    mul r2.xyz, r0.xyzx, cb0[1].xyzx
    add r3.xyz, r2.xyzx, r2.xyzx
    add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r4.xyz, r4.xyzx, r4.xyzx
    add r5.xyz, -cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r4.xyz, -r4.xyzx, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    ge r5.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
    mad r2.xyz, r5.xyzx, r2.xyzx, r3.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(12)
    ge r2.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), cb0[1].xyzx
    and r2.x, r2.y, r2.x
    and r2.x, r2.z, r2.x
    mad r2.yzw, -cb0[1].xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, 1.000000, 1.000000, 1.000000)
    mul r2.yzw, r0.xxyz, r2.yyzw
    add r3.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad_sat r2.yzw, -r2.yyzw, r3.xxyz, r0.xxyz
    mad r3.xyz, cb0[1].xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    ge r4.xyz, l(0.250000, 0.250000, 0.250000, 0.000000), r0.xyzx
    and r3.w, r4.y, r4.x
    and r3.w, r4.z, r3.w
    mad r4.xyz, r0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), l(-12.000000, -12.000000, -12.000000, 0.000000)
    mad r4.xyz, r4.xyzx, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
    mul r4.xyz, r0.xyzx, r4.xyzx
    sqrt r5.xyz, r0.xyzx
    movc r4.xyz, r3.wwww, r4.xyzx, r5.xyzx
    add r4.xyz, -r0.xyzx, r4.xyzx
    mad_sat r3.xyz, r3.xyzx, r4.xyzx, r0.xyzx
    movc r2.xyz, r2.xxxx, r2.yzwy, r3.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(13)
    mul r2.xyz, r0.xyzx, cb0[1].xyzx
    add r3.xyz, r2.xyzx, r2.xyzx
    add r4.xyz, -cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r4.xyz, r4.xyzx, r4.xyzx
    add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r4.xyz, -r4.xyzx, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    ge r5.xyz, cb0[1].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
    mad r2.xyz, r5.xyzx, r2.xyzx, r3.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(14)
    mul r2.xyz, r0.xyzx, cb0[1].xyzx
    add r3.xyz, r2.xyzx, r2.xyzx
    add r4.xyz, -r0.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
    add r4.xyz, r4.xyzx, r4.xyzx
    div r4.xyz, cb0[1].xyzx, r4.xyzx
    ge r5.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
    mad r2.xyz, r5.xyzx, r2.xyzx, r3.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(15)
    lt r2.xyz, cb0[1].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r2.x, r2.y, r2.x
    or r2.x, r2.z, r2.x
    mad r2.yzw, cb0[1].xxyz, l(0.000000, 2.000000, 2.000000, 2.000000), r0.xxyz
    add r2.yzw, r2.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
    max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r3.xyz, cb0[1].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
    min r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    movc r2.xyz, r2.xxxx, r2.yzwy, r3.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(16)
    lt r2.xyz, cb0[1].xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r2.x, r2.y, r2.x
    or r2.x, r2.z, r2.x
    add r2.yzw, cb0[1].xxyz, cb0[1].xxyz
    min r2.yzw, r0.xxyz, r2.yyzw
    add r3.xyz, cb0[1].xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r3.xyz, r3.xyzx, r3.xyzx
    max r3.xyz, r0.xyzx, r3.xyzx
    movc r2.xyz, r2.xxxx, r2.yzwy, r3.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(17)
    mul r2.xyz, r0.xyzx, cb0[1].xyzx
    add r3.xyz, r2.xyzx, r2.xyzx
    add r4.xyz, -r0.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
    add r4.xyz, r4.xyzx, r4.xyzx
    div r4.xyz, cb0[1].xyzx, r4.xyzx
    ge r5.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r5.xyz, r5.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r2.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
    mad r2.xyz, r5.xyzx, r2.xyzx, r3.xyzx
    lt r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r2.x, r2.y, r2.x
    or r2.x, r2.z, r2.x
    movc r2.x, r2.x, l(0), l(1.000000)
    add r2.xyz, -r0.xyzx, r2.xxxx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(18)
    add r2.xyz, r0.xyzx, -cb0[1].xyzx
    add r3.xyz, -r0.xyzx, cb0[1].xyzx
    max r2.xyz, r2.xyzx, r3.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(19)
    add r2.xyz, r0.xyzx, cb0[1].xyzx
    mul r3.xyz, r0.xyzx, cb0[1].xyzx
    mad r2.xyz, -r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r2.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(20)
    add r2.xyz, r0.xyzx, -cb0[1].xyzx
    max r2.xyz, r2.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(21)
    add r2.xyz, cb0[1].xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
    div_sat r2.xyz, r0.xyzx, r2.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(22)
    div r2.xyz, r0.xyzx, cb0[1].xyzx
    div r2.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r2.xyzx
    mov_sat r2.xyz, r2.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(23)
    div_sat r2.xyz, r0.xyzx, cb0[1].xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(24)
    ge r2.xyz, cb0[1].xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
    or r2.x, r2.y, r2.x
    or r2.x, r2.z, r2.x
    mul r2.yzw, r0.xxyz, r0.xxyz
    add r3.xyz, -cb0[1].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div_sat r2.yzw, r2.yyzw, r3.xxyz
    movc r2.xyz, r2.xxxx, cb0[1].xyzx, r2.yzwy
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(25)
    add r2.xyz, r0.xyzx, cb0[1].xyzx
    add_sat r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(26)
    add r2.xyz, r0.xyzx, -cb0[1].xyzx
    add_sat r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(27)
    max r2.x, r0.z, r0.y
    max r2.x, r0.x, r2.x
    min r2.y, r0.z, r0.y
    min r2.y, r0.x, r2.y
    add r2.y, -r2.y, r2.x
    max r3.x, cb0[1].z, cb0[1].y
    max r3.x, r3.x, cb0[1].x
    min r3.z, cb0[1].z, cb0[1].y
    min r3.z, r3.z, cb0[1].x
    eq r3.yw, r3.xxxz, cb0[1].xxxz
    and r4.x, r3.w, r3.y
    if_nz r4.x
      lt r4.x, cb0[1].z, cb0[1].x
      add r4.yz, -cb0[1].zzzz, cb0[1].yyxy
      mul r4.y, r2.y, r4.y
      div r2.z, r4.y, r4.z
      and r4.xy, r2.yzyy, r4.xxxx
      mov r4.z, l(0)
    else 
      eq r4.w, r3.z, cb0[1].y
      and r3.y, r3.y, r4.w
      if_nz r3.y
        lt r3.y, cb0[1].y, cb0[1].x
        add r5.xy, -cb0[1].yyyy, cb0[1].zxzz
        mul r5.x, r2.y, r5.x
        div r2.w, r5.x, r5.y
        and r4.xz, r2.yywy, r3.yyyy
        mov r4.y, l(0)
      else 
        eq r2.w, r3.x, cb0[1].y
        and r3.y, r3.w, r2.w
        if_nz r3.y
          lt r3.y, cb0[1].z, cb0[1].y
          add r5.xy, -cb0[1].zzzz, cb0[1].xyxx
          mul r3.w, r2.y, r5.x
          div r2.x, r3.w, r5.y
          and r4.xy, r2.xyxx, r3.yyyy
          mov r4.z, l(0)
        else 
          eq r3.y, r3.z, cb0[1].x
          and r2.w, r2.w, r3.y
          if_nz r2.w
            lt r2.w, cb0[1].x, cb0[1].y
            add r3.zw, -cb0[1].xxxx, cb0[1].zzzy
            mul r3.z, r2.y, r3.z
            div r2.z, r3.z, r3.w
            and r4.yz, r2.yyzy, r2.wwww
            mov r4.x, l(0)
          else 
            eq r2.w, r3.x, cb0[1].z
            and r3.x, r4.w, r2.w
            lt r3.zw, cb0[1].yyyx, cb0[1].zzzz
            add r5.xyzw, -cb0[1].yyxx, cb0[1].xzyz
            mul r5.xz, r2.yyyy, r5.xxzx
            div r2.xz, r5.xxzx, r5.yywy
            and r5.xz, r2.xxyx, r3.zzzz
            and r2.x, r3.y, r2.w
            and r6.yz, r2.zzyz, r3.wwww
            mov r6.x, l(0)
            movc r2.xyz, r2.xxxx, r6.xyzx, cb0[1].xyzx
            mov r5.y, l(0)
            movc r4.xyz, r3.xxxx, r5.xyzx, r2.xyzx
          endif 
        endif 
      endif 
    endif 
    dp3 r2.x, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r2.y, r4.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r2.x, -r2.y, r2.x
    add r2.xyz, r2.xxxx, r4.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(28)
    max r2.x, cb0[1].z, cb0[1].y
    max r2.x, r2.x, cb0[1].x
    min r2.y, cb0[1].z, cb0[1].y
    min r2.y, r2.y, cb0[1].x
    add r2.y, -r2.y, r2.x
    max r3.x, r0.z, r0.y
    max r3.x, r0.x, r3.x
    min r3.z, r0.z, r0.y
    min r3.z, r0.x, r3.z
    eq r3.yw, r0.xxxz, r3.xxxz
    and r4.x, r3.w, r3.y
    if_nz r4.x
      lt r4.x, r0.z, r0.x
      add r4.yz, -r0.zzzz, r0.yyxy
      mul r4.y, r2.y, r4.y
      div r2.z, r4.y, r4.z
      and r4.xy, r2.yzyy, r4.xxxx
      mov r4.z, l(0)
    else 
      eq r4.w, r0.y, r3.z
      and r3.y, r3.y, r4.w
      if_nz r3.y
        lt r3.y, r0.y, r0.x
        add r5.xy, -r0.yyyy, r0.zxzz
        mul r5.x, r2.y, r5.x
        div r2.w, r5.x, r5.y
        and r4.xz, r2.yywy, r3.yyyy
        mov r4.y, l(0)
      else 
        eq r2.w, r0.y, r3.x
        and r3.y, r3.w, r2.w
        if_nz r3.y
          lt r3.y, r0.z, r0.y
          add r5.xy, -r0.zzzz, r0.xyxx
          mul r3.w, r2.y, r5.x
          div r2.x, r3.w, r5.y
          and r4.xy, r2.xyxx, r3.yyyy
          mov r4.z, l(0)
        else 
          eq r3.y, r0.x, r3.z
          and r2.w, r2.w, r3.y
          if_nz r2.w
            lt r2.w, r0.x, r0.y
            add r3.zw, -r0.xxxx, r0.zzzy
            mul r3.z, r2.y, r3.z
            div r2.z, r3.z, r3.w
            and r4.yz, r2.yyzy, r2.wwww
            mov r4.x, l(0)
          else 
            eq r2.w, r0.z, r3.x
            and r3.x, r4.w, r2.w
            lt r3.zw, r0.yyyx, r0.zzzz
            add r5.xyzw, -r0.yyxx, r0.xzyz
            mul r5.xz, r2.yyyy, r5.xxzx
            div r2.xz, r5.xxzx, r5.yywy
            and r5.xz, r2.xxyx, r3.zzzz
            and r2.x, r3.y, r2.w
            and r6.yz, r2.zzyz, r3.wwww
            mov r6.x, l(0)
            movc r2.xyz, r2.xxxx, r6.xyzx, r0.xyzx
            mov r5.y, l(0)
            movc r4.xyz, r3.xxxx, r5.xyzx, r2.xyzx
          endif 
        endif 
      endif 
    endif 
    dp3 r2.x, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r2.y, r4.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r2.x, -r2.y, r2.x
    add r2.xyz, r2.xxxx, r4.xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(29)
    dp3 r2.x, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r2.y, cb0[1].xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r2.x, -r2.y, r2.x
    add r2.xyz, r2.xxxx, cb0[1].xyzx
    add r2.xyz, -r0.xyzx, r2.xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    case l(30)
    dp3 r2.x, cb0[1].xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r2.y, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r2.xyz, -r2.yyyy, r2.xxxx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
    default 
    add r2.xyz, -r0.xyzx, cb0[1].xyzx
    mad r1.yzw, r1.xxxx, r2.xxyz, r0.xxyz
    break 
  endswitch 
  mov o0.xyz, r1.yzwy
  mov o0.w, r0.w
  ret 
else 
  mov o0.xyzw, r0.xyzw
  ret 
endif 
ret 
// Approximately 472 instruction slots used
