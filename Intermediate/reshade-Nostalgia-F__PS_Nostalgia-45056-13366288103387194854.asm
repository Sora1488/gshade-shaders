//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __srgbV__ReShade__BackBufferTex    texture  float4          2d             t1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 7
mov r0.yzw, l(0,0.800000,0.266667,0.800000)
mov r1.yzw, l(0,0.666667,1.000000,0.933333)
mov r2.yzw, l(0,0.533333,0,0)
mov r3.yzw, l(0,1.000000,1.000000,1.000000)
mov r4.yzw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, v1.xyxx, t1.xyzw, s0
add r6.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
dp3 r3.x, r6.xyzx, r6.xyzx
dp3 r4.x, r5.xyzx, r5.xyzx
lt r5.w, r3.x, r4.x
movc r3.xyzw, r5.wwww, r3.xyzw, r4.xyzw
add r4.xyz, r5.xyzx, l(-0.533333, -0.000000, -0.000000, 0.000000)
dp3 r2.x, r4.xyzx, r4.xyzx
lt r4.x, r2.x, r3.x
movc r2.xyzw, r4.xxxx, r2.xyzw, r3.xyzw
add r3.xyz, r5.xyzx, l(-0.666667, -1.000000, -0.933333, 0.000000)
dp3 r1.x, r3.xyzx, r3.xyzx
lt r3.x, r1.x, r2.x
movc r1.xyzw, r3.xxxx, r1.xyzw, r2.xyzw
add r2.xyz, r5.xyzx, l(-0.800000, -0.266667, -0.800000, 0.000000)
dp3 r0.x, r2.xyzx, r2.xyzx
lt r2.x, r0.x, r1.x
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
add r1.xyz, r5.xyzx, l(-0.000000, -0.800000, -0.333333, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0,0.800000,0.333333)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.000000, -0.000000, -0.666667, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0,0,0.666667)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.933333, -0.933333, -0.466667, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0.933333,0.933333,0.466667)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.866667, -0.533333, -0.333333, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0.866667,0.533333,0.333333)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.400000, -0.266667, -0.000000, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0.400000,0.266667,0)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-1.000000, -0.466667, -0.466667, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,1.000000,0.466667,0.466667)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.200000, -0.200000, -0.200000, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0.200000,0.200000,0.200000)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.466667, -0.466667, -0.466667, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0.466667,0.466667,0.466667)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.666667, -1.000000, -0.400000, 0.000000)
dp3 r1.x, r1.xyzx, r1.xyzx
lt r2.x, r1.x, r0.x
mov r1.yzw, l(0,0.666667,1.000000,0.400000)
movc r0.xyzw, r2.xxxx, r1.xyzw, r0.xyzw
add r1.xyz, r5.xyzx, l(-0.000000, -0.533333, -1.000000, 0.000000)
add r2.xyz, r5.xyzx, l(-0.733333, -0.733333, -0.733333, 0.000000)
dp3 r1.w, r2.xyzx, r2.xyzx
dp3 r2.x, r1.xyzx, r1.xyzx
lt r1.x, r2.x, r0.x
mov r2.yzw, l(0,0,0.533333,1.000000)
movc r0.xyzw, r1.xxxx, r2.xyzw, r0.xyzw
lt r0.x, r1.w, r0.x
movc r0.xyz, r0.xxxx, l(0.733333,0.733333,0.733333,0), r0.yzwy
mul r0.w, v1.y, l(540.000000)
frc r0.w, r0.w
add r0.w, r0.w, l(0.500000)
mul o0.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 82 instruction slots used
