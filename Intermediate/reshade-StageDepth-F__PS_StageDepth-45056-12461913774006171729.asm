//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int StageDepth_Quantity;           // Offset:    0 Size:     4 [unused]
//   int Stage_BlendMode;               // Offset:    4 Size:     4
//   float Stage_Opacity;               // Offset:    8 Size:     4
//   float Stage_depth;                 // Offset:   12 Size:     4
//   float Stage_Scale;                 // Offset:   16 Size:     4
//   float Stage_ScaleX;                // Offset:   20 Size:     4
//   float Stage_ScaleY;                // Offset:   24 Size:     4
//   float Stage_PosX;                  // Offset:   28 Size:     4
//   float Stage_PosY;                  // Offset:   32 Size:     4
//   int Stage_SnapRotate;              // Offset:   36 Size:     4
//   float Stage_Rotate;                // Offset:   40 Size:     4
//   bool Stage_InvertDepth;            // Offset:   44 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__StageDepth_Texture           texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div r1.x, r1.x, r1.y
add r1.y, -r1.x, l(1.000000)
movc r1.x, cb0[2].w, r1.x, r1.y
lt r1.x, r1.x, cb0[0].w
if_nz r1.x
  mul r1.xy, cb0[1].yzyy, cb0[1].xxxx
  mul r1.xy, r1.xyxx, l(-0.777778, 0.437500, 0.000000, 0.000000)
  switch cb0[2].y
    case l(1)
    mov r1.z, l(-1.570796)
    break 
    case l(2)
    mov r1.z, l(1.570796)
    break 
    case l(3)
    mov r1.z, l(0)
    break 
    case l(4)
    mov r1.z, l(3.141593)
    break 
    default 
    mul r1.z, cb0[2].z, l(0.017453)
    break 
  endswitch 
  div r1.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r1.xyxx
  sincos r2.x, r3.x, r1.z
  mul r2.x, r2.x, l(-0.777778)
  sincos r1.z, null, -r1.z
  mul r2.w, r1.z, l(0.437500)
  mul r2.yz, r3.xxxx, l(0.000000, -0.777778, 0.437500, 0.000000)
  mov r3.xz, v1.xxyx
  mov r3.y, -cb0[1].w
  dp2 r3.x, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mov r3.w, -cb0[2].x
  dp2 r3.y, r3.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  dp2 r1.z, r3.xyxx, r2.ywyy
  dp2 r1.w, r3.xyxx, r2.xzxx
  mul r2.xy, r1.xyxx, r1.zwzz
  add r1.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, r1.xyxx, t4.xyzw, s0
  mov_sat r1.zw, r1.xxxy
  eq r1.xy, r1.zwzz, r1.xyxx
  and r1.x, r1.y, r1.x
  and r1.x, r1.x, l(0x3f800000)
  mul r3.xyzw, r1.xxxx, r2.xyzw
  mul r1.y, r3.w, cb0[0].z
  switch cb0[0].y
    case l(1)
    min r5.xyz, r0.xyzx, r3.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(2)
    mad r5.xyz, r0.xyzx, r3.xyzx, -r0.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(3)
    lt r5.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r3.xyzx
    and r1.z, r5.y, r5.x
    and r1.z, r5.z, r1.z
    add r5.xyz, -r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    div r5.xyz, r5.xyzx, r3.xyzx
    min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r5.xyz, -r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    and r5.xyz, r1.zzzz, r5.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(4)
    mad r5.xyz, r2.xyzx, r1.xxxx, r0.xyzx
    add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(5)
    max r5.xyz, r0.xyzx, r3.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(6)
    add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r6.xyz, -r2.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r5.xyz, -r5.xyzx, r6.xyzx, -r0.xyzx
    add r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(7)
    lt r5.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    and r1.z, r5.y, r5.x
    and r1.z, r5.z, r1.z
    mad r5.xyz, -r2.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div r5.xyz, r0.xyzx, r5.xyzx
    min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    movc r5.xyz, r1.zzzz, r5.xyzx, l(1.000000,1.000000,1.000000,0)
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(8)
    mad r5.xyz, r2.xyzx, r1.xxxx, r0.xyzx
    min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(9)
    mad r5.xyz, r2.xyzx, r1.xxxx, r0.xyzx
    min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(10)
    ge r5.xyz, r0.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
    or r1.z, r5.y, r5.x
    or r1.z, r5.z, r1.z
    mul r5.xyz, r3.xyzx, r3.xyzx
    add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div_sat r5.xyz, r5.xyzx, r6.xyzx
    movc r5.xyz, r1.zzzz, r0.xyzx, r5.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(11)
    mul r5.xyz, r0.xyzx, r3.xyzx
    add r6.xyz, r5.xyzx, r5.xyzx
    add r7.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r7.xyzx
    mad r8.xyz, -r2.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r7.xyz, -r7.xyzx, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    ge r8.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
    mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(12)
    ge r5.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r3.xyzx
    and r1.z, r5.y, r5.x
    and r1.z, r5.z, r1.z
    mad r5.xyz, -r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r5.xyz, r0.xyzx, r5.xyzx
    add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad_sat r5.xyz, -r5.xyzx, r6.xyzx, r0.xyzx
    mad r6.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    ge r7.xyz, l(0.250000, 0.250000, 0.250000, 0.000000), r0.xyzx
    and r1.w, r7.y, r7.x
    and r1.w, r7.z, r1.w
    mad r7.xyz, r0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), l(-12.000000, -12.000000, -12.000000, 0.000000)
    mad r7.xyz, r7.xyzx, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
    mul r7.xyz, r0.xyzx, r7.xyzx
    sqrt r8.xyz, r0.xyzx
    movc r7.xyz, r1.wwww, r7.xyzx, r8.xyzx
    add r7.xyz, -r0.xyzx, r7.xyzx
    mad_sat r6.xyz, r6.xyzx, r7.xyzx, r0.xyzx
    movc r5.xyz, r1.zzzz, r5.xyzx, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(13)
    mul r5.xyz, r0.xyzx, r3.xyzx
    add r6.xyz, r5.xyzx, r5.xyzx
    mad r7.xyz, -r2.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r7.xyz, r7.xyzx, r7.xyzx
    add r8.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    mad r7.xyz, -r7.xyzx, r8.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    ge r8.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
    mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(14)
    mul r5.xyz, r0.xyzx, r3.xyzx
    add r6.xyz, r5.xyzx, r5.xyzx
    add r7.xyz, -r0.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
    add r7.xyz, r7.xyzx, r7.xyzx
    div r7.xyz, r3.xyzx, r7.xyzx
    ge r8.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
    mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(15)
    lt r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r1.z, r5.y, r5.x
    or r1.z, r5.z, r1.z
    mad r5.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
    add r5.xyz, r5.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    mad r6.xyz, r2.xyzx, r1.xxxx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    mad r6.xyz, r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
    min r6.xyz, r6.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    movc r5.xyz, r1.zzzz, r5.xyzx, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(16)
    lt r5.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r1.z, r5.y, r5.x
    or r1.z, r5.z, r1.z
    add r5.xyz, r3.xyzx, r3.xyzx
    min r5.xyz, r0.xyzx, r5.xyzx
    mad r6.xyz, r2.xyzx, r1.xxxx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r6.xyz, r6.xyzx, r6.xyzx
    max r6.xyz, r0.xyzx, r6.xyzx
    movc r5.xyz, r1.zzzz, r5.xyzx, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(17)
    mul r5.xyz, r0.xyzx, r3.xyzx
    add r6.xyz, r5.xyzx, r5.xyzx
    add r7.xyz, -r0.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
    add r7.xyz, r7.xyzx, r7.xyzx
    div r7.xyz, r3.xyzx, r7.xyzx
    ge r8.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    and r8.xyz, r8.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
    mad r5.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r7.xyzx
    mad r5.xyz, r8.xyzx, r5.xyzx, r6.xyzx
    lt r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    or r1.z, r5.y, r5.x
    or r1.z, r5.z, r1.z
    movc r1.z, r1.z, l(0), l(1.000000)
    add r5.xyz, -r0.xyzx, r1.zzzz
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(18)
    mad r5.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
    mad r6.xyz, r2.xyzx, r1.xxxx, -r0.xyzx
    max r5.xyz, r5.xyzx, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(19)
    mad r5.xyz, r2.xyzx, r1.xxxx, r0.xyzx
    mul r6.xyz, r0.xyzx, r3.xyzx
    mad r5.xyz, -r6.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r5.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(20)
    mad r5.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
    max r5.xyz, r5.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(21)
    mad r5.xyz, r2.xyzx, r1.xxxx, l(0.010000, 0.010000, 0.010000, 0.000000)
    div_sat r5.xyz, r0.xyzx, r5.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(22)
    div r5.xyz, r0.xyzx, r3.xyzx
    div r5.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r5.xyzx
    mov_sat r5.xyz, r5.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(23)
    div_sat r5.xyz, r0.xyzx, r3.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(24)
    ge r5.xyz, r3.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
    or r1.z, r5.y, r5.x
    or r1.z, r5.z, r1.z
    mul r5.xyz, r0.xyzx, r0.xyzx
    mad r6.xyz, -r2.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
    div_sat r5.xyz, r5.xyzx, r6.xyzx
    movc r5.xyz, r1.zzzz, r3.xyzx, r5.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(25)
    mad r5.xyz, r2.xyzx, r1.xxxx, r0.xyzx
    add_sat r5.xyz, r5.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(26)
    mad r5.xyz, -r2.xyzx, r1.xxxx, r0.xyzx
    add_sat r5.xyz, r5.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(27)
    max r1.z, r0.z, r0.y
    max r1.z, r0.x, r1.z
    min r1.w, r0.z, r0.y
    min r1.w, r0.x, r1.w
    add r5.y, -r1.w, r1.z
    max r1.z, r3.z, r3.y
    max r1.z, r1.z, r3.x
    eq r1.w, r1.z, r3.x
    min r2.w, r3.z, r3.y
    min r2.w, r2.w, r3.x
    eq r4.w, r2.w, r3.z
    and r6.x, r1.w, r4.w
    if_nz r6.x
      lt r6.x, r3.z, r3.x
      mad r6.yz, r2.yyxy, r1.xxxx, -r3.zzzz
      mul r6.y, r5.y, r6.y
      div r5.z, r6.y, r6.z
      and r6.xy, r5.yzyy, r6.xxxx
      mov r6.z, l(0)
    else 
      eq r6.w, r2.w, r3.y
      and r1.w, r1.w, r6.w
      if_nz r1.w
        lt r1.w, r3.y, r3.x
        mad r7.xy, r2.zxzz, r1.xxxx, -r3.yyyy
        mul r7.x, r5.y, r7.x
        div r5.w, r7.x, r7.y
        and r6.xz, r1.wwww, r5.yywy
        mov r6.y, l(0)
      else 
        eq r1.w, r1.z, r3.y
        and r4.w, r4.w, r1.w
        if_nz r4.w
          lt r4.w, r3.z, r3.y
          mad r7.xy, r2.xyxx, r1.xxxx, -r3.zzzz
          mul r5.w, r5.y, r7.x
          div r5.x, r5.w, r7.y
          and r6.xy, r5.xyxx, r4.wwww
          mov r6.z, l(0)
        else 
          eq r2.w, r2.w, r3.x
          and r1.w, r1.w, r2.w
          if_nz r1.w
            lt r1.w, r3.x, r3.y
            mad r7.xy, r2.zyzz, r1.xxxx, -r3.xxxx
            mul r4.w, r5.y, r7.x
            div r5.z, r4.w, r7.y
            and r6.yz, r1.wwww, r5.yyzy
            mov r6.x, l(0)
          else 
            eq r1.z, r1.z, r3.z
            and r1.w, r6.w, r1.z
            lt r7.xy, r3.yxyy, r3.zzzz
            mad r8.xyzw, r2.xzyz, r1.xxxx, -r3.yyxx
            mul r7.zw, r5.yyyy, r8.xxxz
            div r5.xz, r7.zzwz, r8.yywy
            and r8.xz, r5.xxyx, r7.xxxx
            and r1.z, r2.w, r1.z
            and r5.yz, r5.zzyz, r7.yyyy
            mov r5.x, l(0)
            movc r5.xyz, r1.zzzz, r5.xyzx, r3.xyzx
            mov r8.y, l(0)
            movc r6.xyz, r1.wwww, r8.xyzx, r5.xyzx
          endif 
        endif 
      endif 
    endif 
    dp3 r1.z, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r1.w, r6.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r1.z, -r1.w, r1.z
    add r5.xyz, r1.zzzz, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(28)
    max r1.z, r3.z, r3.y
    max r1.z, r1.z, r3.x
    min r1.w, r3.z, r3.y
    min r1.w, r1.w, r3.x
    add r5.y, -r1.w, r1.z
    max r1.z, r0.z, r0.y
    max r1.z, r0.x, r1.z
    eq r1.w, r0.x, r1.z
    min r2.w, r0.z, r0.y
    min r2.w, r0.x, r2.w
    eq r4.w, r0.z, r2.w
    and r6.x, r1.w, r4.w
    if_nz r6.x
      lt r6.x, r0.z, r0.x
      add r6.yz, -r0.zzzz, r0.yyxy
      mul r6.y, r5.y, r6.y
      div r5.z, r6.y, r6.z
      and r6.xy, r5.yzyy, r6.xxxx
      mov r6.z, l(0)
    else 
      eq r6.w, r0.y, r2.w
      and r1.w, r1.w, r6.w
      if_nz r1.w
        lt r1.w, r0.y, r0.x
        add r7.xy, -r0.yyyy, r0.zxzz
        mul r7.x, r5.y, r7.x
        div r5.w, r7.x, r7.y
        and r6.xz, r1.wwww, r5.yywy
        mov r6.y, l(0)
      else 
        eq r1.w, r0.y, r1.z
        and r4.w, r4.w, r1.w
        if_nz r4.w
          lt r4.w, r0.z, r0.y
          add r7.xy, -r0.zzzz, r0.xyxx
          mul r5.w, r5.y, r7.x
          div r5.x, r5.w, r7.y
          and r6.xy, r5.xyxx, r4.wwww
          mov r6.z, l(0)
        else 
          eq r2.w, r0.x, r2.w
          and r1.w, r1.w, r2.w
          if_nz r1.w
            lt r1.w, r0.x, r0.y
            add r7.xy, -r0.xxxx, r0.zyzz
            mul r4.w, r5.y, r7.x
            div r5.z, r4.w, r7.y
            and r6.yz, r1.wwww, r5.yyzy
            mov r6.x, l(0)
          else 
            eq r1.z, r0.z, r1.z
            and r1.w, r6.w, r1.z
            lt r7.xy, r0.yxyy, r0.zzzz
            add r8.xyzw, -r0.yyxx, r0.xzyz
            mul r7.zw, r5.yyyy, r8.xxxz
            div r5.xz, r7.zzwz, r8.yywy
            and r8.xz, r5.xxyx, r7.xxxx
            and r1.z, r2.w, r1.z
            and r5.yz, r5.zzyz, r7.yyyy
            mov r5.x, l(0)
            movc r5.xyz, r1.zzzz, r5.xyzx, r0.xyzx
            mov r8.y, l(0)
            movc r6.xyz, r1.wwww, r8.xyzx, r5.xyzx
          endif 
        endif 
      endif 
    endif 
    dp3 r1.z, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r1.w, r6.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r1.z, -r1.w, r1.z
    add r5.xyz, r1.zzzz, r6.xyzx
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(29)
    dp3 r1.z, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r1.w, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r1.z, -r1.w, r1.z
    mad r5.xyz, r2.xyzx, r1.xxxx, r1.zzzz
    add r5.xyz, -r0.xyzx, r5.xyzx
    mad r4.xyz, r1.yyyy, r5.xyzx, r0.xyzx
    break 
    case l(30)
    dp3 r1.z, r3.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    dp3 r1.w, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
    add r3.xyz, -r1.wwww, r1.zzzz
    mad r4.xyz, r1.yyyy, r3.xyzx, r0.xyzx
    break 
    default 
    mad r1.xzw, r2.xxyz, r1.xxxx, -r0.xxyz
    mad r4.xyz, r1.yyyy, r1.xzwx, r0.xyzx
    break 
  endswitch 
  mov o0.xyz, r4.xyzx
  mov o0.w, r3.w
else 
  mov o0.xyzw, r0.xyzw
endif 
ret 
// Approximately 468 instruction slots used
