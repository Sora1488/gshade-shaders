//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Frame;                       // Offset:    0 Size:     4
//   int Hints;                         // Offset:    4 Size:     4 [unused]
//   bool debug;                        // Offset:    8 Size:     4 [unused]
//   bool ShowIcon;                     // Offset:   12 Size:     4
//   bool LimitPos;                     // Offset:   16 Size:     4
//   float OGLighting;                  // Offset:   20 Size:     4 [unused]
//   float BUMP;                        // Offset:   24 Size:     4 [unused]
//   int Shadow_Quality;                // Offset:   28 Size:     4
//   float Shadow_Depth;                // Offset:   32 Size:     4
//   float UI_FOG_DENSITY;              // Offset:   36 Size:     4
//   float3 UI_FOG_COLOR;               // Offset:   48 Size:    12
//   bool UI_FOG_DEPTH_MASK;            // Offset:   60 Size:     4
//   float roughness;                   // Offset:   64 Size:     4 [unused]
//   float specular;                    // Offset:   68 Size:     4
//   bool L1;                           // Offset:   72 Size:     4
//   bool UI_FOG1;                      // Offset:   76 Size:     4
//   bool UI_S_ENABLE1;                 // Offset:   80 Size:     4
//   float3 UI_LAMP1;                   // Offset:   84 Size:    12
//   float3 UI_LAMP1_PRECISE;           // Offset:   96 Size:    12
//   float3 UI_COLOR1;                  // Offset:  112 Size:    12
//   float UI_POWER1;                   // Offset:  124 Size:     4
//   float UI_SOFT_S1;                  // Offset:  128 Size:     4
//   bool L2;                           // Offset:  132 Size:     4
//   bool UI_FOG2;                      // Offset:  136 Size:     4
//   bool UI_S_ENABLE2;                 // Offset:  140 Size:     4
//   float3 UI_LAMP2;                   // Offset:  144 Size:    12
//   float3 UI_LAMP2_PRECISE;           // Offset:  160 Size:    12
//   float3 UI_COLOR2;                  // Offset:  176 Size:    12
//   float UI_POWER2;                   // Offset:  188 Size:     4
//   float UI_SOFT_S2;                  // Offset:  192 Size:     4
//   bool L3;                           // Offset:  196 Size:     4
//   bool UI_FOG3;                      // Offset:  200 Size:     4
//   bool UI_S_ENABLE3;                 // Offset:  204 Size:     4
//   float3 UI_LAMP3;                   // Offset:  208 Size:    12
//   float3 UI_LAMP3_PRECISE;           // Offset:  224 Size:    12
//   float3 UI_COLOR3;                  // Offset:  240 Size:    12
//   float UI_POWER3;                   // Offset:  252 Size:     4
//   float UI_SOFT_S3;                  // Offset:  256 Size:     4
//   bool L4;                           // Offset:  260 Size:     4
//   bool UI_FOG4;                      // Offset:  264 Size:     4
//   bool UI_S_ENABLE4;                 // Offset:  268 Size:     4
//   float3 UI_LAMP4;                   // Offset:  272 Size:    12
//   float3 UI_LAMP4_PRECISE;           // Offset:  288 Size:    12
//   float3 UI_COLOR4;                  // Offset:  304 Size:    12
//   float UI_POWER4;                   // Offset:  316 Size:     4
//   float UI_SOFT_S4;                  // Offset:  320 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__LampIcon                     texture  float4          2d             t6      1 
// __V__NormTex                      texture  float4          2d             t8      1 
// __V__NGLa_BlueNoise               texture  float4          2d            t24      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   x           2   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[21], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t24
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_output o1.xyzw
dcl_output o2.x
dcl_temps 14
dcl_indexableTemp x0[3], 4
dcl_indexableTemp x1[3], 4
dcl_indexableTemp x2[3], 4
dcl_indexableTemp x3[3], 4
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
div r0.z, r0.z, r0.w
mul r1.xw, r0.zzzz, l(523.598816, 0.000000, 0.000000, 1000.000000)
mul r1.xy, r0.xyxx, r1.xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t8.xyzw, s0
mul r1.z, r1.x, l(1.777778)
mul r0.xyw, r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000)
dp3 r1.z, r1.zywz, r0.xywx
rsq r1.z, r1.z
mul r3.xyz, r0.xywx, r1.zzzz
dp3 r1.z, r2.xyzx, -r3.xyzx
mul r3.w, cb0[4].y, l(0.080000)
mul r2.w, r2.w, r2.w
if_nz cb0[4].z
  mul r4.x, cb0[7].w, l(1000.000000)
  add r4.yzw, cb0[5].yyzw, cb0[6].xxyz
  add r4.yzw, r4.yyzw, l(0.000000, -0.500000, -0.500000, -0.000000)
  mul r4.y, r4.w, r4.y
  mul r4.z, r4.w, -r4.z
  mul r5.xyz, r4.yzwy, l(1861.333496, 523.500000, 1000.000000, 0.000000)
  if_nz cb0[1].x
    mul r4.w, r4.w, l(523.598816)
    mul r6.xy, r4.yzyy, l(1047.000000, 523.500000, 0.000000, 0.000000)
    div r6.xy, r6.xyxx, r4.wwww
    mad r6.xy, r6.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r4.w, r6.xyxx, t2.yzwx, s0, l(0.000000)
    mad r6.x, -r4.w, l(999.000000), l(1000.000000)
    div r4.w, r4.w, r6.x
    mad r4.w, r4.w, l(1000.000000), l(-5.000000)
    min r5.w, r4.w, r5.z
  else 
    mov r5.w, r5.z
  endif 
  mad r6.xyz, r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), -r5.xywx
  dp3 r4.w, r6.xyzx, r6.xyzx
  div r4.w, l(1.000000, 1.000000, 1.000000, 1.000000), r4.w
  mad r6.xyw, -r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), r5.xyxw
  dp3 r5.z, r6.xywx, r6.xywx
  rsq r5.z, r5.z
  mul r7.xyz, r5.zzzz, r6.xywx
  mad r6.xyw, r6.xyxw, r5.zzzz, -r3.xyxz
  dp3 r5.z, r6.xywx, r6.xywx
  rsq r5.z, r5.z
  mul r6.xyw, r5.zzzz, r6.xyxw
  dp3 r5.z, r2.xyzx, r6.xywx
  dp3 r6.x, -r3.xyzx, r6.xywx
  dp3 r6.y, r2.xyzx, r7.xyzx
  dp3 r6.w, -r7.xyzx, r2.xyzx
  lt r6.w, l(0.000000), r6.w
  ine r7.x, cb0[5].x, l(0)
  and r7.x, r6.w, r7.x
  if_nz r7.x
    mov x0[0].x, l(16)
    mov x0[1].x, l(48)
    mov x0[2].x, l(256)
    mov r7.x, cb0[1].w
    mov r7.x, x0[r7.x + 0].x
    mul r8.xyzw, v1.xyxy, l(1920.000000, 1080.000000, 245760.000000, 138240.000000)
    ge r9.xyzw, r8.zwzw, -r8.zwzw
    movc r9.xyzw, r9.xyzw, l(128.000000,128.000000,0.007812,0.007812), l(-128.000000,-128.000000,-0.007812,-0.007812)
    mul r7.yz, r8.xxyx, r9.zzwz
    mul r7.w, cb0[0].x, l(64.000000)
    ge r7.w, r7.w, -r7.w
    movc r8.xy, r7.wwww, l(64.000000,0.015625,0,0), l(-64.000000,-0.015625,0,0)
    mul r7.w, r8.y, cb0[0].x
    frc r7.yzw, r7.yyzw
    mul r7.w, r7.w, r8.x
    mul r8.xy, r7.wwww, l(8.000000, 0.125000, 0.000000, 0.000000)
    ge r8.x, r8.x, -r8.x
    movc r8.xz, r8.xxxx, l(8.000000,0,0.125000,0), l(-8.000000,0,-0.125000,0)
    mul r7.w, r7.w, r8.z
    frc r7.w, r7.w
    mul r7.w, r7.w, r8.x
    ftoi r10.x, r7.w
    round_ni r7.w, r8.y
    mul r8.x, r7.w, l(8.000000)
    ge r8.x, r8.x, -r8.x
    movc r8.xy, r8.xxxx, l(8.000000,0.125000,0,0), l(-8.000000,-0.125000,0,0)
    mul r7.w, r7.w, r8.y
    frc r7.w, r7.w
    mul r7.w, r7.w, r8.x
    ftoi r10.y, r7.w
    ishl r8.xy, r10.xyxx, l(7, 7, 0, 0)
    itof r8.xy, r8.xyxx
    mad r7.yz, r9.xxyx, r7.yyzy, r8.xxyx
    mul r7.yz, r7.yyzy, l(0.000000, 0.000977, 0.000977, 0.000000)
    sample_indexable(texture2d)(float,float,float,float) r7.yzw, r7.yzyy, t24.wxyz, s1
    add r8.xyzw, r7.yzwy, l(-0.500000, -0.500000, -0.500000, 1.000000)
    mul r7.yzw, r8.xxyz, cb0[8].xxxx
    mad r9.xyz, r7.yzwy, l(0.300000, 0.300000, 0.300000, 0.000000), r5.xywx
    mul r5.x, r5.w, l(0.523599)
    mul r7.yz, r4.yyzy, l(0.000000, 1047.000000, 523.500000, 0.000000)
    div r5.xy, r7.yzyy, r5.xxxx
    mad r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.x, r5.xyxx, t2.xyzw, s0, l(0.000000)
    mad r5.y, -r5.x, l(999.000000), l(1000.000000)
    div r5.x, r5.x, r5.y
    ge r5.x, r5.x, r5.w
    if_nz r5.x
      min r9.w, r0.z, r9.z
    else 
      mov r9.w, r9.z
    endif 
    mad r7.yzw, -r1.xxyw, l(0.000000, 1.777778, 1.000000, 1.000000), r9.xxyw
    dp3 r5.x, r7.yzwy, r7.yzwy
    rsq r5.x, r5.x
    mul r7.yzw, r5.xxxx, r7.yyzw
    mad r8.xyz, r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), -r9.xywx
    dp3 r5.x, r8.xyzx, r8.xyzx
    sqrt r5.x, r5.x
    min r5.x, r5.x, l(1000.000000)
    itof r5.y, r7.x
    div r5.x, r5.x, r5.y
    mul r8.xyz, r5.xxxx, r7.yzwy
    mad r8.xyz, r8.xyzx, r8.wwww, r0.xywx
    mov r7.x, l(0)
    mov r8.w, l(0)
    mov r9.xyz, r8.xyzx
    loop 
      ge r9.w, r7.x, r5.y
      breakc_nz r9.w
      mul r9.w, r9.z, l(0.523599)
      mul r10.xy, r9.xyxx, l(0.562500, 1.000000, 0.000000, 0.000000)
      div r10.xy, r10.xyxx, r9.wwww
      mad r10.xy, r10.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r9.w, r10.xyxx, t2.yzwx, s0, l(0.000000)
      mad r10.x, -r9.w, l(999.000000), l(1000.000000)
      div r9.w, r9.w, r10.x
      mad r9.w, r9.w, l(1000.000000), -r9.z
      lt r10.x, r9.w, l(0.000000)
      lt r9.w, -cb0[2].x, r9.w
      and r9.w, r9.w, r10.x
      if_nz r9.w
        mov r8.w, l(1.000000)
        break 
      endif 
      mad r9.xyz, r7.yzwy, r5.xxxx, r9.xyzx
      add r7.x, r7.x, l(1.000000)
      mov r8.w, l(0)
    endloop 
    add r5.x, -r8.w, l(1.000000)
  else 
    mov r5.x, l(1.000000)
  endif 
  mul r5.y, r4.x, r4.w
  mul r7.xyz, r5.yyyy, cb0[7].xyzx
  add r5.y, -r6.y, l(1.000000)
  mul r7.xyz, r5.yyyy, r7.xyzx
  and r5.y, r6.w, l(0x3f800000)
  mul r7.xyz, r7.xyzx, r5.yyyy
  mul r7.xyz, r5.xxxx, r7.xyzx
  mul r5.y, r2.w, r2.w
  mad r6.w, r5.z, r5.y, -r5.z
  mad r5.z, r6.w, r5.z, l(1.000000)
  mul r5.z, r5.z, r5.z
  mul r5.z, r5.z, l(3.141593)
  div r5.z, r5.y, r5.z
  mul r6.w, r1.z, r1.z
  mad r7.w, -r1.z, r1.z, l(1.000000)
  mul r7.w, r5.y, r7.w
  div r6.w, r7.w, r6.w
  add r6.w, r6.w, l(1.000000)
  sqrt r6.w, r6.w
  add r6.w, r6.w, l(-1.000000)
  mul r6.w, r6.w, l(0.500000)
  mul r7.w, r6.y, r6.y
  mad r8.x, -r6.y, r6.y, l(1.000000)
  mul r5.y, r5.y, r8.x
  div r5.y, r5.y, r7.w
  add r5.y, r5.y, l(1.000000)
  sqrt r5.y, r5.y
  add r5.y, r5.y, l(-1.000000)
  mad r5.y, r5.y, l(0.500000), r6.w
  add r5.y, r5.y, l(1.000000)
  div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.y
  mad r6.w, -cb0[4].y, l(0.080000), l(1.000000)
  add r6.x, -r6.x, l(1.000000)
  mul r7.w, r6.x, r6.x
  mul r7.w, r7.w, r7.w
  mul r6.x, r6.x, r7.w
  mad r6.x, r6.w, r6.x, r3.w
  mul r5.y, r5.y, r5.z
  mul r5.y, r6.x, r5.y
  mul r5.z, r1.z, r6.y
  mul r5.z, r5.z, l(4.000000)
  max r5.z, r5.z, l(0.000000)
  div r5.y, r5.y, r5.z
  mul r5.y, r6.y, r5.y
  mul r4.w, r4.w, r5.y
  mul r6.xyw, r4.xxxx, cb0[7].xyxz
  mul r8.xyz, r5.xxxx, r6.xywx
  mul r8.xyz, r4.wwww, r8.xyzx
  mul r4.x, r5.w, l(0.523599)
  mul r4.yz, r4.yyzy, l(0.000000, 1047.000000, 523.500000, 0.000000)
  div r4.xy, r4.yzyy, r4.xxxx
  mad r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r4.xy, r4.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mad r4.zw, v1.xxxy, l(0.000000, 0.000000, 3.555556, 2.000000), l(0.000000, 0.000000, -1.777778, -1.000000)
  mad r4.xy, -r4.xyxx, l(1.777800, 2.000000, 0.000000, 0.000000), r4.zwzz
  max r4.z, r5.w, l(1.000000)
  sqrt r4.z, r4.z
  mul r4.z, r4.z, l(3.125000)
  mul r4.xy, r4.zzzz, r4.xyxx
  mul r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  mad r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r5.y, r4.xyxx, t6.yxzw, s0
  add r5.y, -r5.y, l(1.000000)
  lt r5.z, r1.w, r5.w
  mul r5.w, r5.y, l(0.100000)
  movc r5.y, r5.z, r5.w, r5.y
  lt r5.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r4.xxxy
  or r5.z, r5.w, r5.z
  lt r4.xy, r4.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  or r4.x, r4.x, r5.z
  or r4.x, r4.y, r4.x
  movc r4.x, r4.x, l(0), r5.y
  mul r5.yzw, r6.xxyw, cb0[2].yyyy
  mul r5.yzw, r5.yyzw, l(0.000000, 0.033333, 0.033333, 0.033333)
  add r4.y, r6.z, l(1.000000)
  mul_sat r4.y, r4.y, l(0.062500)
  movc r4.y, cb0[3].w, r4.y, l(1.000000)
  mul r5.yzw, r4.yyyy, r5.yyzw
  dp2 r4.y, r4.zwzz, r4.zwzz
  div r4.yzw, r5.yyzw, r4.yyyy
  movc r4.yzw, cb0[4].wwww, r4.yyzw, l(0,0,0,0)
else 
  mov r7.xyz, l(0,0,0,0)
  mov r8.xyz, l(0,0,0,0)
  mov r5.x, l(0)
  mov r4.xyzw, l(0,0,0,0)
endif 
if_nz cb0[8].y
  mul r5.y, cb0[11].w, l(1000.000000)
  add r6.xyz, cb0[9].xyzx, cb0[10].xyzx
  add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
  mul r6.x, r6.z, r6.x
  mul r6.y, r6.z, -r6.y
  mul r9.xyz, r6.xyzx, l(1861.333496, 523.500000, 1000.000000, 0.000000)
  if_nz cb0[1].x
    mul r5.z, r6.z, l(523.598816)
    mul r6.zw, r6.xxxy, l(0.000000, 0.000000, 1047.000000, 523.500000)
    div r5.zw, r6.zzzw, r5.zzzz
    mad r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t2.yzxw, s0, l(0.000000)
    mad r5.w, -r5.z, l(999.000000), l(1000.000000)
    div r5.z, r5.z, r5.w
    mad r5.z, r5.z, l(1000.000000), l(-5.000000)
    min r9.w, r5.z, r9.z
  else 
    mov r9.w, r9.z
  endif 
  mad r10.xyz, r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), -r9.xywx
  dp3 r5.z, r10.xyzx, r10.xyzx
  div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mad r10.xyw, -r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), r9.xyxw
  dp3 r5.w, r10.xywx, r10.xywx
  rsq r5.w, r5.w
  mul r11.xyz, r5.wwww, r10.xywx
  mad r10.xyw, r10.xyxw, r5.wwww, -r3.xyxz
  dp3 r5.w, r10.xywx, r10.xywx
  rsq r5.w, r5.w
  mul r10.xyw, r5.wwww, r10.xyxw
  dp3 r5.w, r2.xyzx, r10.xywx
  dp3 r6.z, -r3.xyzx, r10.xywx
  dp3 r6.w, r2.xyzx, r11.xyzx
  dp3 r7.w, -r11.xyzx, r2.xyzx
  lt r7.w, l(0.000000), r7.w
  ine r8.w, cb0[8].w, l(0)
  and r8.w, r7.w, r8.w
  if_nz r8.w
    mov x1[0].x, l(16)
    mov x1[1].x, l(48)
    mov x1[2].x, l(256)
    mov r8.w, cb0[1].w
    mov r8.w, x1[r8.w + 0].x
    mul r11.xyzw, v1.xyxy, l(1920.000000, 1080.000000, 245760.000000, 138240.000000)
    ge r12.xyzw, r11.zwzw, -r11.zwzw
    movc r12.xyzw, r12.xyzw, l(128.000000,128.000000,0.007812,0.007812), l(-128.000000,-128.000000,-0.007812,-0.007812)
    mul r10.xy, r11.xyxx, r12.zwzz
    frc r10.xy, r10.xyxx
    mul r9.z, cb0[0].x, l(64.000000)
    ge r9.z, r9.z, -r9.z
    movc r11.xy, r9.zzzz, l(64.000000,0.015625,0,0), l(-64.000000,-0.015625,0,0)
    mul r9.z, r11.y, cb0[0].x
    frc r9.z, r9.z
    mul r9.z, r9.z, r11.x
    mul r11.xy, r9.zzzz, l(8.000000, 0.125000, 0.000000, 0.000000)
    ge r10.w, r11.x, -r11.x
    movc r11.xz, r10.wwww, l(8.000000,0,0.125000,0), l(-8.000000,0,-0.125000,0)
    mul r9.z, r9.z, r11.z
    frc r9.z, r9.z
    mul r9.z, r9.z, r11.x
    ftoi r13.x, r9.z
    round_ni r9.z, r11.y
    mul r10.w, r9.z, l(8.000000)
    ge r10.w, r10.w, -r10.w
    movc r11.xy, r10.wwww, l(8.000000,0.125000,0,0), l(-8.000000,-0.125000,0,0)
    mul r9.z, r9.z, r11.y
    frc r9.z, r9.z
    mul r9.z, r9.z, r11.x
    ftoi r13.y, r9.z
    ishl r11.xy, r13.xyxx, l(7, 7, 0, 0)
    itof r11.xy, r11.xyxx
    mad r10.xy, r12.xyxx, r10.xyxx, r11.xyxx
    mul r10.xy, r10.xyxx, l(0.000977, 0.000977, 0.000000, 0.000000)
    sample_indexable(texture2d)(float,float,float,float) r10.xyw, r10.xyxx, t24.xywz, s1
    add r11.xyzw, r10.xywx, l(-0.500000, -0.500000, -0.500000, 1.000000)
    mul r10.xyw, r11.xyxz, cb0[12].xxxx
    mad r12.xyz, r10.xywx, l(0.300000, 0.300000, 0.300000, 0.000000), r9.xywx
    mul r9.x, r9.w, l(0.523599)
    mul r9.yz, r6.xxyx, l(0.000000, 1047.000000, 523.500000, 0.000000)
    div r9.xy, r9.yzyy, r9.xxxx
    mad r9.xy, r9.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r9.x, r9.xyxx, t2.xyzw, s0, l(0.000000)
    mad r9.y, -r9.x, l(999.000000), l(1000.000000)
    div r9.x, r9.x, r9.y
    ge r9.x, r9.x, r9.w
    if_nz r9.x
      min r12.w, r0.z, r12.z
    else 
      mov r12.w, r12.z
    endif 
    mad r9.xyz, -r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), r12.xywx
    dp3 r10.x, r9.xyzx, r9.xyzx
    rsq r10.x, r10.x
    mul r9.xyz, r9.xyzx, r10.xxxx
    mad r10.xyw, r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), -r12.xyxw
    dp3 r10.x, r10.xywx, r10.xywx
    sqrt r10.x, r10.x
    min r10.x, r10.x, l(1000.000000)
    itof r8.w, r8.w
    div r10.x, r10.x, r8.w
    mul r11.xyz, r9.xyzx, r10.xxxx
    mad r11.xyz, r11.xyzx, r11.wwww, r0.xywx
    mov r10.yw, l(0,0,0,0)
    mov r12.xyz, r11.xyzx
    loop 
      ge r11.w, r10.y, r8.w
      breakc_nz r11.w
      mul r11.w, r12.z, l(0.523599)
      mul r13.xy, r12.xyxx, l(0.562500, 1.000000, 0.000000, 0.000000)
      div r13.xy, r13.xyxx, r11.wwww
      mad r13.xy, r13.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r11.w, r13.xyxx, t2.yzwx, s0, l(0.000000)
      mad r12.w, -r11.w, l(999.000000), l(1000.000000)
      div r11.w, r11.w, r12.w
      mad r11.w, r11.w, l(1000.000000), -r12.z
      lt r12.w, r11.w, l(0.000000)
      lt r11.w, -cb0[2].x, r11.w
      and r11.w, r11.w, r12.w
      if_nz r11.w
        mov r10.w, l(1.000000)
        break 
      endif 
      mad r12.xyz, r9.xyzx, r10.xxxx, r12.xyzx
      add r10.y, r10.y, l(1.000000)
      mov r10.w, l(0)
    endloop 
    add r8.w, -r10.w, l(1.000000)
  else 
    mov r8.w, l(1.000000)
  endif 
  mul r9.x, r5.y, r5.z
  mul r9.xyz, r9.xxxx, cb0[11].xyzx
  add r10.x, -r6.w, l(1.000000)
  mul r9.xyz, r9.xyzx, r10.xxxx
  and r7.w, r7.w, l(0x3f800000)
  mul r9.xyz, r9.xyzx, r7.wwww
  mad r7.xyz, r9.xyzx, r8.wwww, r7.xyzx
  mul r7.w, r2.w, r2.w
  mad r9.x, r5.w, r7.w, -r5.w
  mad r5.w, r9.x, r5.w, l(1.000000)
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, l(3.141593)
  div r5.w, r7.w, r5.w
  mul r9.x, r1.z, r1.z
  mad r9.y, -r1.z, r1.z, l(1.000000)
  mul r9.y, r7.w, r9.y
  div r9.x, r9.y, r9.x
  add r9.x, r9.x, l(1.000000)
  sqrt r9.x, r9.x
  add r9.x, r9.x, l(-1.000000)
  mul r9.x, r9.x, l(0.500000)
  mul r9.y, r6.w, r6.w
  mad r9.z, -r6.w, r6.w, l(1.000000)
  mul r7.w, r7.w, r9.z
  div r7.w, r7.w, r9.y
  add r7.w, r7.w, l(1.000000)
  sqrt r7.w, r7.w
  add r7.w, r7.w, l(-1.000000)
  mad r7.w, r7.w, l(0.500000), r9.x
  add r7.w, r7.w, l(1.000000)
  div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  mad r9.x, -cb0[4].y, l(0.080000), l(1.000000)
  add r6.z, -r6.z, l(1.000000)
  mul r9.y, r6.z, r6.z
  mul r9.y, r9.y, r9.y
  mul r6.z, r6.z, r9.y
  mad r6.z, r9.x, r6.z, r3.w
  mul r5.w, r5.w, r7.w
  mul r5.w, r6.z, r5.w
  mul r6.z, r1.z, r6.w
  mul r6.z, r6.z, l(4.000000)
  max r6.z, r6.z, l(0.000000)
  div r5.w, r5.w, r6.z
  mul r5.w, r6.w, r5.w
  mul r5.z, r5.z, r5.w
  mul r9.xyz, r5.yyyy, cb0[11].xyzx
  mul r10.xyw, r8.wwww, r9.xyxz
  mad r8.xyz, r5.zzzz, r10.xywx, r8.xyzx
  mul r5.y, r9.w, l(0.523599)
  mul r5.zw, r6.xxxy, l(0.000000, 0.000000, 1047.000000, 523.500000)
  div r5.yz, r5.zzwz, r5.yyyy
  mad r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  mad r5.yz, r5.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad r6.xy, v1.xyxx, l(3.555556, 2.000000, 0.000000, 0.000000), l(-1.777778, -1.000000, 0.000000, 0.000000)
  mad r5.yz, -r5.yyzy, l(0.000000, 1.777800, 2.000000, 0.000000), r6.xxyx
  max r5.w, r9.w, l(1.000000)
  sqrt r5.w, r5.w
  mul r5.w, r5.w, l(3.125000)
  mul r5.yz, r5.wwww, r5.yyzy
  mul r6.xy, r5.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r5.w, r5.yzyy, t6.yzwx, s0
  add r5.w, -r5.w, l(1.000000)
  lt r6.z, r1.w, r9.w
  mul r6.w, r5.w, l(0.100000)
  movc r5.w, r6.z, r6.w, r5.w
  lt r6.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r5.yyyz
  or r6.z, r6.w, r6.z
  lt r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  or r5.y, r5.y, r6.z
  or r5.y, r5.z, r5.y
  movc r5.y, r5.y, l(0), r5.w
  add r4.x, r4.x, r5.y
  mul r5.yzw, r9.xxyz, cb0[2].yyyy
  mul r5.yzw, r5.yyzw, l(0.000000, 0.033333, 0.033333, 0.033333)
  add r6.z, r10.z, l(1.000000)
  mul_sat r6.z, r6.z, l(0.062500)
  movc r6.z, cb0[3].w, r6.z, l(1.000000)
  mul r5.yzw, r5.yyzw, r6.zzzz
  dp2 r6.x, r6.xyxx, r6.xyxx
  div r5.yzw, r5.yyzw, r6.xxxx
  add r5.yzw, r4.yyzw, r5.yyzw
  movc r4.yzw, cb0[8].zzzz, r5.yyzw, r4.yyzw
  add r5.x, r5.x, r8.w
endif 
if_nz cb0[12].y
  mul r5.y, cb0[15].w, l(1000.000000)
  add r6.xyz, cb0[13].xyzx, cb0[14].xyzx
  add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
  mul r6.x, r6.z, r6.x
  mul r6.y, r6.z, -r6.y
  mul r9.xyz, r6.xyzx, l(1861.333496, 523.500000, 1000.000000, 0.000000)
  if_nz cb0[1].x
    mul r5.z, r6.z, l(523.598816)
    mul r6.zw, r6.xxxy, l(0.000000, 0.000000, 1047.000000, 523.500000)
    div r5.zw, r6.zzzw, r5.zzzz
    mad r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t2.yzxw, s0, l(0.000000)
    mad r5.w, -r5.z, l(999.000000), l(1000.000000)
    div r5.z, r5.z, r5.w
    mad r5.z, r5.z, l(1000.000000), l(-5.000000)
    min r9.w, r5.z, r9.z
  else 
    mov r9.w, r9.z
  endif 
  mad r10.xyz, r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), -r9.xywx
  dp3 r5.z, r10.xyzx, r10.xyzx
  div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mad r10.xyw, -r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), r9.xyxw
  dp3 r5.w, r10.xywx, r10.xywx
  rsq r5.w, r5.w
  mul r11.xyz, r5.wwww, r10.xywx
  mad r10.xyw, r10.xyxw, r5.wwww, -r3.xyxz
  dp3 r5.w, r10.xywx, r10.xywx
  rsq r5.w, r5.w
  mul r10.xyw, r5.wwww, r10.xyxw
  dp3 r5.w, r2.xyzx, r10.xywx
  dp3 r6.z, -r3.xyzx, r10.xywx
  dp3 r6.w, r2.xyzx, r11.xyzx
  dp3 r7.w, -r11.xyzx, r2.xyzx
  lt r7.w, l(0.000000), r7.w
  ine r8.w, cb0[12].w, l(0)
  and r8.w, r7.w, r8.w
  if_nz r8.w
    mov x2[0].x, l(16)
    mov x2[1].x, l(48)
    mov x2[2].x, l(256)
    mov r8.w, cb0[1].w
    mov r8.w, x2[r8.w + 0].x
    mul r11.xyzw, v1.xyxy, l(1920.000000, 1080.000000, 245760.000000, 138240.000000)
    ge r12.xyzw, r11.zwzw, -r11.zwzw
    movc r12.xyzw, r12.xyzw, l(128.000000,128.000000,0.007812,0.007812), l(-128.000000,-128.000000,-0.007812,-0.007812)
    mul r10.xy, r11.xyxx, r12.zwzz
    frc r10.xy, r10.xyxx
    mul r9.z, cb0[0].x, l(64.000000)
    ge r9.z, r9.z, -r9.z
    movc r11.xy, r9.zzzz, l(64.000000,0.015625,0,0), l(-64.000000,-0.015625,0,0)
    mul r9.z, r11.y, cb0[0].x
    frc r9.z, r9.z
    mul r9.z, r9.z, r11.x
    mul r11.xy, r9.zzzz, l(8.000000, 0.125000, 0.000000, 0.000000)
    ge r10.w, r11.x, -r11.x
    movc r11.xz, r10.wwww, l(8.000000,0,0.125000,0), l(-8.000000,0,-0.125000,0)
    mul r9.z, r9.z, r11.z
    frc r9.z, r9.z
    mul r9.z, r9.z, r11.x
    ftoi r13.x, r9.z
    round_ni r9.z, r11.y
    mul r10.w, r9.z, l(8.000000)
    ge r10.w, r10.w, -r10.w
    movc r11.xy, r10.wwww, l(8.000000,0.125000,0,0), l(-8.000000,-0.125000,0,0)
    mul r9.z, r9.z, r11.y
    frc r9.z, r9.z
    mul r9.z, r9.z, r11.x
    ftoi r13.y, r9.z
    ishl r11.xy, r13.xyxx, l(7, 7, 0, 0)
    itof r11.xy, r11.xyxx
    mad r10.xy, r12.xyxx, r10.xyxx, r11.xyxx
    mul r10.xy, r10.xyxx, l(0.000977, 0.000977, 0.000000, 0.000000)
    sample_indexable(texture2d)(float,float,float,float) r10.xyw, r10.xyxx, t24.xywz, s1
    add r11.xyzw, r10.xywx, l(-0.500000, -0.500000, -0.500000, 1.000000)
    mul r10.xyw, r11.xyxz, cb0[16].xxxx
    mad r12.xyz, r10.xywx, l(0.300000, 0.300000, 0.300000, 0.000000), r9.xywx
    mul r9.x, r9.w, l(0.523599)
    mul r9.yz, r6.xxyx, l(0.000000, 1047.000000, 523.500000, 0.000000)
    div r9.xy, r9.yzyy, r9.xxxx
    mad r9.xy, r9.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r9.x, r9.xyxx, t2.xyzw, s0, l(0.000000)
    mad r9.y, -r9.x, l(999.000000), l(1000.000000)
    div r9.x, r9.x, r9.y
    ge r9.x, r9.x, r9.w
    if_nz r9.x
      min r12.w, r0.z, r12.z
    else 
      mov r12.w, r12.z
    endif 
    mad r9.xyz, -r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), r12.xywx
    dp3 r10.x, r9.xyzx, r9.xyzx
    rsq r10.x, r10.x
    mul r9.xyz, r9.xyzx, r10.xxxx
    mad r10.xyw, r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), -r12.xyxw
    dp3 r10.x, r10.xywx, r10.xywx
    sqrt r10.x, r10.x
    min r10.x, r10.x, l(1000.000000)
    itof r8.w, r8.w
    div r10.x, r10.x, r8.w
    mul r11.xyz, r9.xyzx, r10.xxxx
    mad r11.xyz, r11.xyzx, r11.wwww, r0.xywx
    mov r10.yw, l(0,0,0,0)
    mov r12.xyz, r11.xyzx
    loop 
      ge r11.w, r10.y, r8.w
      breakc_nz r11.w
      mul r11.w, r12.z, l(0.523599)
      mul r13.xy, r12.xyxx, l(0.562500, 1.000000, 0.000000, 0.000000)
      div r13.xy, r13.xyxx, r11.wwww
      mad r13.xy, r13.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r11.w, r13.xyxx, t2.yzwx, s0, l(0.000000)
      mad r12.w, -r11.w, l(999.000000), l(1000.000000)
      div r11.w, r11.w, r12.w
      mad r11.w, r11.w, l(1000.000000), -r12.z
      lt r12.w, r11.w, l(0.000000)
      lt r11.w, -cb0[2].x, r11.w
      and r11.w, r11.w, r12.w
      if_nz r11.w
        mov r10.w, l(1.000000)
        break 
      endif 
      mad r12.xyz, r9.xyzx, r10.xxxx, r12.xyzx
      add r10.y, r10.y, l(1.000000)
      mov r10.w, l(0)
    endloop 
    add r8.w, -r10.w, l(1.000000)
  else 
    mov r8.w, l(1.000000)
  endif 
  mul r9.x, r5.y, r5.z
  mul r9.xyz, r9.xxxx, cb0[15].xyzx
  add r10.x, -r6.w, l(1.000000)
  mul r9.xyz, r9.xyzx, r10.xxxx
  and r7.w, r7.w, l(0x3f800000)
  mul r9.xyz, r9.xyzx, r7.wwww
  mad r7.xyz, r9.xyzx, r8.wwww, r7.xyzx
  mul r7.w, r2.w, r2.w
  mad r9.x, r5.w, r7.w, -r5.w
  mad r5.w, r9.x, r5.w, l(1.000000)
  mul r5.w, r5.w, r5.w
  mul r5.w, r5.w, l(3.141593)
  div r5.w, r7.w, r5.w
  mul r9.x, r1.z, r1.z
  mad r9.y, -r1.z, r1.z, l(1.000000)
  mul r9.y, r7.w, r9.y
  div r9.x, r9.y, r9.x
  add r9.x, r9.x, l(1.000000)
  sqrt r9.x, r9.x
  add r9.x, r9.x, l(-1.000000)
  mul r9.x, r9.x, l(0.500000)
  mul r9.y, r6.w, r6.w
  mad r9.z, -r6.w, r6.w, l(1.000000)
  mul r7.w, r7.w, r9.z
  div r7.w, r7.w, r9.y
  add r7.w, r7.w, l(1.000000)
  sqrt r7.w, r7.w
  add r7.w, r7.w, l(-1.000000)
  mad r7.w, r7.w, l(0.500000), r9.x
  add r7.w, r7.w, l(1.000000)
  div r7.w, l(1.000000, 1.000000, 1.000000, 1.000000), r7.w
  mad r9.x, -cb0[4].y, l(0.080000), l(1.000000)
  add r6.z, -r6.z, l(1.000000)
  mul r9.y, r6.z, r6.z
  mul r9.y, r9.y, r9.y
  mul r6.z, r6.z, r9.y
  mad r6.z, r9.x, r6.z, r3.w
  mul r5.w, r5.w, r7.w
  mul r5.w, r6.z, r5.w
  mul r6.z, r1.z, r6.w
  mul r6.z, r6.z, l(4.000000)
  max r6.z, r6.z, l(0.000000)
  div r5.w, r5.w, r6.z
  mul r5.w, r6.w, r5.w
  mul r5.z, r5.z, r5.w
  mul r9.xyz, r5.yyyy, cb0[15].xyzx
  mul r10.xyw, r8.wwww, r9.xyxz
  mad r8.xyz, r5.zzzz, r10.xywx, r8.xyzx
  mul r5.y, r9.w, l(0.523599)
  mul r5.zw, r6.xxxy, l(0.000000, 0.000000, 1047.000000, 523.500000)
  div r5.yz, r5.zzwz, r5.yyyy
  mad r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  mad r5.yz, r5.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad r6.xy, v1.xyxx, l(3.555556, 2.000000, 0.000000, 0.000000), l(-1.777778, -1.000000, 0.000000, 0.000000)
  mad r5.yz, -r5.yyzy, l(0.000000, 1.777800, 2.000000, 0.000000), r6.xxyx
  max r5.w, r9.w, l(1.000000)
  sqrt r5.w, r5.w
  mul r5.w, r5.w, l(3.125000)
  mul r5.yz, r5.wwww, r5.yyzy
  mul r6.xy, r5.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r5.yz, r5.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r5.w, r5.yzyy, t6.yzwx, s0
  add r5.w, -r5.w, l(1.000000)
  lt r6.z, r1.w, r9.w
  mul r6.w, r5.w, l(0.100000)
  movc r5.w, r6.z, r6.w, r5.w
  lt r6.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r5.yyyz
  or r6.z, r6.w, r6.z
  lt r5.yz, r5.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  or r5.y, r5.y, r6.z
  or r5.y, r5.z, r5.y
  movc r5.y, r5.y, l(0), r5.w
  add r4.x, r4.x, r5.y
  mul r5.yzw, r9.xxyz, cb0[2].yyyy
  mul r5.yzw, r5.yyzw, l(0.000000, 0.033333, 0.033333, 0.033333)
  add r6.z, r10.z, l(1.000000)
  mul_sat r6.z, r6.z, l(0.062500)
  movc r6.z, cb0[3].w, r6.z, l(1.000000)
  mul r5.yzw, r5.yyzw, r6.zzzz
  dp2 r6.x, r6.xyxx, r6.xyxx
  div r5.yzw, r5.yyzw, r6.xxxx
  add r5.yzw, r4.yyzw, r5.yyzw
  movc r4.yzw, cb0[12].zzzz, r5.yyzw, r4.yyzw
  add r5.x, r5.x, r8.w
endif 
if_nz cb0[16].y
  mul r5.y, cb0[19].w, l(1000.000000)
  add r6.xyz, cb0[17].xyzx, cb0[18].xyzx
  add r6.xyz, r6.xyzx, l(-0.500000, -0.500000, -0.000000, 0.000000)
  mul r6.x, r6.z, r6.x
  mul r6.y, r6.z, -r6.y
  mul r9.xyz, r6.xyzx, l(1861.333496, 523.500000, 1000.000000, 0.000000)
  if_nz cb0[1].x
    mul r5.z, r6.z, l(523.598816)
    mul r6.zw, r6.xxxy, l(0.000000, 0.000000, 1047.000000, 523.500000)
    div r5.zw, r6.zzzw, r5.zzzz
    mad r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.z, r5.zwzz, t2.yzxw, s0, l(0.000000)
    mad r5.w, -r5.z, l(999.000000), l(1000.000000)
    div r5.z, r5.z, r5.w
    mad r5.z, r5.z, l(1000.000000), l(-5.000000)
    min r9.w, r5.z, r9.z
  else 
    mov r9.w, r9.z
  endif 
  mad r10.xyz, r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), -r9.xywx
  dp3 r5.z, r10.xyzx, r10.xyzx
  div r5.z, l(1.000000, 1.000000, 1.000000, 1.000000), r5.z
  mad r10.xyw, -r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), r9.xyxw
  dp3 r5.w, r10.xywx, r10.xywx
  rsq r5.w, r5.w
  mul r11.xyz, r5.wwww, r10.xywx
  mad r10.xyw, r10.xyxw, r5.wwww, -r3.xyxz
  dp3 r5.w, r10.xywx, r10.xywx
  rsq r5.w, r5.w
  mul r10.xyw, r5.wwww, r10.xyxw
  dp3 r5.w, r2.xyzx, r10.xywx
  dp3 r3.x, -r3.xyzx, r10.xywx
  dp3 r3.y, r2.xyzx, r11.xyzx
  dp3 r2.x, -r11.xyzx, r2.xyzx
  lt r2.x, l(0.000000), r2.x
  ine r2.y, cb0[16].w, l(0)
  and r2.y, r2.x, r2.y
  if_nz r2.y
    mov x3[0].x, l(16)
    mov x3[1].x, l(48)
    mov x3[2].x, l(256)
    mov r2.y, cb0[1].w
    mov r2.y, x3[r2.y + 0].x
    mul r11.xyzw, v1.xyxy, l(1920.000000, 1080.000000, 245760.000000, 138240.000000)
    ge r12.xyzw, r11.zwzw, -r11.zwzw
    movc r12.xyzw, r12.xyzw, l(128.000000,128.000000,0.007812,0.007812), l(-128.000000,-128.000000,-0.007812,-0.007812)
    mul r6.zw, r11.xxxy, r12.zzzw
    frc r6.zw, r6.zzzw
    mul r2.z, cb0[0].x, l(64.000000)
    ge r2.z, r2.z, -r2.z
    movc r10.xy, r2.zzzz, l(64.000000,0.015625,0,0), l(-64.000000,-0.015625,0,0)
    mul r2.z, r10.y, cb0[0].x
    frc r2.z, r2.z
    mul r2.z, r2.z, r10.x
    mul r10.xy, r2.zzzz, l(8.000000, 0.125000, 0.000000, 0.000000)
    ge r3.z, r10.x, -r10.x
    movc r10.xw, r3.zzzz, l(8.000000,0,0,0.125000), l(-8.000000,0,0,-0.125000)
    mul r2.z, r2.z, r10.w
    frc r2.z, r2.z
    mul r2.z, r2.z, r10.x
    ftoi r11.x, r2.z
    round_ni r2.z, r10.y
    mul r3.z, r2.z, l(8.000000)
    ge r3.z, r3.z, -r3.z
    movc r10.xy, r3.zzzz, l(8.000000,0.125000,0,0), l(-8.000000,-0.125000,0,0)
    mul r2.z, r2.z, r10.y
    frc r2.z, r2.z
    mul r2.z, r2.z, r10.x
    ftoi r11.y, r2.z
    ishl r10.xy, r11.xyxx, l(7, 7, 0, 0)
    itof r10.xy, r10.xyxx
    mad r6.zw, r12.xxxy, r6.zzzw, r10.xxxy
    mul r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.000977, 0.000977)
    sample_indexable(texture2d)(float,float,float,float) r10.xyw, r6.zwzz, t24.xywz, s1
    add r11.xyzw, r10.xywx, l(-0.500000, -0.500000, -0.500000, 1.000000)
    mul r10.xyw, r11.xyxz, cb0[20].xxxx
    mad r12.xyz, r10.xywx, l(0.300000, 0.300000, 0.300000, 0.000000), r9.xywx
    mul r2.z, r9.w, l(0.523599)
    mul r6.zw, r6.xxxy, l(0.000000, 0.000000, 1047.000000, 523.500000)
    div r6.zw, r6.zzzw, r2.zzzz
    mad r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.z, r6.zwzz, t2.yzxw, s0, l(0.000000)
    mad r3.z, -r2.z, l(999.000000), l(1000.000000)
    div r2.z, r2.z, r3.z
    ge r2.z, r2.z, r9.w
    if_nz r2.z
      min r12.w, r0.z, r12.z
    else 
      mov r12.w, r12.z
    endif 
    mad r9.xyz, -r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), r12.xywx
    dp3 r0.z, r9.xyzx, r9.xyzx
    rsq r0.z, r0.z
    mul r9.xyz, r0.zzzz, r9.xyzx
    mad r10.xyw, r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), -r12.xyxw
    dp3 r0.z, r10.xywx, r10.xywx
    sqrt r0.z, r0.z
    min r0.z, r0.z, l(1000.000000)
    itof r1.x, r2.y
    div r0.z, r0.z, r1.x
    mul r10.xyw, r0.zzzz, r9.xyxz
    mad r0.xyw, r10.xyxw, r11.wwww, r0.xyxw
    mov r1.y, l(0)
    mov r2.y, l(0)
    mov r11.xyz, r0.xywx
    loop 
      ge r2.z, r1.y, r1.x
      breakc_nz r2.z
      mul r2.z, r11.z, l(0.523599)
      mul r6.zw, r11.xxxy, l(0.000000, 0.000000, 0.562500, 1.000000)
      div r6.zw, r6.zzzw, r2.zzzz
      mad r6.zw, r6.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_l_indexable(texture2d)(float,float,float,float) r2.z, r6.zwzz, t2.yzxw, s0, l(0.000000)
      mad r3.z, -r2.z, l(999.000000), l(1000.000000)
      div r2.z, r2.z, r3.z
      mad r2.z, r2.z, l(1000.000000), -r11.z
      lt r3.z, r2.z, l(0.000000)
      lt r2.z, -cb0[2].x, r2.z
      and r2.z, r2.z, r3.z
      if_nz r2.z
        mov r2.y, l(1.000000)
        break 
      endif 
      mad r11.xyz, r9.xyzx, r0.zzzz, r11.xyzx
      add r1.y, r1.y, l(1.000000)
      mov r2.y, l(0)
    endloop 
    add r0.x, -r2.y, l(1.000000)
  else 
    mov r0.x, l(1.000000)
  endif 
  mul r0.y, r5.y, r5.z
  mul r0.yzw, r0.yyyy, cb0[19].xxyz
  add r1.x, -r3.y, l(1.000000)
  mul r0.yzw, r0.yyzw, r1.xxxx
  and r1.x, r2.x, l(0x3f800000)
  mul r0.yzw, r0.yyzw, r1.xxxx
  mad r7.xyz, r0.yzwy, r0.xxxx, r7.xyzx
  mul r0.y, r2.w, r2.w
  mad r0.z, r5.w, r0.y, -r5.w
  mad r0.z, r0.z, r5.w, l(1.000000)
  mul r0.z, r0.z, r0.z
  mul r0.z, r0.z, l(3.141593)
  div r0.z, r0.y, r0.z
  mul r0.w, r1.z, r1.z
  mad r1.x, -r1.z, r1.z, l(1.000000)
  mul r1.x, r0.y, r1.x
  div r0.w, r1.x, r0.w
  add r0.w, r0.w, l(1.000000)
  sqrt r0.w, r0.w
  add r0.w, r0.w, l(-1.000000)
  mul r0.w, r0.w, l(0.500000)
  mul r1.x, r3.y, r3.y
  mad r1.y, -r3.y, r3.y, l(1.000000)
  mul r0.y, r0.y, r1.y
  div r0.y, r0.y, r1.x
  add r0.y, r0.y, l(1.000000)
  sqrt r0.y, r0.y
  add r0.y, r0.y, l(-1.000000)
  mad r0.y, r0.y, l(0.500000), r0.w
  add r0.y, r0.y, l(1.000000)
  div r0.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  mad r0.w, -cb0[4].y, l(0.080000), l(1.000000)
  add r1.x, -r3.x, l(1.000000)
  mul r1.y, r1.x, r1.x
  mul r1.y, r1.y, r1.y
  mul r1.x, r1.y, r1.x
  mad r0.w, r0.w, r1.x, r3.w
  mul r0.y, r0.y, r0.z
  mul r0.y, r0.w, r0.y
  mul r0.z, r1.z, r3.y
  mul r0.z, r0.z, l(4.000000)
  max r0.z, r0.z, l(0.000000)
  div r0.y, r0.y, r0.z
  mul r0.y, r3.y, r0.y
  mul r0.y, r5.z, r0.y
  mul r1.xyz, r5.yyyy, cb0[19].xyzx
  mul r2.xyz, r0.xxxx, r1.xyzx
  mad r8.xyz, r0.yyyy, r2.xyzx, r8.xyzx
  mul r0.y, r9.w, l(0.523599)
  mul r0.zw, r6.xxxy, l(0.000000, 0.000000, 1047.000000, 523.500000)
  div r0.yz, r0.zzwz, r0.yyyy
  mad r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  mad r0.yz, r0.yyzy, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, -1.000000, -1.000000, 0.000000)
  mad r2.xy, v1.xyxx, l(3.555556, 2.000000, 0.000000, 0.000000), l(-1.777778, -1.000000, 0.000000, 0.000000)
  mad r0.yz, -r0.yyzy, l(0.000000, 1.777800, 2.000000, 0.000000), r2.xxyx
  max r0.w, r9.w, l(1.000000)
  sqrt r0.w, r0.w
  mul r0.w, r0.w, l(3.125000)
  mul r0.yz, r0.wwww, r0.yyzy
  mul r2.xy, r0.yzyy, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r0.w, r0.yzyy, t6.yzwx, s0
  add r0.w, -r0.w, l(1.000000)
  lt r1.w, r1.w, r9.w
  mul r2.z, r0.w, l(0.100000)
  movc r0.w, r1.w, r2.z, r0.w
  lt r2.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r0.yyyz
  or r1.w, r2.w, r2.z
  lt r0.yz, r0.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
  or r0.y, r0.y, r1.w
  or r0.y, r0.z, r0.y
  movc r0.y, r0.y, l(0), r0.w
  add r4.x, r0.y, r4.x
  mul r0.yzw, r1.xxyz, cb0[2].yyyy
  mul r0.yzw, r0.yyzw, l(0.000000, 0.033333, 0.033333, 0.033333)
  add r1.x, r10.z, l(1.000000)
  mul_sat r1.x, r1.x, l(0.062500)
  movc r1.x, cb0[3].w, r1.x, l(1.000000)
  mul r0.yzw, r0.yyzw, r1.xxxx
  dp2 r1.x, r2.xyxx, r2.xyxx
  div r0.yzw, r0.yyzw, r1.xxxx
  add r0.yzw, r0.yyzw, r4.yyzw
  movc r4.yzw, cb0[16].zzzz, r0.yyzw, r4.yyzw
  add r5.x, r0.x, r5.x
endif 
mul r0.xyz, r8.xyzx, cb0[4].yyyy
min r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
add r0.xyz, -r0.xyzx, r7.xyzx
add r1.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div o0.xyz, r0.xyzx, r1.xyzx
movc r0.x, cb0[0].w, l(1.000000), l(0)
mul o1.w, r0.x, r4.x
mul o1.xyz, r4.yzwy, cb0[3].xyzx
movc r0.x, cb0[4].z, l(1), l(0)
movc r0.y, cb0[8].y, l(1), l(0)
iadd r0.x, r0.y, r0.x
movc r0.y, cb0[12].y, l(1), l(0)
iadd r0.x, r0.y, r0.x
movc r0.y, cb0[16].y, l(1), l(0)
iadd r0.x, r0.y, r0.x
itof r0.x, r0.x
div o2.x, r5.x, r0.x
ret 
// Approximately 900 instruction slots used
