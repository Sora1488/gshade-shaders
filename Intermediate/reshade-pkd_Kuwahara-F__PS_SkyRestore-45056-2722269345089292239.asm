//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 CFG_KUWAHARA_RADIUS;        // Offset:    0 Size:     8 [unused]
//   float CFG_KUWAHARA_LOD;            // Offset:    8 Size:     4 [unused]
//   bool CFG_KUWAHARA_ROTATION;        // Offset:   12 Size:     4 [unused]
//   bool CFG_KUWAHARA_DEPTHAWARE;      // Offset:   16 Size:     4 [unused]
//   bool CFG_KUWAHARA_DEPTHAWARE_EXCLUDESKY;// Offset:   20 Size:     4
//   int CFG_KUWAHARA_DEPTHAWARE_SKYBLEND_STYLE;// Offset:   24 Size:     4
//   float CFG_KUWAHARA_DEPTHAWARE_SKYBLEND_STRENGTH;// Offset:   28 Size:     4
//   float2 CFG_KUWAHARA_DEPTHAWARE_CURVE;// Offset:   32 Size:     8 [unused]
//   float2 CFG_KUWAHARA_DEPTHAWARE_MINRADIUS;// Offset:   40 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__texSky                       texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
if_z cb0[1].y
  mov o0.xyz, r0.xyzx
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
eq r0.w, r1.w, l(0.000000)
if_nz r0.w
  mov o0.xyz, r0.xyzx
  ret 
endif 
dp3 r0.w, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
dp3 r1.w, r1.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
ge r2.x, r0.w, r1.w
if_nz r2.x
  mov o0.xyz, r0.xyzx
  ret 
else 
  if_z cb0[1].z
    lt r2.x, r0.w, l(0.500000)
    add r2.yz, r0.wwww, l(0.000000, -1.000000, 0.300000, 0.000000)
    movc r2.x, r2.x, |r2.y|, r2.z
    lt r2.y, r1.w, l(0.500000)
    add r2.zw, r1.wwww, l(0.000000, 0.000000, -1.000000, 0.300000)
    movc r2.y, r2.y, |r2.z|, r2.w
    lt r2.x, r2.y, r2.x
    movc r2.x, r2.x, l(0.020000), l(0.980000)
  else 
    lt r2.y, r0.w, r1.w
    movc r2.y, r2.y, r0.w, r1.w
    ieq r2.zw, cb0[1].zzzz, l(0, 0, 1, 2)
    lt r3.x, r1.w, r0.w
    movc r0.w, r3.x, r0.w, r1.w
    movc r0.w, r2.w, r0.w, cb0[1].w
    movc r2.x, r2.z, r2.y, r0.w
  endif 
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad o0.xyz, r2.xxxx, r1.xyzx, r0.xyzx
  ret 
endif 
ret 
// Approximately 41 instruction slots used
