//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__Stats__shared_texStats       texture  float4          2d             t4      1 
// __V__Stats__shared_texStatsAvgColor    texture  float4          2d             t6      1 
// __V__Stats__shared_texStatsAvgLuma    texture  float4          2d             t8      1 
// __V__Stats__shared_texStatsAvgColorTemp    texture  float4          2d            t10      1 
// __V__texAdaptiveTintDebug         texture  float4          2d            t12      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 10
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t4.xyzw, s0
dp3 r0.x, r0.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
ld_indexable(texture2d)(float,float,float,float) r0.y, l(0, 0, 0, 0), t8.yxzw
mad_sat r0.zw, r0.yyyy, l(0.000000, 0.000000, 1.000000, -1.000000), l(0.000000, 0.000000, 0.000000, 2.000000)
max r0.x, r0.z, r0.x
min r0.x, r0.w, r0.x
max r0.x, r0.z, r0.x
min r0.x, r0.w, r0.x
add r0.x, -r0.z, r0.x
add r0.z, -r0.z, r0.w
lt r0.w, |r0.z|, l(0.000001)
movc r0.z, r0.w, l(0.000001), r0.z
div_sat r0.x, r0.x, r0.z
ld_indexable(texture2d)(float,float,float,float) r0.z, l(0, 0, 0, 0), t10.yzxw
add r0.z, r0.z, r0.z
max r0.z, r0.z, l(-0.595700)
min r0.z, r0.z, l(0.595700)
add r0.z, r0.z, l(0.595700)
resinfo_indexable(texture2d)(float,float,float,float)_uint r1.xy, l(0), t12.xyzw
imin r2.xyzw, r1.xyxy, l(10, 260, 470, 10)
iadd r3.xyzw, r1.xyxy, -r2.xyzw
itof r1.xyzw, r1.xyxy
imin r3.xyzw, r3.xyzw, l(0, 10, 10, 0)
itof r4.xyzw, r3.yxwz
itof r5.xyzw, r2.xyzw
div r4.xyzw, r4.xyzw, r5.yxwz
div r5.xyzw, r5.xyzw, r1.xyzw
mad r0.zw, r0.zzzz, l(0.000000, 0.000000, 0.839349, 0.839349), r4.xxxy
mad r0.w, -r0.w, r5.x, v1.x
mov r0.w, |r0.w|
deriv_rtx_coarse r6.x, r0.w
deriv_rty_coarse r6.y, r0.w
dp2 r6.x, r6.xyxx, r6.xyxx
sqrt r6.x, r6.x
add r6.y, r6.x, l(0.002000)
add r6.x, -r6.x, l(0.002000)
add r6.y, -r6.x, r6.y
add r0.w, r0.w, -r6.x
div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r6.y
mul_sat r0.w, r0.w, r6.x
mad r6.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r6.x
div r6.xy, v1.xxxx, r5.xzxx
add r6.xy, -r4.ywyy, r6.xyxx
mad r6.xzw, r6.xxxx, l(-1.000000, 0.000000, 0.000000, 1.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
add r7.xyz, r6.yyyy, l(-1.000000, -0.000000, -1.000000, 0.000000)
mul r6.xyz, r0.wwww, r6.xzwx
add r0.w, -v1.y, l(1.000000)
mad r0.z, -r0.z, r5.y, r0.w
mov r0.z, |r0.z|
deriv_rtx_coarse r8.x, r0.z
deriv_rty_coarse r8.y, r0.z
dp2 r4.y, r8.xyxx, r8.xyxx
sqrt r4.y, r4.y
add r5.x, r4.y, l(0.002000)
add r4.y, -r4.y, l(0.002000)
add r5.x, -r4.y, r5.x
add r0.z, r0.z, -r4.y
div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.x
mul_sat r0.z, r0.z, r4.y
mad r4.y, r0.z, l(-2.000000), l(3.000000)
mul r0.z, r0.z, r0.z
mul r0.z, r0.z, r4.y
div r5.xy, r0.wwww, r5.ywyy
add r4.xy, -r4.xzxx, r5.xyxx
add r4.zw, r0.yyyy, r4.zzzw
mad r8.xyz, r4.xxxx, l(-1.000000, 0.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
add r9.xyz, r4.yyyy, l(-1.000000, -0.000000, -1.000000, 0.000000)
mul r8.xyz, r0.zzzz, r8.xyzx
ige r0.yz, r2.yywy, r2.xxzx
iadd r2.xyzw, r2.xyzw, r3.xyzw
movc r6.xyz, r0.yyyy, r8.xyzx, r6.xyzx
mad r8.xyzw, v1.xyxy, l(1.000000, -1.000000, 1.000000, -1.000000), l(0.000000, 1.000000, 0.000000, 1.000000)
mul r1.xyzw, r1.xyzw, r8.xyzw
ftoi r1.xyzw, r1.xyzw
ige r3.xyzw, r1.zwzw, r3.xyzw
ige r1.xyzw, r2.xyzw, r1.xyzw
and r2.xyz, r1.xzxx, r3.xzxx
and r1.xyz, r1.ywwy, r2.xyzx
and r1.xyz, r3.ywwy, r1.xyzx
movc r2.xyz, r1.xxxx, r6.xyzx, r0.xxxx
mad r0.x, -r4.z, r5.w, r0.w
mad r0.y, -r4.w, r5.z, v1.x
mov r0.xy, |r0.xyxx|
deriv_rtx_coarse r3.x, r0.x
deriv_rty_coarse r3.y, r0.x
dp2 r1.x, r3.xyxx, r3.xyxx
sqrt r1.x, r1.x
add r1.w, r1.x, l(0.002000)
add r1.x, -r1.x, l(0.002000)
add r1.w, -r1.x, r1.w
add r0.x, r0.x, -r1.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul_sat r0.x, r0.x, r1.x
mad r1.x, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r1.x
mad r3.xyz, r0.xxxx, r9.xyzx, l(1.000000, 0.000000, 1.000000, 0.000000)
deriv_rtx_coarse r4.x, r0.y
deriv_rty_coarse r4.y, r0.y
dp2 r0.x, r4.xyxx, r4.xyxx
sqrt r0.x, r0.x
add r1.x, -r0.x, l(0.002000)
add r0.x, r0.x, l(0.002000)
add r0.xy, r0.xyxx, -r1.xxxx
div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
mul_sat r0.x, r0.x, r0.y
mad r0.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.y
mad r4.xyz, r0.xxxx, r7.xyzx, l(1.000000, 0.000000, 1.000000, 0.000000)
movc r0.xyz, r0.zzzz, r3.xyzx, r4.xyzx
movc r0.xyz, r1.yyyy, r0.xyzx, r2.xyzx
ld_indexable(texture2d)(float,float,float,float) r1.xyw, l(0, 0, 0, 0), t6.xywz
movc r0.xyz, r1.zzzz, r1.xywx, r0.xyzx
add r0.xyz, r0.xyzx, l(-1.000000, -0.000000, -0.000000, 0.000000)
mad_sat r1.xy, v1.xxxx, l(-1.000000, 1.000000, 0.000000, 0.000000), l(2.000000, 0.000000, 0.000000, 0.000000)
add r1.xy, r0.wwww, -r1.xyxx
mov r1.xy, |r1.xyxx|
deriv_rtx_coarse r2.xy, r1.xyxx
deriv_rty_coarse r2.zw, r1.xxxy
dp2 r0.w, r2.xzxx, r2.xzxx
dp2 r1.z, r2.ywyy, r2.ywyy
sqrt r1.z, r1.z
sqrt r0.w, r0.w
add r1.w, r0.w, l(0.002000)
add r0.w, -r0.w, l(0.002000)
add r1.w, -r0.w, r1.w
add r0.w, -r0.w, r1.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
mul_sat r0.w, r0.w, r1.x
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
mad r0.xyz, r0.wwww, r0.xyzx, l(1.000000, -1.000000, -1.000000, 0.000000)
add r0.w, r1.z, l(0.002000)
add r1.x, -r1.z, l(0.002000)
add r0.w, r0.w, -r1.x
add r1.x, -r1.x, r1.y
div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
mul_sat r0.w, r0.w, r1.x
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
mad o0.xyz, r0.wwww, r0.xyzx, l(0.000000, 1.000000, 1.000000, 0.000000)
ret 
// Approximately 147 instruction slots used
