//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool SEnable_Foreground_Color;     // Offset:    0 Size:     4 [unused]
//   float3 SForeground_Color;          // Offset:    4 Size:    12 [unused]
//   float SForeground_Stage_Opacity;   // Offset:   16 Size:     4 [unused]
//   int SForeground_Tex_Select;        // Offset:   20 Size:     4 [unused]
//   bool SDisable_Background_Processing;// Offset:   24 Size:     4
//   bool SEnable_Background_Color;     // Offset:   28 Size:     4
//   float3 SBackground_Color;          // Offset:   32 Size:    12
//   float SBackground_Stage_Opacity;   // Offset:   44 Size:     4
//   float SBackground_Stage_depth;     // Offset:   48 Size:     4
//   int SBackground_Tex_Select;        // Offset:   52 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__Silhouette_Back_Texture      texture  float4          2d             t4      1 
// __V__Silhouette2_Texture          texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 2
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
add r0.x, -r0.x, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t0.wxyz, s0
lt r0.x, r0.x, cb0[3].x
ine r1.x, cb0[1].w, l(0)
and r1.x, r0.x, r1.x
if_nz r1.x
  add r1.xyz, -r0.yzwy, cb0[2].xyzx
  mad o0.xyz, cb0[2].wwww, r1.xyzx, r0.yzwy
else 
  ine r1.x, cb0[1].z, l(0)
  and r1.x, r0.x, r1.x
  if_nz r1.x
    sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t4.xyzw, s0
    add r1.xyz, -r0.yzwy, r1.xyzx
    mad o0.xyz, cb0[2].wwww, r1.xyzx, r0.yzwy
  else 
    sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t8.xyzw, s0
    mul r1.w, r1.w, cb0[2].w
    add r1.xyz, -r0.yzwy, r1.xyzx
    mad r1.xyz, r1.wwww, r1.xyzx, r0.yzwy
    movc o0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
  endif 
endif 
ret 
// Approximately 27 instruction slots used
