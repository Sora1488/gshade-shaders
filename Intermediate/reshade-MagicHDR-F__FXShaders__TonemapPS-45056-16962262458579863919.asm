//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int _895;                          // Offset:    0 Size:     4 [unused]
//   int _896;                          // Offset:    4 Size:     4 [unused]
//   int _897;                          // Offset:    8 Size:     4 [unused]
//   float InputExposure;               // Offset:   12 Size:     4
//   float Exposure;                    // Offset:   16 Size:     4
//   int InvTonemap;                    // Offset:   20 Size:     4
//   int Tonemap;                       // Offset:   24 Size:     4
//   float BloomAmount;                 // Offset:   28 Size:     4
//   float BloomBrightness;             // Offset:   32 Size:     4 [unused]
//   float BloomSaturation;             // Offset:   36 Size:     4 [unused]
//   float BlurSize;                    // Offset:   40 Size:     4 [unused]
//   float BlendingAmount;              // Offset:   44 Size:     4
//   float BlendingBase;                // Offset:   48 Size:     4
//   bool ShowBloom;                    // Offset:   52 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __srgbV__FXShaders__ColorTex      texture  float4          2d             t1      1 
// __V__FXShaders__Bloom0Tex         texture  float4          2d             t4      1 
// __V__FXShaders__Bloom1Tex         texture  float4          2d             t6      1 
// __V__FXShaders__Bloom2Tex         texture  float4          2d             t8      1 
// __V__FXShaders__Bloom3Tex         texture  float4          2d            t10      1 
// __V__FXShaders__Bloom4Tex         texture  float4          2d            t12      1 
// __V__FXShaders__Bloom5Tex         texture  float4          2d            t14      1 
// __V__FXShaders__Bloom6Tex         texture  float4          2d            t16      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t16
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 7
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t1.xyzw, s0
switch cb0[1].y
  case l(1)
  max r1.w, r0.z, r0.y
  max r1.w, r0.x, r1.w
  add r1.w, -r1.w, l(1.000000)
  max r1.w, r1.w, l(0.100000)
  rcp r1.w, r1.w
  mul r1.xyz, r0.xyzx, r1.wwww
  break 
  case l(2)
  mul r2.xyz, r0.xyzx, l(-0.155000, -0.155000, -0.155000, 0.000000)
  max r3.xyz, r0.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
  add r3.xyz, r3.xyzx, l(-1.019000, -1.019000, -1.019000, 0.000000)
  div r1.xyz, r2.xyzx, r3.xyzx
  break 
  case l(3)
  mad r2.xyz, r0.xyzx, l(0.590000, 0.590000, 0.590000, 0.000000), l(-0.030000, -0.030000, -0.030000, 0.000000)
  mad r3.xyz, r0.xyzx, l(1.405600, 1.405600, 1.405600, 0.000000), l(0.000900, 0.000900, 0.000900, 0.000000)
  mad r3.xyz, -r0.xyzx, l(0.035400, 0.035400, 0.035400, 0.000000), r3.xyzx
  mul r4.xyz, r0.xyzx, r0.xyzx
  mad r3.xyz, -r4.xyzx, l(1.360800, 1.360800, 1.360800, 0.000000), r3.xyzx
  mad r3.xyz, r4.xyzx, l(0.348100, 0.348100, 0.348100, 0.000000), r3.xyzx
  sqrt r3.xyz, r3.xyzx
  add r2.xyz, r2.xyzx, r3.xyzx
  mad r3.xyz, -r0.xyzx, l(2.430000, 2.430000, 2.430000, 0.000000), l(2.510000, 2.510000, 2.510000, 0.000000)
  add r3.xyz, r3.xyzx, r3.xyzx
  div r1.xyz, r2.xyzx, r3.xyzx
  break 
  case l(4)
  mad r2.xyz, -r0.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), l(0.005000, 0.005000, 0.005000, 0.000000)
  mad r3.xyz, r0.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), l(-0.005000, -0.005000, -0.005000, 0.000000)
  mul r4.xyz, r0.xyzx, l(0.072000, 0.072000, 0.072000, 0.000000)
  mad r5.xyz, r0.xyzx, l(0.045000, 0.045000, 0.045000, 0.000000), l(-0.042000, -0.042000, -0.042000, 0.000000)
  mul r4.xyz, r4.xyzx, r5.xyzx
  mad r3.xyz, |r3.xyzx|, |r3.xyzx|, -r4.xyzx
  sqrt r3.xyz, r3.xyzx
  add r2.xyz, r2.xyzx, -r3.xyzx
  mad r3.xyz, r0.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), l(-0.280000, -0.280000, -0.280000, 0.000000)
  mul r3.xyz, r3.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000)
  div r1.xyz, r2.xyzx, r3.xyzx
  mov r1.xyz, |r1.xyzx|
  break 
  case l(5)
  mad r2.xyz, -r0.xyzx, l(0.432951, 0.432951, 0.432951, 0.000000), l(0.024579, 0.024579, 0.024579, 0.000000)
  mad r3.xyz, r0.xyzx, l(0.432951, 0.432951, 0.432951, 0.000000), l(-0.024579, -0.024579, -0.024579, 0.000000)
  mad r4.xyz, r0.xyzx, l(0.983729, 0.983729, 0.983729, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r5.xyz, r4.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
  mad r6.xyz, r0.xyzx, l(0.238081, 0.238081, 0.238081, 0.000000), l(0.000091, 0.000091, 0.000091, 0.000000)
  mul r5.xyz, r5.xyzx, r6.xyzx
  mad r3.xyz, |r3.xyzx|, |r3.xyzx|, -r5.xyzx
  sqrt r3.xyz, r3.xyzx
  add r2.xyz, r2.xyzx, -r3.xyzx
  add r3.xyz, r4.xyzx, r4.xyzx
  div r1.xyz, r2.xyzx, r3.xyzx
  mov r1.xyz, |r1.xyzx|
  break 
  default 
  add r2.xyz, r0.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
  min r2.xyz, r2.xyzx, l(-0.100000, -0.100000, -0.100000, 0.000000)
  div r1.xyz, r0.xyzx, r2.xyzx
  mov r1.xyz, -r1.xyzx
  break 
endswitch 
mul r0.x, cb0[0].w, l(1.442695)
exp r0.x, r0.x
div r0.xyz, r1.xyzx, r0.xxxx
mul r1.x, cb0[2].w, l(7.000000)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, v1.xyxx, t4.wxyz, s0
mul r1.x, r1.x, r1.x
mad r2.xyzw, -cb0[3].xxxx, l(7.000000, 7.000000, 7.000000, 7.000000), l(1.000000, 2.000000, 3.000000, 4.000000)
mul r2.xyzw, r2.xyzw, r2.xyzw
mul r2.xyzw, r1.xxxx, r2.xyzw
mul r3.x, r1.x, l(6.283180)
sqrt r3.x, r3.x
div r3.x, l(1.000000, 1.000000, 1.000000, 1.000000), r3.x
mul r2.xyzw, r2.xyzw, l(-0.721348, -0.721348, -0.721348, -0.721348)
exp r2.xyzw, r2.xyzw
mul r2.xyzw, r2.xyzw, r3.xxxx
sample_indexable(texture2d)(float,float,float,float) r3.yzw, v1.xyxx, t6.wxyz, s0
mul r3.yzw, r2.yyyy, r3.yyzw
mad r1.yzw, r1.yyzw, r2.xxxx, r3.yyzw
sample_indexable(texture2d)(float,float,float,float) r3.yzw, v1.xyxx, t8.wxyz, s0
mad r1.yzw, r3.yyzw, r2.zzzz, r1.yyzw
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t10.xyzw, s0
mad r1.yzw, r2.xxyz, r2.wwww, r1.yyzw
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t12.xyzw, s0
mad r3.yzw, -cb0[3].xxxx, l(0.000000, 7.000000, 7.000000, 7.000000), l(0.000000, 5.000000, 6.000000, 7.000000)
mul r3.yzw, r3.yyzw, r3.yyzw
mul r3.yzw, r1.xxxx, r3.yyzw
mul r3.yzw, r3.yyzw, l(0.000000, -0.721348, -0.721348, -0.721348)
exp r3.yzw, r3.yyzw
mul r3.xyz, r3.yzwy, r3.xxxx
mad r1.xyz, r2.xyzx, r3.xxxx, r1.yzwy
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t14.xyzw, s0
mad r1.xyz, r2.xyzx, r3.yyyy, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t16.xyzw, s0
mad r1.xyz, r2.xyzx, r3.zzzz, r1.xyzx
mul r2.xyz, r1.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000)
add r1.w, cb0[1].w, l(1.000000)
log r1.w, r1.w
mul r1.w, r1.w, l(0.301030)
mad r1.xyz, r1.xyzx, l(0.142857, 0.142857, 0.142857, 0.000000), -r0.xyzx
mad r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
movc r0.xyz, cb0[3].yyyy, r2.xyzx, r0.xyzx
mul r1.x, cb0[1].x, l(1.442695)
exp r1.x, r1.x
switch cb0[1].z
  case l(0)
  mul r2.xyz, r0.xyzx, r1.xxxx
  mad r3.xyz, r0.xyzx, r1.xxxx, l(1.000000, 1.000000, 1.000000, 0.000000)
  div r1.yzw, r2.xxyz, r3.xxyz
  break 
  case l(1)
  mul r2.xyz, r0.xyzx, r1.xxxx
  max r2.w, r2.z, r2.y
  max r2.w, r2.w, r2.x
  add r2.w, r2.w, l(1.000000)
  rcp r2.w, r2.w
  mul r1.yzw, r2.wwww, r2.xxyz
  break 
  case l(2)
  mul r2.xyz, r0.xyzx, r1.xxxx
  mad r3.xyz, r0.xyzx, r1.xxxx, l(0.155000, 0.155000, 0.155000, 0.000000)
  div r2.xyz, r2.xyzx, r3.xyzx
  mul r1.yzw, r2.xxyz, l(0.000000, 1.019000, 1.019000, 1.019000)
  break 
  case l(3)
  mul r2.xyz, r0.xyzx, r1.xxxx
  mad r3.xyz, r2.xyzx, l(2.510000, 2.510000, 2.510000, 0.000000), l(0.030000, 0.030000, 0.030000, 0.000000)
  mul r3.xyz, r2.xyzx, r3.xyzx
  mad r4.xyz, r2.xyzx, l(2.430000, 2.430000, 2.430000, 0.000000), l(0.590000, 0.590000, 0.590000, 0.000000)
  mad r2.xyz, r2.xyzx, r4.xyzx, l(0.140000, 0.140000, 0.140000, 0.000000)
  div_sat r1.yzw, r3.xxyz, r2.xxyz
  break 
  case l(4)
  mul r2.xyz, r0.xyzx, r1.xxxx
  mad r3.xyz, r2.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), l(0.050000, 0.050000, 0.050000, 0.000000)
  mad r3.xyz, r2.xyzx, r3.xyzx, l(0.004000, 0.004000, 0.004000, 0.000000)
  mad r4.xyz, r2.xyzx, l(0.150000, 0.150000, 0.150000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  mad r2.xyz, r2.xyzx, r4.xyzx, l(0.060000, 0.060000, 0.060000, 0.000000)
  div r2.xyz, r3.xyzx, r2.xyzx
  add r1.yzw, r2.xxyz, l(0.000000, -0.066667, -0.066667, -0.066667)
  break 
  default 
  mul r2.xyz, r0.xyzx, r1.xxxx
  mad r0.xyz, r0.xyzx, r1.xxxx, l(0.024579, 0.024579, 0.024579, 0.000000)
  mad r0.xyz, r2.xyzx, r0.xyzx, l(-0.000091, -0.000091, -0.000091, 0.000000)
  mad r3.xyz, r2.xyzx, l(0.983729, 0.983729, 0.983729, 0.000000), l(0.432951, 0.432951, 0.432951, 0.000000)
  mad r2.xyz, r2.xyzx, r3.xyzx, l(0.238081, 0.238081, 0.238081, 0.000000)
  div_sat r1.yzw, r0.xxyz, r2.xxyz
  break 
endswitch 
mov o0.xyz, r1.yzwy
mov o0.w, r0.w
ret 
// Approximately 156 instruction slots used
