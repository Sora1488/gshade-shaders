//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float frametime;                   // Offset:    0 Size:     4
//   float UI_BLUR_LENGTH;              // Offset:    4 Size:     4
//   int UI_BLUR_SAMPLES_MAX;           // Offset:    8 Size:     4
//   bool UI_HQ_SAMPLING;               // Offset:   12 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__texColor                     texture  float4          2d             t4      1 
// __V__texMotionVectors             texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xy, v1.xyxx, t6.xyzw, s1
div r0.xy, r0.xyxx, cb0[0].xxxx
mul r0.xy, r0.xyxx, cb0[0].yyyy
mul r0.xy, r0.xyxx, l(50.000000, 50.000000, 0.000000, 0.000000)
itof r0.z, cb0[0].z
div r0.xy, r0.xyxx, r0.zzzz
mul r0.w, r0.z, l(0.500000)
ftoi r0.w, r0.w
mov r1.xyzw, l(0,0,0,0)
mov r2.x, l(0)
loop 
  ige r2.y, r2.x, cb0[0].z
  breakc_nz r2.y
  iadd r2.y, -r0.w, r2.x
  itof r2.y, r2.y
  mad r2.yz, -r0.xxyx, r2.yyyy, v1.xxyx
  sample_l_indexable(texture2d)(float,float,float,float) r3.xyzw, r2.yzyy, t4.xyzw, s0, l(0.000000)
  div r3.xyzw, r3.xyzw, r0.zzzz
  add r1.xyzw, r1.xyzw, r3.xyzw
  iadd r2.x, r2.x, l(1)
endloop 
mov o0.xyzw, r1.xyzw
ret 
// Approximately 23 instruction slots used
