//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Mode;                          // Offset:    0 Size:     4
//   float3 Ratio;                      // Offset:    4 Size:    12
//   float Multiplier;                  // Offset:   16 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
switch cb0[0].x
  case l(0)
  mul r2.xyz, cb0[0].yzwy, cb0[1].xxxx
  mad r0.xyzw, r2.xxyy, l(0.000521, 0.000926, 0.000521, 0.000926), v1.xyxy
  mad r1.xy, r2.zzzz, l(0.000521, 0.000926, 0.000000, 0.000000), v1.xyxx
  break 
  case l(1)
  mad r1.z, cb0[1].x, l(0.001062), l(1.000000)
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
  mad r2.xyz, cb0[0].yzwy, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
  add r1.w, -r1.z, r1.w
  mad r2.xyz, r2.xyzx, r1.wwww, r1.zzzz
  add r1.zw, v1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  mad r0.xyzw, r1.zwzw, r2.xxyy, l(0.500000, 0.500000, 0.500000, 0.500000)
  mad r1.xy, r1.zwzz, r2.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000)
  break 
  default 
  mov r0.xyzw, v1.xyxy
  mov r1.xy, v1.xyxx
  break 
endswitch 
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.z, r1.xyxx, t0.xyzw, s0
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 27 instruction slots used
