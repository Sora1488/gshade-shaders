//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool SEnable_Foreground_Color;     // Offset:    0 Size:     4
//   float3 SForeground_Color;          // Offset:    4 Size:    12
//   float SForeground_Stage_Opacity;   // Offset:   16 Size:     4
//   int SForeground_Tex_Select;        // Offset:   20 Size:     4 [unused]
//   bool SDisable_Background_Processing;// Offset:   24 Size:     4 [unused]
//   bool SEnable_Background_Color;     // Offset:   28 Size:     4 [unused]
//   float3 SBackground_Color;          // Offset:   32 Size:    12 [unused]
//   float SBackground_Stage_Opacity;   // Offset:   44 Size:     4 [unused]
//   float SBackground_Stage_depth;     // Offset:   48 Size:     4 [unused]
//   int SBackground_Tex_Select;        // Offset:   52 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__Silhouette_Texture           texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t6.xyzw, s0
mul r0.w, r0.w, cb0[1].x
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
add r0.xyz, r0.xyzx, -r1.xyzx
mad r0.xyz, r0.wwww, r0.xyzx, r1.xyzx
add r2.xyz, -r1.xyzx, cb0[0].yzwy
mad r1.xyz, cb0[1].xxxx, r2.xyzx, r1.xyzx
movc o0.xyz, cb0[0].xxxx, r1.xyzx, r0.xyzx
ret 
// Approximately 9 instruction slots used
