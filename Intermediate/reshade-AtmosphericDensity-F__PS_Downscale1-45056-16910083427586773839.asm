//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Timer;                       // Offset:    0 Size:     4
//   bool HasDepth;                     // Offset:    4 Size:     4 [unused]
//   int DISTANCE;                      // Offset:    8 Size:     4 [unused]
//   int HIGHLIGHT_DIST;                // Offset:   12 Size:     4 [unused]
//   float3 FOG_TINT;                   // Offset:   16 Size:    12 [unused]
//   int AUTO_COLOR;                    // Offset:   28 Size:     4
//   int WIDTH;                         // Offset:   32 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__TexColor                     texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 6
ilt r0.x, l(1), cb0[1].w
if_nz r0.x
  add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mad r0.xy, r0.xyxx, l(8.000000, 8.000000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t4.xyzw, s1
else 
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t4.xyzw, s1
endif 
add r1.xy, v1.xyxx, cb0[0].xxxx
dp2 r0.w, r1.xyxx, l(25.979601, 156.466003, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.542969)
frc r1.z, r0.w
mov r1.xy, v1.xyxx
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.w, r1.x, l(34.000000), l(1.000000)
mul r0.w, r1.x, r0.w
mul r1.x, r0.w, l(289.000000)
ge r1.x, r1.x, -r1.x
movc r1.xw, r1.xxxx, l(289.000000,0,0,0.003460), l(-289.000000,0,0,-0.003460)
mul r0.w, r0.w, r1.w
frc r0.w, r0.w
mad r0.w, r1.x, r0.w, r1.y
mad r1.x, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, l(289.000000)
ge r1.x, r1.x, -r1.x
movc r1.xy, r1.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r1.y
frc r0.w, r0.w
mad r0.w, r1.x, r0.w, r1.z
mad r1.x, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, l(289.000000)
ge r1.x, r1.x, -r1.x
movc r1.xy, r1.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r1.y
frc r0.w, r0.w
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, l(0.024390)
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r2.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r2.y
frc r0.w, r0.w
mul r0.w, r0.w, r2.x
mul r1.w, r0.w, l(0.024390)
frc r2.x, r1.w
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r1.w, r0.w, l(0.024390)
frc r1.xy, r1.xwxx
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r1.w, r0.w, l(0.024390)
frc r2.y, r1.w
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r1.w, r0.w, l(0.024390)
frc r1.z, r1.w
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r0.w, r0.w, l(0.024390)
frc r2.z, r0.w
mul_sat r3.xyz, r0.xyzx, l(509.999969, 509.999969, 509.999969, 0.000000)
add r4.xyz, r0.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mul_sat r4.xyz, r4.xyzx, l(-509.992279, -509.992279, -509.992279, 0.000000)
add r5.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r1.xyz, r1.xyzx, -r2.xyzx
min r2.xyz, r3.xyzx, r4.xyzx
add r1.xyz, -r5.xyzx, r1.xyzx
mad r1.xyz, r2.xyzx, r1.xyzx, r5.xyzx
mad o0.xyz, r1.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000), r0.xyzx
ret 
// Approximately 100 instruction slots used
