//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 10
dcl_indexableTemp x0[9], 4
dcl_indexableTemp x1[9], 4
mov x0[0].x, l(-1.000000)
mov x0[1].x, l(-2.000000)
mov x0[2].x, l(-1.000000)
mov x0[3].x, l(0)
mov x0[4].x, l(0)
mov x0[5].x, l(0)
mov x0[6].x, l(1.000000)
mov x0[7].x, l(2.000000)
mov x0[8].x, l(1.000000)
mov x1[0].x, l(-1.000000)
mov x1[1].x, l(0)
mov x1[2].x, l(1.000000)
mov x1[3].x, l(-2.000000)
mov x1[4].x, l(0)
mov x1[5].x, l(2.000000)
mov x1[6].x, l(-1.000000)
mov x1[7].x, l(0)
mov x1[8].x, l(1.000000)
mov r0.xyzw, l(0,0,0,-1)
loop 
  ilt r1.x, l(1), r0.w
  breakc_nz r1.x
  itof r1.x, r0.w
  mov r2.x, r0.z
  mov r2.y, l(-1)
  mov r1.zw, r0.xxxy
  loop 
    ilt r2.z, l(1), r2.y
    breakc_nz r2.z
    itof r1.y, r2.y
    mad r2.zw, r1.xxxy, l(0.000000, 0.000000, 0.000299, 0.000532), v1.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r2.zwzz, t0.xyzw, s0, l(0.000000)
    dp3 r1.y, r3.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
    mov r2.z, x0[r2.x + 0].x
    mad r1.z, r1.y, r2.z, r1.z
    mov r2.z, x1[r2.x + 0].x
    mad r1.w, r1.y, r2.z, r1.w
    iadd r2.xy, r2.xyxx, l(1, 1, 0, 0)
  endloop 
  mov r0.z, r2.x
  mov r0.xy, r1.zwzz
  iadd r0.w, r0.w, l(1)
endloop 
div r0.x, r0.y, r0.x
min r0.y, |r0.x|, l(1.000000)
max r0.z, |r0.x|, l(1.000000)
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.z
mul r0.y, r0.z, r0.y
mul r0.z, r0.y, r0.y
mad r0.w, r0.z, l(0.020835), l(-0.085133)
mad r0.w, r0.z, r0.w, l(0.180141)
mad r0.w, r0.z, r0.w, l(-0.330299)
mad r0.z, r0.z, r0.w, l(0.999866)
mul r0.w, r0.z, r0.y
lt r1.x, l(1.000000), |r0.x|
mad r0.w, r0.w, l(-2.000000), l(1.570796)
and r0.w, r1.x, r0.w
mad r0.y, r0.y, r0.z, r0.w
min r0.x, r0.x, l(1.000000)
lt r0.x, r0.x, -r0.x
movc r0.x, r0.x, -r0.y, r0.y
sincos r1.x, r2.x, r0.x
sincos r2.z, null, -r0.x
mov r2.y, r1.x
mov r1.yzw, l(0,0,0,0)
mov r0.xyzw, l(0,0,0,0)
mov r3.x, l(-4)
loop 
  itof r4.x, r3.x
  lt r3.y, l(0.000000), r4.x
  breakc_nz r3.y
  mov r3.yzw, r0.xxyz
  mov r5.xyz, r1.yzwy
  mov r4.z, r0.w
  mov r4.w, l(-4)
  loop 
    itof r4.y, r4.w
    lt r5.w, l(0.000000), r4.y
    breakc_nz r5.w
    mul r6.xy, r4.xyxx, l(0.000598, 0.001064, 0.000000, 0.000000)
    dp2 r7.x, r6.xyxx, r2.xyxx
    dp2 r7.y, r6.yxyy, r2.xzxx
    add r6.xy, r7.xyxx, v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t0.xyzw, s0, l(0.000000)
    add r3.yzw, r3.yyzw, r6.xxyz
    mad r5.xyz, r6.xyzx, r6.xyzx, r5.xyzx
    iadd r4.zw, r4.zzzw, l(0, 0, 1, 1)
  endloop 
  mov r0.xyz, r3.yzwy
  mov r1.yzw, r5.xxyz
  mov r0.w, r4.z
  iadd r3.x, r3.x, l(1)
endloop 
itof r0.w, r0.w
div r3.xyz, r0.xyzx, r0.wwww
div r0.xyz, r1.yzwy, r0.wwww
mad r0.xyz, -r3.xyzx, r3.xyzx, r0.xyzx
add r0.x, r0.y, r0.x
add r3.w, r0.z, r0.x
mov r2.y, r1.x
mov r2.w, r2.x
mov r1.yzw, l(0,0,0,0)
mov r0.xyzw, l(0,0,0,0)
mov r4.x, l(0)
loop 
  itof r5.x, r4.x
  lt r4.y, l(4.000000), r5.x
  breakc_nz r4.y
  mov r4.yzw, r0.xxyz
  mov r6.xyz, r1.yzwy
  mov r5.z, r0.w
  mov r5.w, l(-4)
  loop 
    itof r5.y, r5.w
    lt r6.w, l(0.000000), r5.y
    breakc_nz r6.w
    mul r7.xy, r5.xyxx, l(0.000598, 0.001064, 0.000000, 0.000000)
    dp2 r8.x, r7.xyxx, r2.xyxx
    dp2 r8.y, r7.xyxx, r2.zwzz
    add r7.xy, r8.xyxx, v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t0.xyzw, s0, l(0.000000)
    add r4.yzw, r4.yyzw, r7.xxyz
    mad r6.xyz, r7.xyzx, r7.xyzx, r6.xyzx
    iadd r5.zw, r5.zzzw, l(0, 0, 1, 1)
  endloop 
  mov r0.xyz, r4.yzwy
  mov r1.yzw, r6.xxyz
  mov r0.w, r5.z
  iadd r4.x, r4.x, l(1)
endloop 
itof r0.w, r0.w
div r4.xyz, r0.xyzx, r0.wwww
div r0.xyz, r1.yzwy, r0.wwww
mad r0.xyz, -r4.xyzx, r4.xyzx, r0.xyzx
add r0.x, r0.y, r0.x
add r4.w, r0.z, r0.x
mov r2.y, r1.x
mov r1.yzw, l(0,0,0,0)
mov r0.xyzw, l(0,0,0,0)
mov r2.w, l(-4)
loop 
  itof r5.x, r2.w
  lt r5.z, l(0.000000), r5.x
  breakc_nz r5.z
  mov r6.xyz, r0.xyzx
  mov r7.xyz, r1.yzwy
  mov r5.z, r0.w
  mov r5.w, l(0)
  loop 
    itof r5.y, r5.w
    lt r6.w, l(4.000000), r5.y
    breakc_nz r6.w
    mul r8.xy, r5.xyxx, l(0.000598, 0.001064, 0.000000, 0.000000)
    dp2 r9.x, r8.xyxx, r2.xyxx
    dp2 r9.y, r8.yxyy, r2.xzxx
    add r8.xy, r9.xyxx, v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyxx, t0.xyzw, s0, l(0.000000)
    add r6.xyz, r6.xyzx, r8.xyzx
    mad r7.xyz, r8.xyzx, r8.xyzx, r7.xyzx
    iadd r5.zw, r5.zzzw, l(0, 0, 1, 1)
  endloop 
  mov r0.xyz, r6.xyzx
  mov r1.yzw, r7.xxyz
  mov r0.w, r5.z
  iadd r2.w, r2.w, l(1)
endloop 
itof r0.w, r0.w
div r5.xyz, r0.xyzx, r0.wwww
div r0.xyz, r1.yzwy, r0.wwww
mad r0.xyz, -r5.xyzx, r5.xyzx, r0.xyzx
add r0.x, r0.y, r0.x
add r5.w, r0.z, r0.x
mov r2.y, r1.x
mov r0.xyzw, l(0,0,0,0)
mov r1.xyzw, l(0,0,0,0)
loop 
  itof r6.x, r1.w
  lt r2.w, l(4.000000), r6.x
  breakc_nz r2.w
  mov r7.xyz, r0.xyzx
  mov r8.xyz, r1.xyzx
  mov r2.w, r0.w
  mov r6.z, l(0)
  loop 
    itof r6.y, r6.z
    lt r6.w, l(4.000000), r6.y
    breakc_nz r6.w
    mul r6.yw, r6.xxxy, l(0.000000, 0.000598, 0.000000, 0.001064)
    dp2 r9.x, r6.ywyy, r2.xyxx
    dp2 r9.y, r6.wyww, r2.xzxx
    add r6.yw, r9.xxxy, v1.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyz, r6.ywyy, t0.xyzw, s0, l(0.000000)
    add r7.xyz, r7.xyzx, r9.xyzx
    mad r8.xyz, r9.xyzx, r9.xyzx, r8.xyzx
    iadd r2.w, r2.w, l(1)
    iadd r6.z, r6.z, l(1)
  endloop 
  mov r0.xyz, r7.xyzx
  mov r1.xyz, r8.xyzx
  mov r0.w, r2.w
  iadd r1.w, r1.w, l(1)
endloop 
itof r0.w, r0.w
div r0.xyz, r0.xyzx, r0.wwww
div r1.xyz, r1.xyzx, r0.wwww
mad r1.xyz, -r0.xyzx, r0.xyzx, r1.xyzx
add r0.w, r1.y, r1.x
add r0.w, r1.z, r0.w
lt r1.x, r4.w, r3.w
movc r1.xyzw, r1.xxxx, r4.xyzw, r3.xyzw
lt r2.x, r5.w, r1.w
movc r1.xyzw, r2.xxxx, r5.xyzw, r1.xyzw
lt r0.w, r0.w, r1.w
movc o0.xyz, r0.wwww, r0.xyzx, r1.xyzx
ret 
// Approximately 215 instruction slots used
