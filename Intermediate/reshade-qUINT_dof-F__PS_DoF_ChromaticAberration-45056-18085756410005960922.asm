//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__CommonTex0                   texture  float4          2d             t8      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xyzw        1     NONE   float   xy  
// TEXCOORD                 1   xyzw        2     NONE   float       
// TEXCOORD                 2   xy          3     NONE   float       
// TEXCOORD                 3   xy          4     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
add r0.xyzw, v1.xyxy, l(-0.000521, -0.000000, -0.000000, -0.000926)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t8.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t8.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t8.xyzw, s0
add r1.xyz, -r1.xyzx, r2.xyzx
dp3 r1.x, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyz, -r0.xyzx, r2.xyzx
dp3 r1.y, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyzw, v1.xyxy, l(0.000521, 0.000000, 0.000000, 0.000926)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r0.xyxx, t8.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.zwzz, t8.xyzw, s0
add r0.xyz, -r2.xyzx, r0.xyzx
dp3 r0.y, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r3.xyz, -r2.xyzx, r3.xyzx
dp3 r0.x, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
min r0.xy, r0.xyxx, r1.xyxx
dp2 r0.z, r0.xyxx, r0.xyxx
sqrt r0.z, r0.z
add r0.z, r0.z, l(0.000001)
div r0.xy, r0.xyxx, r0.zzzz
mul r0.z, r0.z, l(32.000000)
min r0.z, r0.z, l(1.000000)
mul r0.xy, r0.zzzz, r0.xyxx
mad r0.z, r2.w, l(2.000000), l(-1.000000)
mul r0.zw, |r0.zzzz|, l(0.000000, 0.000000, 0.012300, 0.021867)
mul r0.xy, r0.zwzz, r0.xyxx
mad r0.zw, r0.xxxy, l(0.000000, 0.000000, -0.012500, -0.012500), v1.xxxy
mad r0.xy, -r0.xyxx, l(-0.012500, -0.012500, 0.000000, 0.000000), v1.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xy, r0.xyxx, t8.xwyz, s0
sample_indexable(texture2d)(float,float,float,float) r0.zw, r0.zwzz, t8.xyzw, s0
add r0.xz, -r2.xxzx, r0.xxzx
mul r0.yw, |r0.yyyw|, l(0.000000, 4.000000, 0.000000, 4.000000)
min r0.yw, r0.yyyw, l(0.000000, 1.000000, 0.000000, 1.000000)
mad o0.z, r0.w, r0.z, r2.z
mad o0.x, r0.y, r0.x, r2.x
mov o0.y, r2.y
mov o0.w, l(1.000000)
ret 
// Approximately 38 instruction slots used
