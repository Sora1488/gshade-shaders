//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool UseAutoFocus;                 // Offset:    0 Size:     4 [unused]
//   bool UseMouseDrivenAutoFocus;      // Offset:    4 Size:     4 [unused]
//   float2 AutoFocusPoint;             // Offset:    8 Size:     8 [unused]
//   float AutoFocusTransitionSpeed;    // Offset:   16 Size:     4 [unused]
//   float ManualFocusPlane;            // Offset:   20 Size:     4 [unused]
//   float FocalLength;                 // Offset:   24 Size:     4 [unused]
//   float FNumber;                     // Offset:   28 Size:     4 [unused]
//   bool ShowOutOfFocusPlaneOnMouseDown;// Offset:   32 Size:     4 [unused]
//   float3 OutOfFocusPlaneColor;       // Offset:   36 Size:    12 [unused]
//   float OutOfFocusPlaneColorTransparency;// Offset:   48 Size:     4 [unused]
//   float3 FocusPlaneColor;            // Offset:   52 Size:    12 [unused]
//   float4 FocusCrosshairColor;        // Offset:   64 Size:    16 [unused]
//   float FarPlaneMaxBlur;             // Offset:   80 Size:     4
//   float NearPlaneMaxBlur;            // Offset:   84 Size:     4 [unused]
//   float BlurQuality;                 // Offset:   88 Size:     4 [unused]
//   float BokehBusyFactor;             // Offset:   92 Size:     4
//   float PostBlurSmoothing;           // Offset:   96 Size:     4 [unused]
//   float HighlightAnamorphicFactor;   // Offset:  100 Size:     4
//   float HighlightAnamorphicSpreadFactor;// Offset:  104 Size:     4
//   float HighlightAnamorphicAlignmentFactor;// Offset:  108 Size:     4
//   float HighlightBoost;              // Offset:  112 Size:     4 [unused]
//   float HighlightGammaFactor;        // Offset:  116 Size:     4 [unused]
//   float HighlightSharpeningFactor;   // Offset:  120 Size:     4 [unused]
//   int HighlightShape;                // Offset:  124 Size:     4 [unused]
//   float HighlightShapeRotationAngle; // Offset:  128 Size:     4 [unused]
//   float HighlightShapeGamma;         // Offset:  132 Size:     4 [unused]
//   bool MitigateUndersampling;        // Offset:  136 Size:     4 [unused]
//   bool ShowCoCValues;                // Offset:  140 Size:     4 [unused]
//   float2 MouseCoords;                // Offset:  144 Size:     8 [unused]
//   bool LeftMouseDown;                // Offset:  152 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__CinematicDOF__texCDCoC       texture  float4          2d             t8      1 
// __V__CinematicDOF__texCDBuffer1    texture  float4          2d            t20      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     z         1     NONE   float     z 
// TEXCOORD                 2      w        1     NONE   float      w
// TEXCOORD                 3   x           2     NONE   float       
// TEXCOORD                 4    y          2     NONE   float       
// TEXCOORD                 5     z         2     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.z
dcl_input_ps linear v1.w
dcl_output o0.xyzw
dcl_temps 11
sample_l_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t20.xyzw, s1, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, v1.xyxx, t8.xyzw, s2, l(0.000000)
lt r1.y, r1.x, l(0.000000)
ge r1.z, l(0.000000), v1.w
or r1.y, r1.z, r1.y
if_z r1.y
  add_sat r1.y, -cb0[5].w, l(1.000000)
  mul r2.xyz, r0.xyzx, r1.xxxx
  mul r2.xyz, r1.yyyy, r2.xyzx
  mul r1.z, r1.x, v1.w
  mul r1.zw, r1.zzzz, l(0.000000, 0.000000, 0.000521, 0.000926)
  mul r1.x, r1.x, cb0[5].x
  div r1.xzw, r1.xxzw, v1.zzzz
  add r3.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  add r3.zw, r3.xxxy, r3.xxxy
  dp2 r2.w, r3.zwzz, r3.zwzz
  sqrt r2.w, r2.w
  add r3.z, -r2.w, l(1.000000)
  mad r2.w, cb0[6].z, r3.z, r2.w
  add r3.z, cb0[6].y, l(-1.000000)
  mad r2.w, r2.w, r3.z, l(1.000000)
  add r3.z, -r2.w, l(2.000000)
  dp2 r3.w, r3.xyxx, r3.xyxx
  rsq r3.w, r3.w
  mul r3.xy, r3.wwww, r3.xyxx
  add r3.w, -cb0[6].w, l(1.000000)
  mul r3.w, r3.w, l(0.500000)
  max r3.y, -r3.w, r3.y
  min r3.y, r3.w, r3.y
  min r3.w, |r3.x|, |r3.y|
  max r4.x, |r3.x|, |r3.y|
  div r4.x, l(1.000000, 1.000000, 1.000000, 1.000000), r4.x
  mul r3.w, r3.w, r4.x
  mul r4.x, r3.w, r3.w
  mad r4.y, r4.x, l(0.020835), l(-0.085133)
  mad r4.y, r4.x, r4.y, l(0.180141)
  mad r4.y, r4.x, r4.y, l(-0.330299)
  mad r4.x, r4.x, r4.y, l(0.999866)
  mul r4.y, r3.w, r4.x
  lt r4.z, |r3.x|, |r3.y|
  mad r4.y, r4.y, l(-2.000000), l(1.570796)
  and r4.y, r4.z, r4.y
  mad r3.w, r3.w, r4.x, r4.y
  lt r4.x, r3.x, -r3.x
  and r4.x, r4.x, l(0xc0490fdb)
  add r3.w, r3.w, r4.x
  min r4.x, r3.x, r3.y
  max r3.x, r3.x, r3.y
  lt r3.y, r4.x, -r4.x
  ge r3.x, r3.x, -r3.x
  and r3.x, r3.x, r3.y
  movc r3.x, r3.x, -r3.w, r3.w
  add r3.x, r3.x, l(-3.141593)
  sincos r3.x, r4.x, r3.x
  mov r5.x, -r3.x
  mov r5.y, r4.x
  mov r5.z, r3.x
  mov r3.xyw, r2.xyxz
  mov r4.xy, r1.zwzz
  mov r4.z, r1.y
  mov r4.w, l(7.000000)
  mov r5.w, l(0)
  loop 
    ge r6.x, r5.w, v1.z
    breakc_nz r6.x
    div r6.x, l(6.283185), r4.w
    div r6.y, r5.w, v1.z
    add r6.z, -r6.y, l(1.000000)
    mad r6.y, r1.y, r6.z, r6.y
    mul r6.z, r1.x, r5.w
    mov r7.xyz, r3.xywx
    mov r6.w, r4.z
    mov r7.w, r6.x
    mov r8.x, l(0)
    loop 
      ge r8.y, r8.x, r4.w
      breakc_nz r8.y
      sincos r9.x, r10.x, r7.w
      mul r10.x, r2.w, r10.x
      mul r10.y, r3.z, r9.x
      dp2 r9.x, r10.yxyy, r5.xyxx
      dp2 r9.y, r10.yxyy, r5.yzyy
      mad r8.yz, r9.xxyx, r4.xxyx, v1.xxyx
      sample_l_indexable(texture2d)(float,float,float,float) r8.w, r8.yzyy, t8.yzwx, s2, l(0.000000)
      ge r9.x, r8.w, l(0.000000)
      and r9.x, r9.x, l(0x3f800000)
      mul r9.x, r6.y, r9.x
      mad r8.w, r8.w, cb0[5].x, -r6.z
      add_sat r8.w, r8.w, l(0.500000)
      mul r9.y, r8.w, r9.x
      sample_l_indexable(texture2d)(float,float,float,float) r10.xyz, r8.yzyy, t20.xyzw, s1, l(0.000000)
      mad r7.xyz, r10.xyzx, r9.yyyy, r7.xyzx
      mad r6.w, r9.x, r8.w, r6.w
      add r7.w, r6.x, r7.w
      add r8.x, r8.x, l(1.000000)
    endloop 
    mov r3.xyw, r7.xyxz
    mov r4.z, r6.w
    add r4.w, r4.w, l(7.000000)
    add r4.xy, r1.zwzz, r4.xyxx
    add r5.w, r5.w, l(1.000000)
  endloop 
  eq r1.x, r4.z, l(0.000000)
  and r1.x, r1.x, l(0x3f800000)
  add r1.x, r1.x, r4.z
  div r0.xyz, r3.xywx, r1.xxxx
endif 
mov o0.xyzw, r0.xyzw
ret 
// Approximately 109 instruction slots used
