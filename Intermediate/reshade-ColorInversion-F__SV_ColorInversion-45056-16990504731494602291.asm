//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int nInversionSelector;            // Offset:    0 Size:     4
//   float nInversionRed;               // Offset:    4 Size:     4
//   float nInversionGreen;             // Offset:    8 Size:     4
//   float nInversionBlue;              // Offset:   12 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 5
ieq r0.xy, cb0[0].xxxx, l(5, 6, 0, 0)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
mad r2.xyz, -r1.xyzx, cb0[0].yzwy, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r3.xyz, r1.xyzx, cb0[0].yzwy
mad r3.w, -r1.z, cb0[0].w, l(1.000000)
movc r1.yz, r0.yyyy, r2.yyzy, r3.yyzy
mad r0.yzw, r3.xxyz, l(0.000000, -1.000000, 1.000000, -1.000000), l(0.000000, 1.000000, 0.000000, 1.000000)
mov r1.x, r3.x
movc r0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
ieq r1.xyzw, cb0[0].xxxx, l(1, 2, 3, 4)
mad r4.xyz, r3.xyzx, l(-1.000000, -1.000000, 1.000000, 0.000000), l(1.000000, 1.000000, 0.000000, 0.000000)
movc r0.xyz, r1.wwww, r4.xyzx, r0.xyzx
movc r0.xyz, r1.zzzz, r3.xywx, r0.xyzx
mad r4.xyz, r3.xyzx, l(1.000000, -1.000000, 1.000000, 0.000000), l(0.000000, 1.000000, 0.000000, 0.000000)
mad r3.xyz, r3.xyzx, l(-1.000000, 1.000000, 1.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
movc r0.xyz, r1.yyyy, r4.xyzx, r0.xyzx
movc r0.xyz, r1.xxxx, r3.xyzx, r0.xyzx
movc o0.xyz, cb0[0].xxxx, r0.xyzx, r2.xyzx
ret 
// Approximately 19 instruction slots used
