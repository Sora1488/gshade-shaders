//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Display_Scale;               // Offset:    0 Size:     4
//   float Display_ScaleX;              // Offset:    4 Size:     4
//   float Display_ScaleY;              // Offset:    8 Size:     4
//   float Display_PosX;                // Offset:   12 Size:     4
//   float Display_PosY;                // Offset:   16 Size:     4
//   int Display_SnapRotate;            // Offset:   20 Size:     4
//   float Display_Rotate;              // Offset:   24 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
mul r0.xy, cb0[0].yzyy, cb0[0].xxxx
mul r0.xy, r0.xyxx, l(-0.777778, 0.437500, 0.000000, 0.000000)
switch cb0[1].y
  case l(1)
  mov r0.z, l(-1.570796)
  break 
  case l(2)
  mov r0.z, l(1.570796)
  break 
  case l(3)
  mov r0.z, l(0)
  break 
  case l(4)
  mov r0.z, l(3.141593)
  break 
  case l(5)
  mov r0.z, l(-3.141593)
  break 
  default 
  mul r0.z, cb0[1].z, l(0.017453)
  break 
endswitch 
div r0.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r0.xyxx
sincos r1.x, r2.x, r0.z
mul r1.x, r1.x, l(-0.777778)
sincos r0.z, null, -r0.z
mul r1.w, r0.z, l(0.437500)
mul r1.yz, r2.xxxx, l(0.000000, -0.777778, 0.437500, 0.000000)
mov r2.xz, v1.xxyx
mov r2.y, -cb0[0].w
dp2 r2.x, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mov r2.w, -cb0[1].x
dp2 r2.y, r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
dp2 r0.z, r2.xyxx, r1.ywyy
dp2 r0.w, r2.xyxx, r1.xzxx
mul r1.xy, r0.xyxx, r0.zwzz
add r0.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.xyxx, t0.xyzw, s0
mov_sat r0.zw, r0.xxxy
eq r0.xy, r0.zwzz, r0.xyxx
and r0.x, r0.y, r0.x
and r0.x, r0.x, l(0x3f800000)
mul o0.xyzw, r0.xxxx, r1.xyzw
ret 
// Approximately 44 instruction slots used
