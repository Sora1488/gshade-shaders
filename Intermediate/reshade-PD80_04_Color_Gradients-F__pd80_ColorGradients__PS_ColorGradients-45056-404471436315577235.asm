//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8
//   float Frametime;                   // Offset:    8 Size:     4 [unused]
//   float2 pingpong;                   // Offset:   16 Size:     8 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// __V__pd80_ColorGradients__texAvgLuma    texture  float4          2d            t12      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
mul r0.xy, v1.xyxx, l(3.750000, 2.109375, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t6.xyzw, s1
add r0.w, cb0[0].x, l(5.000000)
mad r0.xyz, r0.wwww, l(0.618034, 0.618034, 0.618034, 0.000000), r0.xyzx
frc r0.xyz, r0.xyzx
mad r0.xyz, r0.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
mov_sat r1.xyz, r1.xyzx
mad_sat r0.xyz, r0.xyzx, l(0.001961, 0.001961, 0.001961, 0.000000), r1.xyzx
dp3 r0.w, r0.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
mad r1.x, -r0.w, l(2.000000), l(1.000000)
add r0.w, r0.w, l(-0.500000)
add r0.w, r0.w, r0.w
max r0.w, r0.w, l(0.000000)
max r1.x, r1.x, l(0.000000)
mul r1.y, r1.x, r1.x
mad r1.x, -r1.x, l(2.000000), l(3.000000)
mad r1.z, -r1.y, r1.x, l(1.000000)
mul r1.x, r1.x, r1.y
mul r1.y, r0.w, r0.w
mad r0.w, -r0.w, l(2.000000), l(3.000000)
mad r1.z, -r1.y, r0.w, r1.z
max r1.z, r1.z, l(0.000000)
mul r2.xy, r0.xyxx, l(0.040000, 0.824000, 0.000000, 0.000000)
sqrt r3.xyz, r0.xyzx
mad r2.xy, r3.xyxx, l(0.960000, 0.176000, 0.000000, 0.000000), r2.xyxx
mul r4.xyz, r0.zxyz, r0.zxyz
mov r2.z, r4.x
mul r4.xyzw, r4.yzyz, l(1.000000, 0.922000, 1.000000, 0.270000)
mul r2.xyz, r1.zzzz, r2.xyzx
max r5.xyz, r0.xyzx, l(0.000000, 0.365000, 1.000000, 0.000000)
add r5.xyz, -r0.xyzx, r5.xyzx
mad_sat r5.xyz, r5.xyzx, l(0.300000, 0.300000, 0.300000, 0.000000), r0.xyzx
mad r2.xyz, r5.xyzx, r1.xxxx, r2.xyzx
mad r2.xyz, r1.yyyy, r0.wwww, r2.xyzx
mad r3.xy, r0.xyxx, l(0.000000, 0.730000, 0.000000, 0.000000), r4.zwzz
mad r4.xy, r0.xyxx, l(0.000000, 0.078000, 0.000000, 0.000000), r4.xyxx
mul r3.xyw, r1.zzzz, r3.xyxz
mul r1.z, r0.z, l(0.824000)
mad r4.z, r3.z, l(0.176000), r1.z
mad r1.xzw, r4.xxyz, r1.xxxx, r3.xxyw
mad r1.xyz, r1.yyyy, r0.wwww, r1.xzwx
add r2.xyz, -r1.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, l(0.500000, 0.500000, 0.000000, 0.000000), t12.yzwx, s0
add r0.w, r0.w, l(-0.125000)
mul_sat r0.w, r0.w, l(5.714285)
mad r1.w, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.w
mad r1.xyz, r0.wwww, r2.xyzx, r1.xyzx
add r1.xyz, -r0.xyzx, r1.xyzx
mad o0.xyz, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000), r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 54 instruction slots used
