//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8 [unused]
//   float frametime;                   // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s2                              sampler      NA          NA             s2      1 
// __V__pd80_correctcolor__texDS_1_Max    texture  float4          2d            t12      1 
// __V__pd80_correctcolor__texDS_1_Min    texture  float4          2d            t14      1 
// __V__pd80_correctcolor__texDS_1_Mid    texture  float4          2d            t16      1 
// __V__pd80_correctcolor__texPrevious    texture  float4          2d            t20      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   x   
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps_siv linear noperspective v0.x, position
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
mov r0.zw, l(0,0,0,0)
mov r2.xyz, l(1.000000,1.000000,1.000000,0)
mov r3.xyz, l(0,0,0,0)
mov r1.xyzw, l(0,0,0,0)
mov r0.y, l(0)
loop 
  ige r2.w, r0.y, l(32)
  breakc_nz r2.w
  mov r4.xyz, r1.xyzx
  mov r5.xyz, r2.xyzx
  mov r6.xyz, r3.xyzx
  mov r2.w, r1.w
  mov r0.x, l(0)
  loop 
    ige r3.w, r0.x, l(32)
    breakc_nz r3.w
    ld_indexable(texture2d)(float,float,float,float) r7.xyz, r0.xyww, t14.xyzw
    max r3.w, r7.y, r7.x
    max r3.w, r7.z, r3.w
    dp3 r4.w, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r3.w, r3.w, r4.w
    max r4.w, r5.y, r5.x
    max r4.w, r5.z, r4.w
    dp3 r5.w, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
    add r4.w, r4.w, r5.w
    ge r3.w, r4.w, r3.w
    movc r5.xyz, r3.wwww, r7.xyzx, r5.xyzx
    ld_indexable(texture2d)(float,float,float,float) r7.xyz, r0.xyww, t16.xyzw
    add r4.xyz, r4.xyzx, r7.xyzx
    add r2.w, r2.w, l(1.000000)
    ld_indexable(texture2d)(float,float,float,float) r7.xyz, r0.xyzw, t12.xyzw
    max r6.xyz, r6.xyzx, r7.xyzx
    iadd r0.x, r0.x, l(1)
  endloop 
  mov r1.xyz, r4.xyzx
  mov r2.xyz, r5.xyzx
  mov r3.xyz, r6.xyzx
  mov r1.w, r2.w
  iadd r0.y, r0.y, l(1)
endloop 
mul r0.x, cb0[0].z, l(-0.004328)
exp r0.x, r0.x
add r0.x, -r0.x, l(1.000000)
lt r0.y, v0.x, l(2.000000)
if_nz r0.y
  mul r0.yz, v1.xxyx, l(0.000000, 0.166667, 1.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t20.wxyz, s2
  add r4.xyz, -r0.yzwy, r2.xyzx
  mad o0.xyz, r0.xxxx, r4.xyzx, r0.yzwy
  mov o0.w, l(1.000000)
  ret 
else 
  lt r0.y, v0.x, l(4.000000)
  if_nz r0.y
    div r0.yzw, r1.xxyz, r1.wwww
    mad r1.xy, v1.xyxx, l(0.166667, 1.000000, 0.000000, 0.000000), l(0.333333, 0.000000, 0.000000, 0.000000)
    sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t20.xyzw, s2
    add r0.yzw, r0.yyzw, -r1.xxyz
    mad o0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
    mov o0.w, l(1.000000)
    ret 
  else 
    ge r0.yzw, r2.xxyz, r3.xxyz
    movc r0.yzw, r0.yyzw, l(0,1.000000,1.000000,1.000000), r3.xxyz
    mad r1.xy, v1.xyxx, l(0.166667, 1.000000, 0.000000, 0.000000), l(0.666667, 0.000000, 0.000000, 0.000000)
    sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t20.xyzw, s2
    add r0.yzw, r0.yyzw, -r1.xxyz
    mad o0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
    mov o0.w, l(1.000000)
    ret 
  endif 
endif 
ret 
// Approximately 73 instruction slots used
