//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__ReVeilCS__BackBuffer         texture  float4          2d             t8      1 
// V__ReVeilCS__wMean                    UAV   float          2d             u0      1 
// V__ReVeilCS__wVariance                UAV   float          2d             u1      1 
// V__ReVeilCS__wMaximum                 UAV   float          2d             u2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_texture2d (float,float,float,float) t8
dcl_uav_typed_texture2d (float,float,float,float) u0
dcl_uav_typed_texture2d (float,float,float,float) u1
dcl_uav_typed_texture2d (float,float,float,float) u2
dcl_input vThreadIDInGroup.xy
dcl_input vThreadID.xy
dcl_temps 11
dcl_indexableTemp x0[3], 4
dcl_tgsm_structured g0, 16, 1024
dcl_tgsm_raw g1, 4
dcl_thread_group 16, 16, 1
iadd r0.xyzw, -vThreadIDInGroup.xyxy, vThreadID.xyxy
ieq r1.xy, vThreadIDInGroup.xyxx, l(0, 0, 0, 0)
if_z vThreadIDInGroup.x
  store_raw g1.x, l(0), l(0)
endif 
sync_g_t
bfi r2.xyz, l(4, 4, 4, 0), l(0, 0, 5, 0), vThreadIDInGroup.xyyx, l(16, 16, 512, 0)
ishl r1.z, vThreadIDInGroup.y, l(5)
imad r1.w, vThreadIDInGroup.y, l(32), vThreadIDInGroup.x
bfi r3.xy, l(27, 5, 0, 0), l(5, 0, 0, 0), vThreadIDInGroup.yxyy, r2.xzxx
iadd r2.w, r2.x, r2.z
iadd r4.xyzw, vThreadIDInGroup.xxyy, l(-8, 8, -8, 8)
iadd r5.xyzw, r0.zwzw, r4.xzyz
ishl r5.xyzw, r5.zwxy, l(2, 2, 2, 2)
mov r6.xy, r5.zwzz
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyzw, t8.xyzw
min r3.z, r6.z, r6.x
min r6.x, r6.y, r3.z
mul r6.y, r6.x, r6.x
mov x0[0].xy, r6.xyxx
store_structured g0.xy, r1.w, l(0), r6.xyxx
mul r3.z, r6.x, l(255.000000)
ftou r3.z, r3.z
atomic_umax g1, l(0), r3.z
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyzw, t8.xyzw
min r3.z, r5.z, r5.x
min r5.x, r5.y, r3.z
mul r5.y, r5.x, r5.x
store_structured g0.xy, r3.x, l(0), r5.xyxx
iadd r0.xyzw, r0.xyzw, r4.xwyw
ishl r0.xyzw, r0.zwxy, l(2, 2, 2, 2)
mov r4.xy, r0.zwzz
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyzw, t8.xyzw
min r3.z, r4.z, r4.x
min r4.x, r4.y, r3.z
mul r4.y, r4.x, r4.x
mov x0[2].xy, r4.xyxx
store_structured g0.xy, r3.y, l(0), r4.xyxx
mov r0.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyzw, t8.xyzw
min r0.x, r0.z, r0.x
min r0.x, r0.y, r0.x
mul r0.y, r0.x, r0.x
store_structured g0.xy, r2.w, l(0), r0.xyxx
sync_g_t
and r0.z, r1.y, r1.x
if_nz r0.z
  ushr r7.xyzw, vThreadID.xyyy, l(4, 4, 4, 4)
  ld_raw r0.z, l(0), g1.xxxx
  utof r0.z, r0.z
  mul r0.z, r0.z, l(0.003922)
  store_uav_typed u2.xyzw, r7.xyzw, r0.zzzz
endif 
itof r0.zw, vThreadIDInGroup.xxxy
add r7.xyzw, r0.zzzz, l(-1.000000, -2.000000, -4.000000, -8.000000)
ftoi r7.xyzw, r7.xyzw
ge r8.xyzw, r0.zzzz, l(1.000000, 2.000000, 4.000000, 8.000000)
if_nz r8.x
  iadd r0.z, r1.z, r7.x
  ld_structured r1.xy, r0.z, l(0), g0.xyxx
  add r1.xy, r1.xyxx, r6.xyxx
  mov x0[0].xy, r1.xyxx
endif 
mov r1.xy, x0[0].xyxx
store_structured g0.xy, r1.w, l(8), r1.xyxx
itof r6.xyzw, r2.xyyy
add r9.xyzw, r6.xxxx, l(-1.000000, -2.000000, -4.000000, -8.000000)
ftoi r9.xyzw, r9.xyzw
imad r10.xyzw, vThreadIDInGroup.yyyy, l(32, 32, 32, 32), r9.xyzw
ld_structured r1.xy, r10.x, l(0), g0.xyxx
add r1.xy, r1.xyxx, r5.xyxx
store_structured g0.xy, r3.x, l(8), r1.xyxx
if_nz r8.x
  iadd r0.z, r2.z, r7.x
  ld_structured r3.zw, r0.z, l(0), g0.xxxy
  add r3.zw, r3.zzzw, r4.xxxy
  mov x0[2].xy, r3.zwzz
endif 
mov r3.zw, x0[2].xxxy
store_structured g0.xy, r3.y, l(8), r3.zwzz
iadd r4.xyzw, r2.zzzz, r9.xyzw
ld_structured r3.zw, r4.x, l(0), g0.xxxy
add r0.xy, r0.xyxx, r3.zwzz
store_structured g0.xy, r2.w, l(8), r0.xyxx
sync_g_t
if_nz r8.y
  iadd r0.z, r1.z, r7.y
  ld_structured r3.zw, r0.z, l(8), g0.xxxy
  mov r5.xy, x0[0].xyxx
  add r3.zw, r3.zzzw, r5.xxxy
  mov x0[0].xy, r3.zwzz
endif 
mov r3.zw, x0[0].xxxy
store_structured g0.xy, r1.w, l(0), r3.zwzz
ld_structured r3.zw, r10.y, l(8), g0.xxxy
add r1.xy, r1.xyxx, r3.zwzz
store_structured g0.xy, r3.x, l(0), r1.xyxx
if_nz r8.y
  iadd r0.z, r2.z, r7.y
  ld_structured r3.zw, r0.z, l(8), g0.xxxy
  mov r5.xy, x0[2].xyxx
  add r3.zw, r3.zzzw, r5.xxxy
  mov x0[2].xy, r3.zwzz
endif 
mov r3.zw, x0[2].xxxy
store_structured g0.xy, r3.y, l(0), r3.zwzz
ld_structured r3.zw, r4.y, l(8), g0.xxxy
add r0.xy, r0.xyxx, r3.zwzz
store_structured g0.xy, r2.w, l(0), r0.xyxx
sync_g_t
if_nz r8.z
  iadd r0.z, r1.z, r7.z
  ld_structured r3.zw, r0.z, l(0), g0.xxxy
  mov r4.xy, x0[0].xyxx
  add r3.zw, r3.zzzw, r4.xxxy
  mov x0[0].xy, r3.zwzz
endif 
mov r3.zw, x0[0].xxxy
store_structured g0.xy, r1.w, l(8), r3.zwzz
ld_structured r3.zw, r10.z, l(0), g0.xxxy
add r1.xy, r1.xyxx, r3.zwzz
store_structured g0.xy, r3.x, l(8), r1.xyxx
if_nz r8.z
  iadd r0.z, r2.z, r7.z
  ld_structured r3.zw, r0.z, l(0), g0.xxxy
  mov r4.xy, x0[2].xyxx
  add r3.zw, r3.zzzw, r4.xxxy
  mov x0[2].xy, r3.zwzz
endif 
mov r3.zw, x0[2].xxxy
store_structured g0.xy, r3.y, l(8), r3.zwzz
ld_structured r3.zw, r4.z, l(0), g0.xxxy
add r0.xy, r0.xyxx, r3.zwzz
store_structured g0.xy, r2.w, l(8), r0.xyxx
sync_g_t
if_nz r8.w
  iadd r0.z, r1.z, r7.w
  ld_structured r3.zw, r0.z, l(8), g0.xxxy
  mov r4.xy, x0[0].xyxx
  add r3.zw, r3.zzzw, r4.xxxy
  mov x0[0].xy, r3.zwzz
endif 
mov r3.zw, x0[0].xxxy
store_structured g0.xy, r1.w, l(0), r3.zwzz
ld_structured r3.zw, r10.w, l(8), g0.xxxy
add r1.xy, r1.xyxx, r3.zwzz
if_nz r8.w
  iadd r0.z, r2.z, r7.w
  ld_structured r3.zw, r0.z, l(8), g0.xxxy
  mov r4.xy, x0[2].xyxx
  add r3.zw, r3.zzzw, r4.xxxy
  mov x0[2].xy, r3.zwzz
endif 
mov r3.zw, x0[2].xxxy
store_structured g0.xy, r3.y, l(0), r3.zwzz
ld_structured r4.xy, r4.w, l(8), g0.xyxx
add r0.xy, r0.xyxx, r4.xyxx
sync_g_t
mov r4.xy, x0[0].xyxx
store_structured g0.xy, r1.w, l(8), r4.xyxx
add r5.xyzw, r6.xyzw, l(-16.000000, -1.000000, -2.000000, -4.000000)
ftoi r5.xyzw, r5.xyzw
imad r0.z, vThreadIDInGroup.y, l(32), r5.x
ld_structured r4.zw, r0.z, l(0), g0.xxxy
add r1.xy, r1.xyxx, r4.zwzz
mov x0[1].xy, r1.xyxx
store_structured g0.xy, r3.x, l(8), r1.xyxx
store_structured g0.xy, r3.y, l(8), r3.zwzz
bfi r7.xyzw, l(5, 27, 27, 27), l(0, 5, 5, 5), r5.xyzw, r2.zxxx
ld_structured r2.yz, r7.x, l(0), g0.xxyx
add r0.xy, r0.xyxx, r2.yzyy
store_structured g0.xy, r2.w, l(8), r0.xyxx
sync_g_t
add r8.xyzw, r0.wwww, l(-1.000000, -2.000000, -4.000000, -8.000000)
ftoi r8.xyzw, r8.xyzw
ge r9.xyzw, r0.wwww, l(1.000000, 2.000000, 4.000000, 8.000000)
if_nz r9.x
  bfi r0.z, l(27), l(5), r8.x, vThreadIDInGroup.x
  ld_structured r0.zw, r0.z, l(8), g0.xxxy
  add r0.zw, r0.zzzw, r4.xxxy
  mov x0[0].xy, r0.zwzz
endif 
mov r0.zw, x0[0].xxxy
store_structured g0.xy, r1.w, l(0), r0.zwzz
if_nz r9.x
  bfi r0.z, l(27), l(5), r8.x, r2.x
  ld_structured r0.zw, r0.z, l(8), g0.xxxy
  add r0.zw, r0.zzzw, r1.xxxy
  mov x0[1].xy, r0.zwzz
endif 
mov r0.zw, x0[1].xxxy
store_structured g0.xy, r3.x, l(0), r0.zwzz
imad r1.xyz, r5.yzwy, l(32, 32, 32, 0), vThreadIDInGroup.xxxx
ld_structured r0.zw, r1.x, l(8), g0.xxxy
mov r2.yz, x0[2].xxyx
add r0.zw, r0.zzzw, r2.yyyz
store_structured g0.xy, r3.y, l(0), r0.zwzz
ld_structured r2.yz, r7.y, l(8), g0.xxyx
add r0.xy, r0.xyxx, r2.yzyy
store_structured g0.xy, r2.w, l(0), r0.xyxx
sync_g_t
if_nz r9.y
  bfi r1.x, l(27), l(5), r8.y, vThreadIDInGroup.x
  ld_structured r2.yz, r1.x, l(0), g0.xxyx
  mov r3.zw, x0[0].xxxy
  add r2.yz, r2.yyzy, r3.zzwz
  mov x0[0].xy, r2.yzyy
endif 
mov r2.yz, x0[0].xxyx
store_structured g0.xy, r1.w, l(8), r2.yzyy
if_nz r9.y
  bfi r1.x, l(27), l(5), r8.y, r2.x
  ld_structured r2.yz, r1.x, l(0), g0.xxyx
  mov r3.zw, x0[1].xxxy
  add r2.yz, r2.yyzy, r3.zzwz
  mov x0[1].xy, r2.yzyy
endif 
mov r2.yz, x0[1].xxyx
store_structured g0.xy, r3.x, l(8), r2.yzyy
ld_structured r1.xy, r1.y, l(0), g0.xyxx
add r0.zw, r0.zzzw, r1.xxxy
store_structured g0.xy, r3.y, l(8), r0.zwzz
ld_structured r1.xy, r7.z, l(0), g0.xyxx
add r0.xy, r0.xyxx, r1.xyxx
store_structured g0.xy, r2.w, l(8), r0.xyxx
sync_g_t
if_nz r9.z
  bfi r1.x, l(27), l(5), r8.z, vThreadIDInGroup.x
  ld_structured r1.xy, r1.x, l(8), g0.xyxx
  mov r2.yz, x0[0].xxyx
  add r1.xy, r1.xyxx, r2.yzyy
  mov x0[0].xy, r1.xyxx
endif 
mov r1.xy, x0[0].xyxx
store_structured g0.xy, r1.w, l(0), r1.xyxx
if_nz r9.z
  bfi r1.x, l(27), l(5), r8.z, r2.x
  ld_structured r1.xy, r1.x, l(8), g0.xyxx
  mov r2.yz, x0[1].xxyx
  add r1.xy, r1.xyxx, r2.yzyy
  mov x0[1].xy, r1.xyxx
endif 
mov r1.xy, x0[1].xyxx
store_structured g0.xy, r3.x, l(0), r1.xyxx
ld_structured r1.xy, r1.z, l(8), g0.xyxx
add r0.zw, r0.zzzw, r1.xxxy
store_structured g0.xy, r3.y, l(0), r0.zwzz
ld_structured r1.xy, r7.w, l(8), g0.xyxx
add r0.xy, r0.xyxx, r1.xyxx
store_structured g0.xy, r2.w, l(0), r0.xyxx
sync_g_t
if_nz r9.w
  bfi r1.x, l(27), l(5), r8.w, vThreadIDInGroup.x
  ld_structured r1.xy, r1.x, l(0), g0.xyxx
  mov r2.yz, x0[0].xxyx
  add r1.xy, r1.xyxx, r2.yzyy
  mov x0[0].xy, r1.xyxx
endif 
mov r1.xy, x0[0].xyxx
store_structured g0.xy, r1.w, l(8), r1.xyxx
if_nz r9.w
  bfi r1.x, l(27), l(5), r8.w, r2.x
  ld_structured r1.xy, r1.x, l(0), g0.xyxx
  mov r1.zw, x0[1].xxxy
  add r1.xy, r1.xyxx, r1.zwzz
  mov x0[1].xy, r1.xyxx
endif 
mov r1.xy, x0[1].xyxx
store_structured g0.xy, r3.x, l(8), r1.xyxx
add r1.zw, r6.wwww, l(0.000000, 0.000000, -8.000000, -16.000000)
ftoi r1.zw, r1.zzzw
imad r2.yz, r1.zzwz, l(0, 32, 32, 0), vThreadIDInGroup.xxxx
ld_structured r2.yw, r2.y, l(0), g0.xxxy
add r0.zw, r0.zzzw, r2.yyyw
imad r1.zw, r1.zzzw, l(0, 0, 32, 32), r2.xxxx
ld_structured r2.xy, r1.z, l(0), g0.xyxx
add r0.xy, r0.xyxx, r2.xyxx
sync_g_t
ld_structured r2.xy, r2.z, l(8), g0.xyxx
add r0.zw, r0.zzzw, r2.xxxy
ld_structured r1.zw, r1.w, l(8), g0.xxxy
add r0.xy, r0.xyxx, r1.zwzz
add r0.xy, -r0.zwzz, r0.xyxx
add r0.xy, -r1.xyxx, r0.xyxx
mov r0.zw, x0[0].xxxy
add r0.xy, r0.zwzz, r0.xyxx
mul r0.z, r0.x, l(0.003906)
mul r0.x, r0.x, r0.x
mad r0.x, -r0.x, l(0.003906), r0.y
mul r0.x, r0.x, l(0.003906)
store_uav_typed u0.xyzw, vThreadID.xyyy, r0.zzzz
store_uav_typed u1.xyzw, vThreadID.xyyy, r0.xxxx
ret 
// Approximately 296 instruction slots used
