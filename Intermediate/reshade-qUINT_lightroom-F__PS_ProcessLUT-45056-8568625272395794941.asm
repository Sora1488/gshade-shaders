//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float       
// TEXCOORD                 1   x           2     NONE   float   x   
// TEXCOORD                 2   x           3     NONE   float   x   
// TEXCOORD                 3   x           4     NONE   float   x   
// TEXCOORD                 4   x           5     NONE   float   x   
// TEXCOORD                 5   x           6     NONE   float   x   
// TEXCOORD                 6   x           7     NONE   float   x   
// TEXCOORD                 7   x           8     NONE   float   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps constant v2.x
dcl_input_ps constant v3.x
dcl_input_ps constant v4.x
dcl_input_ps constant v5.x
dcl_input_ps constant v6.x
dcl_input_ps constant v7.x
dcl_input_ps constant v8.x
dcl_output o0.xyzw
dcl_temps 5
mul r0.xy, v0.xyxx, l(0.015625, 0.015625, 0.000000, 0.000000)
round_ni r0.z, r0.x
frc r0.xy, r0.xyxx
add r0.xy, r0.xyxx, l(-0.007812, -0.007812, 0.000000, 0.000000)
mul_sat r0.xyz, r0.xyzx, l(1.015873, 1.015873, 0.015873, 0.000000)
mul r0.w, r0.z, l(4.000000)
min r0.w, r0.w, l(1.000000)
mad r1.x, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.x
add r1.xyzw, r0.zzzz, l(-0.250000, -0.500000, -0.750000, -1.000000)
log r0.z, r0.z
mul r2.xyzw, r1.yxzx, l(-4.000000, 4.000000, -4.000000, -4.000000)
mul r1.xyz, r1.ywzy, l(4.000000, -4.000000, 4.000000, 0.000000)
mov_sat r2.xyz, r2.xyzx
max r1.w, r2.w, l(0.000000)
mad r3.xyz, r2.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r2.xyz, r2.xyzx, r2.xyzx
mul r2.xyz, r2.xyzx, r3.xyzx
mul r0.w, r0.w, r2.x
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mad r0.w, r2.x, r1.w, r0.w
mad r0.w, r2.y, r2.z, r0.w
mov_sat r1.x, r1.x
mad r1.w, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.w
min r1.y, r1.y, l(1.000000)
max r1.z, r1.z, l(0.000000)
mad r1.w, r1.y, l(-2.000000), l(3.000000)
mul r1.y, r1.y, r1.y
mul r1.y, r1.y, r1.w
mad r0.w, r1.x, r1.y, r0.w
mad r1.x, r1.z, l(-2.000000), l(3.000000)
mul r1.y, r1.z, r1.z
mad r0.w, r1.x, r1.y, r0.w
add r0.w, r0.w, l(-1.000000)
exp r0.w, r0.w
mul r0.z, r0.z, r0.w
exp r1.x, r0.z
mul r0.zw, r0.xxxy, l(0.000000, 0.000000, 4.000000, 4.000000)
min r0.zw, r0.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
mad r2.xy, r0.zwzz, l(-2.000000, -2.000000, 0.000000, 0.000000), l(3.000000, 3.000000, 0.000000, 0.000000)
mul r0.zw, r0.zzzw, r0.zzzw
mul r0.zw, r0.zzzw, r2.xxxy
add r2.xyzw, r0.yyyy, l(-0.250000, -0.500000, -0.750000, -1.000000)
mul r3.xyzw, r2.yxzx, l(-4.000000, 4.000000, -4.000000, -4.000000)
mul r2.xyz, r2.ywzy, l(4.000000, -4.000000, 4.000000, 0.000000)
mov_sat r3.xyz, r3.xyzx
max r2.w, r3.w, l(0.000000)
mad r4.xyz, r3.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r3.xyz, r3.xyzx, r3.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r0.w, r0.w, r3.x
mad r3.x, r2.w, l(-2.000000), l(3.000000)
mul r2.w, r2.w, r2.w
mad r0.w, r3.x, r2.w, r0.w
mad r0.w, r3.y, r3.z, r0.w
mov_sat r2.x, r2.x
mad r2.w, r2.x, l(-2.000000), l(3.000000)
mul r2.x, r2.x, r2.x
mul r2.x, r2.x, r2.w
min r2.y, r2.y, l(1.000000)
max r2.z, r2.z, l(0.000000)
mad r2.w, r2.y, l(-2.000000), l(3.000000)
mul r2.y, r2.y, r2.y
mul r2.y, r2.y, r2.w
mad r0.w, r2.x, r2.y, r0.w
mad r2.x, r2.z, l(-2.000000), l(3.000000)
mul r2.y, r2.z, r2.z
mad r0.w, r2.x, r2.y, r0.w
add r0.w, r0.w, l(-1.000000)
exp r0.w, r0.w
log r2.xy, r0.xyxx
add r3.xyzw, r0.xxxx, l(-0.250000, -0.500000, -0.750000, -1.000000)
mul r0.x, r0.w, r2.y
exp r1.y, r0.x
lt r0.x, r1.y, r1.x
mov r4.xy, r1.yxyy
mov r1.zw, l(0,0,-1.000000,0.666667)
mov r4.zw, l(0,0,0,-0.333333)
movc r1.xyzw, r0.xxxx, r1.xyzw, r4.xyzw
mul r4.xyzw, r3.yxzx, l(-4.000000, 4.000000, -4.000000, -4.000000)
mul r0.xyw, r3.ywyz, l(4.000000, -4.000000, 0.000000, 4.000000)
mov_sat r4.xyz, r4.xyzx
max r2.y, r4.w, l(0.000000)
mad r3.xyz, r4.xyzx, l(-2.000000, -2.000000, -2.000000, 0.000000), l(3.000000, 3.000000, 3.000000, 0.000000)
mul r4.xyz, r4.xyzx, r4.xyzx
mul r3.xyz, r3.xyzx, r4.xyzx
mul r0.z, r0.z, r3.x
mad r2.z, r2.y, l(-2.000000), l(3.000000)
mul r2.y, r2.y, r2.y
mad r0.z, r2.z, r2.y, r0.z
mad r0.z, r3.y, r3.z, r0.z
mov_sat r0.x, r0.x
mad r2.y, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r2.y
min r0.y, r0.y, l(1.000000)
max r0.w, r0.w, l(0.000000)
mad r2.y, r0.y, l(-2.000000), l(3.000000)
mul r0.y, r0.y, r0.y
mul r0.y, r0.y, r2.y
mad r0.x, r0.x, r0.y, r0.z
mad r0.y, r0.w, l(-2.000000), l(3.000000)
mul r0.z, r0.w, r0.w
mad r0.x, r0.y, r0.z, r0.x
add r0.x, r0.x, l(-1.000000)
exp r0.x, r0.x
mul r0.x, r2.x, r0.x
exp r0.w, r0.x
lt r2.x, r0.w, r1.x
mov r0.xyz, r1.xywx
mov r1.xyw, r0.wywx
movc r0.xyzw, r2.xxxx, r0.xyzw, r1.xyzw
add r1.x, -r0.y, r0.w
min r0.y, r0.y, r0.w
add r0.y, -r0.y, r0.x
mad r0.w, r0.y, l(6.000000), l(0.000000)
div r0.w, r1.x, r0.w
add r0.z, r0.z, r0.w
mad r1.z, -r0.y, l(0.500000), r0.x
mov r1.x, |r0.z|
mad r0.x, r1.z, l(2.000000), l(-1.000000)
add r0.x, -|r0.x|, l(1.000000)
div_sat r1.y, r0.y, r0.x
mov_sat r1.xyz, r1.xyzx
mov r1.w, v2.x
mov_sat r0.xyz, r1.wyzw
mad r0.w, r0.z, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.y, r0.y, r0.w
mad r2.xyz, r0.xxxx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r2.xyz, |r2.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r2.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r0.xyz, r2.xyzx, r0.yyyy, r0.zzzz
mad r0.w, -r1.x, l(12.000000), l(1.000000)
max r0.w, r0.w, l(0.000000)
add r2.xyzw, r1.xxxx, l(-1.000000, -0.083333, -0.166667, -0.333333)
mad r1.w, r2.x, l(6.000000), l(1.000000)
max r1.w, r1.w, l(0.000000)
max r0.w, r0.w, r1.w
mov r3.yz, r1.yyzy
mov r3.w, v3.x
mov_sat r1.yzw, r3.wwyz
mad r2.x, r1.w, l(2.000000), l(-1.000000)
add r2.x, -|r2.x|, l(1.000000)
mul r1.z, r1.z, r2.x
mad r4.xyz, r1.yyyy, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r4.xyz, |r4.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r1.yzw, r4.xxyz, r1.zzzz, r1.wwww
mul r2.xyzw, r2.yzzw, l(12.000000, 12.000000, 6.000000, 6.000000)
add r2.xyzw, -|r2.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
max r2.xyzw, r2.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r1.yzw, r1.yyzw, r2.xxxx
mad r0.xyz, r0.wwww, r0.xyzx, r1.yzwy
ge r0.w, l(0.166667), r1.x
and r0.w, r0.w, l(0x3f800000)
mul r0.w, r0.w, r2.y
ge r1.y, r1.x, l(0.166667)
add r1.xzw, r1.xxxx, l(-0.500000, 0.000000, -0.666667, -0.833333)
mul r1.xzw, r1.xxzw, l(6.000000, 0.000000, 6.000000, 6.000000)
add r1.xzw, -|r1.xxzw|, l(1.000000, 0.000000, 1.000000, 1.000000)
max r1.xzw, r1.xxzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r1.y, r1.y, l(0x3f800000)
mul r1.y, r1.y, r2.z
max r0.w, r0.w, r1.y
mov r3.x, v4.x
mov_sat r2.xyz, r3.xyzx
mad r1.y, r2.z, l(2.000000), l(-1.000000)
add r1.y, -|r1.y|, l(1.000000)
mul r1.y, r2.y, r1.y
mad r4.xyz, r2.xxxx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r4.xyz, |r4.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyz, r4.xyzx, r1.yyyy, r2.zzzz
mad r0.xyz, r0.wwww, r2.xyzx, r0.xyzx
mov r3.w, v5.x
mov_sat r2.xyz, r3.wyzw
mad r0.w, r2.z, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r2.y, r0.w
mad r4.xyz, r2.xxxx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r4.xyz, |r4.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r2.xyz, r4.xyzx, r0.wwww, r2.zzzz
mad r0.xyz, r2.wwww, r2.xyzx, r0.xyzx
mov r3.x, v6.x
mov_sat r2.xyz, r3.xyzx
mad r0.w, r2.z, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r2.y, r0.w
mad r2.xyw, r2.xxxx, l(6.000000, 6.000000, 0.000000, 6.000000), l(-3.000000, -2.000000, 0.000000, -4.000000)
mad_sat r2.xyw, |r2.xyxw|, l(1.000000, -1.000000, 0.000000, -1.000000), l(-1.000000, 2.000000, 0.000000, 2.000000)
add r2.xyw, r2.xyxw, l(-0.500000, -0.500000, 0.000000, -0.500000)
mad r2.xyz, r2.xywx, r0.wwww, r2.zzzz
mad r0.xyz, r1.xxxx, r2.xyzx, r0.xyzx
mov r3.w, v7.x
mov_sat r2.xyz, r3.wyzw
mad r0.w, r2.z, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r2.y, r0.w
mad r2.xyw, r2.xxxx, l(6.000000, 6.000000, 0.000000, 6.000000), l(-3.000000, -2.000000, 0.000000, -4.000000)
mad_sat r2.xyw, |r2.xyxw|, l(1.000000, -1.000000, 0.000000, -1.000000), l(-1.000000, 2.000000, 0.000000, 2.000000)
add r2.xyw, r2.xyxw, l(-0.500000, -0.500000, 0.000000, -0.500000)
mad r2.xyz, r2.xywx, r0.wwww, r2.zzzz
mad r0.xyz, r1.zzzz, r2.xyzx, r0.xyzx
mov r3.x, v8.x
mov_sat r3.xyz, r3.xyzx
mad r0.w, r3.z, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mul r0.w, r3.y, r0.w
mad r1.xyz, r3.xxxx, l(6.000000, 6.000000, 6.000000, 0.000000), l(-3.000000, -2.000000, -4.000000, 0.000000)
mad_sat r1.xyz, |r1.xyzx|, l(1.000000, -1.000000, -1.000000, 0.000000), l(-1.000000, 2.000000, 2.000000, 0.000000)
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
mad r1.xyz, r1.xyzx, r0.wwww, r3.zzzz
mad o0.xyz, r1.wwww, r1.xyzx, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 221 instruction slots used
