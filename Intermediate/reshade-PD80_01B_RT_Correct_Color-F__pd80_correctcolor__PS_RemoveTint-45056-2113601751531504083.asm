//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8
//   int debug_mode;                    // Offset:    8 Size:     4
//   bool enable_fade;                  // Offset:   12 Size:     4 [unused]
//   bool freeze;                       // Offset:   16 Size:     4 [unused]
//   float transition_speed;            // Offset:   20 Size:     4 [unused]
//   bool enable_dither;                // Offset:   24 Size:     4
//   float dither_strength;             // Offset:   28 Size:     4
//   bool rt_enable_whitepoint_correction;// Offset:   32 Size:     4
//   bool rt_whitepoint_respect_luma;   // Offset:   36 Size:     4
//   int rt_whitepoint_method;          // Offset:   40 Size:     4 [unused]
//   float rt_wp_str;                   // Offset:   44 Size:     4
//   float rt_wp_rl_str;                // Offset:   48 Size:     4
//   bool rt_enable_blackpoint_correction;// Offset:   52 Size:     4
//   bool rt_blackpoint_respect_luma;   // Offset:   56 Size:     4
//   int rt_blackpoint_method;          // Offset:   60 Size:     4 [unused]
//   float rt_bp_str;                   // Offset:   64 Size:     4
//   float rt_bp_rl_str;                // Offset:   68 Size:     4
//   bool rt_enable_midpoint_correction;// Offset:   72 Size:     4
//   bool rt_midpoint_respect_luma;     // Offset:   76 Size:     4
//   bool mid_use_alt_method;           // Offset:   80 Size:     4
//   float midCC_scale;                 // Offset:   84 Size:     4
//   float frametime;                   // Offset:   88 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// __V__pd80_correctcolor__texColor    texture  float4          2d            t10      1 
// __V__pd80_correctcolor__texDS_1_Max    texture  float4          2d            t12      1 
// __V__pd80_correctcolor__texDS_1_Min    texture  float4          2d            t14      1 
// __V__pd80_correctcolor__texDS_1_Mid    texture  float4          2d            t16      1 
// __V__pd80_correctcolor__texDS_1x1    texture  float4          2d            t18      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t10.xyzw, s0
mul r1.xyzw, v1.xyxy, l(3.750000, 2.109375, 0.166667, 1.000000)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t6.xyzw, s1
mad r2.xyz, cb0[0].xxxx, l(0.618034, 0.618034, 0.618034, 0.000000), r2.xyzx
frc r2.xyz, r2.xyzx
mad r2.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mul r2.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
mul r0.w, cb0[1].w, l(0.003922)
mul r2.xyz, r0.wwww, r2.xyzx
movc r2.xyz, cb0[1].zzzz, r2.xyzx, l(0,0,0,0)
add_sat r0.xyz, r0.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t18.xyzw, s2
mad r2.xyzw, v1.xyxy, l(0.166667, 1.000000, 0.166667, 1.000000), l(0.333333, 0.000000, 0.666667, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t18.xyzw, s2
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t18.xyzw, s2
dp3 r4.x, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
dp3 r4.y, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
dp2 r0.w, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mul r1.xyz, r1.xyzx, cb0[4].xxxx
movc r1.xyz, cb0[3].yyyy, r1.xyzx, l(0,0,0,0)
add r2.xyz, r2.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xyz, cb0[2].wwww, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
movc r2.xyz, cb0[2].xxxx, r2.xyzx, l(1.000000,1.000000,1.000000,0)
movc r0.w, cb0[5].x, -r0.w, l(-0.500000)
add r3.xyz, r0.wwww, r3.xyzx
mul r3.xyz, r3.xyzx, cb0[5].yyyy
movc r3.xyz, cb0[4].zzzz, r3.xyzx, l(0,0,0,0)
add_sat r0.xyz, r0.xyzx, -r1.xyzx
add r4.xyz, -r1.xyzx, r2.xyzx
div r0.xyz, r0.xyzx, r4.xyzx
dp3 r0.w, r2.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
movc r1.w, cb0[2].y, cb0[3].x, l(0)
mad r2.xyz, r0.xyzx, r0.wwww, -r0.xyzx
mad r0.xyz, r1.wwww, r2.xyzx, r0.xyzx
dp3 r0.w, r1.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
add r1.x, -r0.w, l(1.000000)
mad r1.xyz, r0.xyzx, r1.xxxx, r0.wwww
movc r0.w, cb0[3].z, cb0[4].y, l(0)
add r1.xyz, -r0.xyzx, r1.xyzx
mad r0.xyz, r0.wwww, r1.xyzx, r0.xyzx
dp3 r0.w, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
dp3 r1.x, r3.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
mad r0.w, r0.w, l(2.000000), l(-1.000000)
add r0.w, -|r0.w|, l(1.000000)
mad r0.xyz, -r3.xyzx, r0.wwww, r0.xyzx
mul r0.w, r0.w, r1.x
movc r1.x, cb0[4].w, l(1.000000), l(0)
mad_sat r0.xyz, r0.wwww, r1.xxxx, r0.xyzx
switch cb0[0].z
  case l(0)
  break 
  case l(1)
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t14.xyzw, s2
  break 
  case l(2)
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t12.xyzw, s2
  break 
  case l(3)
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t16.xyzw, s2
  break 
  default 
  break 
endswitch 
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 66 instruction slots used
