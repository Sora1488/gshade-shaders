//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 5
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
eq r0.y, r0.x, l(1.000000)
if_nz r0.y
  sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t0.wxyz, s0
  mov o0.xyz, r0.yzwy
  ret 
endif 
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t0.wxyz, s0
add r1.xyzw, v1.xyxy, l(-0.000000, -0.000926, 0.000521, 0.000000)
add r2.xz, v1.yyxy, l(-0.500000, 0.000000, -0.500000, 0.000000)
mov r2.y, l(1.000000)
mul r2.xyz, r0.xxxx, r2.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r1.xyxx, t2.xyzw, s0, l(0.000000)
mad r1.x, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r1.x
add r3.yz, v1.xxyx, l(0.000000, -0.500000, -0.500926, 0.000000)
mov r3.x, l(1.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.zwzz, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div r1.x, r1.x, r1.y
add r4.xz, v1.yyxy, l(-0.500000, 0.000000, -0.499479, 0.000000)
mov r4.y, l(1.000000)
mad r1.yzw, -r3.xxyz, r0.xxxx, r2.yyzx
mad r2.xyz, -r4.xyzx, r1.xxxx, r2.xyzx
mul r3.xyz, r1.yzwy, r2.xyzx
mad r1.xyz, r1.wyzw, r2.yzxy, -r3.xyzx
dp3 r0.x, r1.xyzx, r1.xyzx
rsq r0.x, r0.x
mul r1.xyz, r0.xxxx, r1.xyzx
mad r1.xyz, r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
mad r2.xy, v1.xyxx, l(2.000000, 1.125000, 0.000000, 0.000000), l(-1.000000, -0.562500, 0.000000, 0.000000)
mov r2.z, l(1.000000)
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 1.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
dp3 r0.x, r2.xyzx, r1.xyzx
mad r1.x, -|r0.x|, |r0.x|, l(1.000000)
mad r1.xyzw, -r1.xxxx, l(0.444444, 0.081633, 0.444444, 0.081633), l(1.000000, 1.000000, 1.000000, 1.000000)
sqrt r1.xyzw, r1.xyzw
mul r2.xyzw, r1.xyzw, l(1.500000, 3.500000, 3.500000, 1.500000)
mad r1.y, r1.x, l(1.500000), -|r0.x|
mad r1.w, r1.x, l(1.500000), |r0.x|
div r1.y, r1.y, r1.w
mad r3.xy, r1.xzxx, l(1.500000, 3.500000, 0.000000, 0.000000), -r2.ywyy
add r2.xz, r2.yyzy, r2.xxwx
div r3.xy, r3.xyxx, r2.xzxx
mul r1.x, r1.y, r3.x
mad r1.y, -|r0.x|, l(1.500000), r1.z
mad r2.w, |r0.x|, l(1.500000), r1.z
div r1.y, r1.y, r2.w
mul r1.y, r3.y, r1.y
add r3.x, |r0.x|, |r0.x|
div r1.w, r3.x, r1.w
mul r3.y, r1.z, l(3.000000)
div r2.xz, r3.yyyy, r2.xxzx
mul r1.w, r1.w, r2.x
div r2.x, r3.x, r2.w
mul r2.x, r2.z, r2.x
mad r3.xyz, r1.zzzz, l(10.149761, 12.935970, 13.889147, 0.000000), l(3.141593, 3.141593, 3.141593, 0.000000)
mul r1.z, r1.w, r1.w
add r1.w, r1.x, r1.x
sincos null, r3.xyz, r3.xyzx
mul r4.xyz, r1.wwww, r3.xyzx
mad r4.xyz, r1.xxxx, r1.xxxx, -r4.xyzx
add r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xzw, r1.zzzz, r4.xxyz
mul r2.x, r2.x, r2.x
add r2.z, r1.y, r1.y
mul r3.xyz, r3.xyzx, r2.zzzz
mad r3.xyz, r1.yyyy, r1.yyyy, -r3.xyzx
add r3.xyz, r3.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r2.xzw, r2.xxxx, r3.xxyz
div r0.x, r2.y, |r0.x|
add r1.xyz, r1.xzwx, r2.xzwx
mul r1.xyz, r0.xxxx, r1.xyzx
mad_sat r1.xyz, -r1.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
add r2.xyz, r0.yzwy, r1.xyzx
mad r1.xyz, -r1.xyzx, r0.yzwy, r2.xyzx
dp3 r0.x, l(0.212600, 0.715200, 0.072200, 0.000000), r0.yzwy
add r1.xyz, -r0.yzwy, r1.xyzx
mad o0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
ret 
// Approximately 82 instruction slots used
