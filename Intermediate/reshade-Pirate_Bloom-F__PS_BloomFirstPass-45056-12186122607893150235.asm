//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
add r0.xyzw, r0.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
max r0.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mov r1.y, l(0)
mov r2.xyzw, r0.xyzw
mov r1.z, l(1)
loop 
  ige r1.w, r1.z, l(12)
  breakc_nz r1.w
  itof r1.w, r1.z
  mul r1.x, r1.w, l(0.002604)
  add r3.xy, r1.xyxx, v1.xyxx
  sample_indexable(texture2d)(float,float,float,float) r3.xyzw, r3.xyxx, t0.xyzw, s0
  add r3.xyzw, r3.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r3.xyzw, r2.xyzw, r3.xyzw
  add r1.xw, -r1.xxxy, v1.xxxy
  sample_indexable(texture2d)(float,float,float,float) r4.xyzw, r1.xwxx, t0.xyzw, s0
  add r4.xyzw, r4.xyzw, l(-0.500000, -0.500000, -0.500000, -0.500000)
  max r4.xyzw, r4.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
  add r2.xyzw, r3.xyzw, r4.xyzw
  iadd r1.z, r1.z, l(1)
endloop 
mul o0.xyzw, r2.xyzw, l(0.086957, 0.086957, 0.086957, 0.086957)
ret 
// Approximately 25 instruction slots used
