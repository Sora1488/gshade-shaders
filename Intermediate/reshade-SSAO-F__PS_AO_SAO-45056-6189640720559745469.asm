//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
lt r0.xy, l(1.000000, 1.000000, 0.000000, 0.000000), v1.xyxx
or r0.x, r0.y, r0.x
discard_nz r0.x
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
add r1.xyzw, v1.xyxy, l(0.000000, 0.001000, 0.001000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.y, r1.xyxx, t2.yxzw, s0, l(0.000000)
mad r0.z, -r0.y, l(999.000000), l(1000.000000)
div r0.y, r0.y, r0.z
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r1.zwzz, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
div r0.z, r0.z, r0.w
add r1.xy, -r0.xxxx, r0.zyzz
mul r1.xy, r1.xyxx, l(0.001000, 0.001000, 0.000000, 0.000000)
mov r1.z, l(0.000001)
dp3 r0.y, r1.xyzx, r1.xyzx
rsq r0.y, r0.y
mul r0.yzw, r0.yyyy, r1.xxyz
dp3 r0.y, r0.yzwy, l(0.333000, 0.333000, 0.333000, 0.000000)
mul o0.w, r0.y, l(0.100000)
lt r0.y, l(0.600000), r0.x
if_nz r0.y
  mov o0.xyz, l(1.000000,1.000000,1.000000,0)
else 
  mad r0.x, r0.x, l(-99.000000), l(101.000000)
  div r0.z, l(202.000000), r0.x
  mad r1.xy, v1.xyxx, l(2.216885, 1.246998, 0.000000, 0.000000), l(-1.107865, -0.622922, 0.000000, 0.000000)
  mul r0.xy, r0.zzzz, r1.xyxx
  mad r0.w, v1.y, l(543.309998), v1.x
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(493013.000000)
  frc r0.w, r0.w
  mul r0.w, r0.w, l(10.000000)
  deriv_rty_coarse r1.xyz, r0.zxyz
  dp3 r1.w, r1.xyzx, r1.xyzx
  rsq r1.w, r1.w
  mul r1.xyz, r1.wwww, r1.xyzx
  deriv_rtx_coarse r2.xyz, r0.yzxy
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, r2.xyzx
  mul r3.xyz, r1.xyzx, r2.xyzx
  mad r1.xyz, r1.zxyz, r2.yzxy, -r3.xyzx
  dp3 r1.w, r1.xyzx, r1.xyzx
  rsq r1.w, r1.w
  mul r1.xyz, r1.wwww, r1.xyzx
  max r1.w, r0.z, l(0.100000)
  div r1.w, l(2.300000), r1.w
  mov r2.xy, l(0,0,0,0)
  loop 
    itof r2.z, r2.y
    ge r2.w, r2.z, l(18.000000)
    breakc_nz r2.w
    add r2.z, r2.z, l(0.500000)
    mul r2.w, r1.w, r2.z
    mad r2.z, r2.z, l(1.744444), r0.w
    sincos r3.x, r4.x, r2.z
    mul r2.z, r2.w, l(0.055556)
    mov r4.y, r3.x
    mad r2.zw, r2.zzzz, r4.xxxy, v1.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r3.x, r2.zwzz, t2.xyzw, s0, l(0.000000)
    mad r3.y, -r3.x, l(999.000000), l(1000.000000)
    div r3.x, r3.x, r3.y
    mad r3.x, r3.x, l(-99.000000), l(101.000000)
    div r3.z, l(202.000000), r3.x
    mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 2.216885, 1.246998), l(0.000000, 0.000000, -1.107865, -0.622922)
    mul r3.xy, r3.zzzz, r2.zwzz
    add r3.xyz, -r0.xyzx, r3.xyzx
    dp3 r2.z, r3.xyzx, r3.xyzx
    dp3 r2.w, r3.xyzx, r1.xyzx
    mad r3.x, -r2.z, l(0.434783), l(1.000000)
    max r3.x, r3.x, l(0.000000)
    add r2.w, r2.w, l(-0.200000)
    rsq r2.z, r2.z
    mul r2.z, r2.z, r2.w
    max r2.z, r2.z, l(0.000000)
    mad r2.x, r3.x, r2.z, r2.x
    iadd r2.y, r2.y, l(1)
  endloop 
  mul r0.x, r2.x, l(0.001126)
  sqrt r0.x, r0.x
  add r0.x, -r0.x, l(1.000000)
  max r0.x, r0.x, l(0.000000)
  mul r0.x, r0.x, r0.x
  mul r0.y, r0.x, r0.x
  mul r0.x, r0.y, r0.x
  log r0.y, r0.x
  mul r0.y, r0.y, l(0.200000)
  exp r0.y, r0.y
  mul r0.x, r0.x, r0.x
  mul r0.x, r0.x, r0.x
  mad r0.x, r0.x, l(1.200000), r0.y
  mad r0.x, r0.x, l(0.454545), l(-1.000000)
  mad o0.xyz, r0.xxxx, l(2.500000, 2.500000, 2.500000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
endif 
ret 
// Approximately 97 instruction slots used
