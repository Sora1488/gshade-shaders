//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Timer;                       // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
mad r0.xyzw, v1.xyxy, l(1.000000, 1.000000, 1.000000, 1.000000), l(-0.004167, -0.000000, 0.004167, 0.000000)
mul r1.xyzw, r0.xyzw, l(239.999985, 135.000000, 239.999985, 135.000000)
frc r1.xyzw, |r1.xyzw|
mul r1.xyzw, r1.xyzw, l(0.004167, 0.007407, 0.004167, 0.007407)
lt r2.xyzw, r0.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r2.xyzw, r2.yyww, r2.xxzz
movc r1.xyzw, r2.xyzw, -r1.xyzw, r1.xyzw
add r0.xyzw, r0.xyzw, -r1.xyzw
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t0.xyzw, s0
add r1.xyz, -r0.xyzx, r1.xyzx
mul r2.xyzw, v1.xyxy, l(1.000000, 1.000000, 240.000000, 135.000000)
frc r2.zw, |r2.zzzw|
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t0.xyzw, s0
mul r2.xy, r2.zwzz, l(0.004167, 0.007407, 0.000000, 0.000000)
lt r2.zw, v1.xxxy, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r2.xy, r2.zwzz, -r2.xyxx, r2.xyxx
mul r2.xy, r2.xyxx, l(239.999985, 135.000000, 0.000000, 0.000000)
mad r0.xyz, r2.xxxx, r1.xyzx, r0.xyzx
mad r1.xyzw, v1.xyxy, l(1.000000, 1.000000, 1.000000, 1.000000), l(-0.000000, -0.007407, 0.000000, 0.007407)
mul r4.xyzw, r1.xyzw, l(239.999985, 135.000000, 239.999985, 135.000000)
frc r4.xyzw, |r4.xyzw|
mul r4.xyzw, r4.xyzw, l(0.004167, 0.007407, 0.004167, 0.007407)
lt r5.xyzw, r1.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
and r5.xyzw, r5.yyww, r5.xxzz
movc r4.xyzw, r5.xyzw, -r4.xyzw, r4.xyzw
add r1.xyzw, r1.xyzw, -r4.xyzw
sample_indexable(texture2d)(float,float,float,float) r2.xzw, r1.zwzz, t0.xwyz, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t0.xyzw, s0
add r2.xzw, -r1.xxyz, r2.xxzw
mad r1.xyz, r2.yyyy, r2.xzwx, r1.xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mad r0.xyz, r0.zyxz, l(0.500000, 0.500000, 0.500000, 0.000000), -r3.zyxz
ge r1.x, r0.y, r0.x
and r1.x, r1.x, l(0x3f800000)
add r2.xy, -r0.xyxx, r0.yxyy
mov r0.w, l(0.666667)
mov r2.zw, l(0,0,-1.000000,-1.000000)
mad r0.xyw, r1.xxxx, r2.yxyw, r0.yxyw
ge r1.x, r0.z, r0.y
and r1.x, r1.x, l(0x3f800000)
mov r2.xyw, r0.zxzy
add r2.xyzw, -r0.yxwz, r2.xyzw
mad r0.xyzw, r1.xxxx, r2.yxzw, r0.xywz
min r1.x, r0.x, r0.w
add r1.x, r0.y, -r1.x
mad r1.x, r1.x, l(6.000000), l(0.000000)
add r0.w, -r0.x, r0.w
div r0.w, r0.w, r1.x
add r0.z, r0.w, r0.z
mov r0.x, |r0.z|
mul r0.xy, r0.xyxx, l(6.283185, 6.283185, 0.000000, 0.000000)
mad r0.zw, v1.yyyx, l(0.000000, 0.000000, 1.000000, 1.000000), l(0.000000, 0.000000, 31.500000, 11.500000)
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 67.500000, 120.000000)
round_ni r0.zw, r0.zzzw
mul r0.zw, r0.zzzw, cb0[0].xxxx
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000015, 0.000008)
round_ni r1.xz, r0.zzwz
frc r2.xz, r0.zzwz
mul r0.z, cb0[0].x, l(0.001000)
frc r0.z, r0.z
mul r0.zw, r0.zzzz, l(0.000000, 0.000000, 300.000000, 100.000000)
round_ni r1.yw, r0.zzzw
frc r2.yw, r0.zzzw
add r3.xyzw, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
dp2 r0.z, r3.xyxx, l(12.989800, 4.141400, 0.000000, 0.000000)
dp2 r0.w, r3.zwzz, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r0.xyzw, null, r0.xyzw
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 43758.542969, 43758.542969)
frc r0.zw, r0.zzzw
add r3.xyzw, r1.xyxy, l(1.000000, 0.000000, 0.000000, 1.000000)
dp2 r3.z, r3.zwzz, l(12.989800, 4.141400, 0.000000, 0.000000)
dp2 r3.x, r3.xyxx, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r3.xy, null, r3.xzxx
mul r3.xy, r3.xyxx, l(43758.542969, 43758.542969, 0.000000, 0.000000)
frc r3.xy, r3.xyxx
add r0.z, r0.z, -r3.y
mul r4.xyzw, r2.xyzw, r2.xyzw
mad r2.xyzw, -r2.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r2.xyzw, r2.xyzw, r4.xyzw
mad r0.z, r2.x, r0.z, r3.y
dp2 r1.x, r1.xyxx, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r1.x, null, r1.x
mul r1.x, r1.x, l(43758.542969)
frc r1.x, r1.x
add r1.y, -r1.x, r3.x
mad r1.x, r2.x, r1.y, r1.x
add r0.z, r0.z, -r1.x
mad r0.z, r2.y, r0.z, r1.x
mul r1.x, r0.z, r0.z
add r3.xyzw, r1.zwzw, l(1.000000, 0.000000, 0.000000, 1.000000)
dp2 r0.z, r1.zwzz, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r0.z, null, r0.z
mul r0.z, r0.z, l(43758.542969)
frc r0.z, r0.z
dp2 r1.z, r3.xyxx, l(12.989800, 4.141400, 0.000000, 0.000000)
dp2 r1.w, r3.zwzz, l(12.989800, 4.141400, 0.000000, 0.000000)
sincos r1.zw, null, r1.zzzw
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 43758.542969, 43758.542969)
frc r1.zw, r1.zzzw
add r1.z, -r0.z, r1.z
mad r0.z, r2.z, r1.z, r0.z
add r0.w, r0.w, -r1.w
mad r0.w, r2.z, r0.w, r1.w
add r0.w, -r0.z, r0.w
mad r0.z, r2.w, r0.w, r0.z
mul r1.y, r0.z, r0.z
mul r0.zw, r1.xxxy, l(0.000000, 0.000000, 0.039063, 0.069444)
mad r0.xy, r0.xyxx, l(0.000521, 0.000926, 0.000000, 0.000000), r0.zwzz
mad r0.xy, v1.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000), r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t0.zyxw, s0
ge r1.z, r0.y, r0.x
and r1.z, r1.z, l(0x3f800000)
add r2.xy, -r0.xyxx, r0.yxyy
mov r0.w, l(0.666667)
mov r2.zw, l(0,0,-1.000000,-1.000000)
mad r0.xyw, r1.zzzz, r2.yxyw, r0.yxyw
ge r1.z, r0.z, r0.y
and r1.z, r1.z, l(0x3f800000)
mov r2.xyw, r0.zxzy
add r2.xyzw, -r0.yxwz, r2.xyzw
mad r0.xyzw, r1.zzzz, r2.xyzw, r0.yxwz
min r1.z, r0.y, r0.w
add r1.z, r0.x, -r1.z
mad r1.w, r1.z, l(6.000000), l(0.000000)
add r0.y, -r0.y, r0.w
div r0.y, r0.y, r1.w
add r0.y, r0.y, r0.z
add r0.yzw, |r0.yyyy|, l(0.000000, 1.000000, 0.666667, 0.333333)
frc r0.yzw, r0.yyzw
mad r0.yzw, r0.yyzw, l(0.000000, 6.000000, 6.000000, 6.000000), l(0.000000, -3.000000, -3.000000, -3.000000)
add_sat r0.yzw, |r0.yyzw|, l(0.000000, -1.000000, -1.000000, -1.000000)
add r0.yzw, r0.yyzw, l(0.000000, -1.000000, -1.000000, -1.000000)
add r1.w, r0.x, l(0.000000)
div r1.z, r1.z, r1.w
mad r1.y, r1.y, l(0.250000), r1.z
frc r1.z, |r1.y|
lt r1.y, r1.y, l(0.000000)
movc r1.y, r1.y, -r1.z, r1.z
mad r0.yzw, r1.yyyy, r0.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
mul r0.yzw, r0.yyzw, r0.xxxx
add r0.x, -r0.x, l(0.500000)
mul r0.x, r0.x, r0.x
mul r0.x, r1.x, r0.x
mad r0.x, r0.x, l(64.000000), l(4.000000)
round_ni r0.x, r0.x
mul r0.yzw, r0.xxxx, r0.yyzw
round_ni r0.yzw, r0.yyzw
div o0.xyz, r0.yzwy, r0.xxxx
mov o0.w, l(1.000000)
ret 
// Approximately 151 instruction slots used
