//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float GI_DIFFUSE_RADIUS;           // Offset:    0 Size:     4
//   float GI_DIFFUSE_STRENGTH;         // Offset:    4 Size:     4 [unused]
//   int GI_DIFFUSE_MIPLEVEL;           // Offset:    8 Size:     4
//   int GI_DIFFUSE_CURVE_MODE;         // Offset:   12 Size:     4 [unused]
//   int GI_DIFFUSE_BLEND_MODE;         // Offset:   16 Size:     4 [unused]
//   float GI_REFLECT_RADIUS;           // Offset:   20 Size:     4 [unused]
//   int GI_DIFFUSE_DEBUG;              // Offset:   24 Size:     4 [unused]
//   int GI_FOV;                        // Offset:   28 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__TexGINormalDepth             texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 12
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t4.xywz, s0
eq r1.x, r0.z, l(1.000000)
if_nz r1.x
  mov o0.xyzw, l(0,0,0,0)
  ret 
endif 
mad r1.xyz, r0.xywx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r2.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
add r0.w, -r0.z, l(1.000000)
mul r2.zw, r0.wwww, r2.xxxy
itof r0.w, cb0[1].w
mul r3.xy, r0.wwww, l(0.017453, 0.031028, 0.000000, 0.000000)
sincos r3.xy, null, r3.xyxx
mad r0.xy, -r2.zwzz, r3.xyxx, r2.xyxx
mul r2.xy, r0.zzzz, v1.xyxx
dp2 r0.w, r2.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.542969)
frc r0.w, r0.w
mad r4.x, r0.w, l(2.000000), l(-1.000000)
mul r2.xy, r2.xyxx, l(1.420000, 1.420000, 0.000000, 0.000000)
dp2 r0.w, r2.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.542969)
frc r0.w, r0.w
mad r4.y, r0.w, l(2.000000), l(-1.000000)
dp2 r0.w, r4.xyxx, r4.xyxx
rsq r0.w, r0.w
mul r2.xy, r0.wwww, r4.xyxx
dp2 r0.w, v1.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.542969)
frc r0.w, r0.w
mad r0.w, r0.w, l(0.500000), l(0.500000)
mul r2.xy, r0.wwww, r2.xyxx
log r0.w, |r0.z|
mul r0.w, r0.w, l(0.250000)
exp r0.w, r0.w
add r1.w, -cb0[0].x, l(1.000000)
mad r0.w, r0.w, r1.w, cb0[0].x
mul r2.zw, r0.wwww, l(0.000000, 0.000000, 0.000521, 0.000926)
itof r0.w, cb0[0].z
mov r4.xyzw, l(0,0,0,0)
mov r3.zw, r2.xxxy
mov r1.w, l(1)
loop 
  ilt r5.x, l(4), r1.w
  breakc_nz r5.x
  itof r5.x, r1.w
  mul r5.yz, r2.zzwz, r5.xxxx
  mov r6.xyz, r4.xyzx
  mov r7.xy, r3.zwzz
  mov r5.w, r4.w
  mov r6.w, l(0)
  loop 
    ige r7.z, r6.w, l(4)
    breakc_nz r7.z
    mul r7.zw, r7.yyyx, l(0.000000, 0.000000, -1.000000, 1.000000)
    mad r8.xy, r7.zwzz, r5.yzyy, v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r9.xyzw, r8.xyxx, t4.xywz, s0, r0.w
    eq r8.z, r9.z, l(1.000000)
    if_nz r8.z
      iadd r8.z, r6.w, l(1)
      mov r7.xy, r7.zwzz
      mov r6.w, r8.z
      continue 
    endif 
    mad r10.xyz, r9.xywx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r8.zw, r8.xxxy, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
    add r9.w, -r9.z, l(1.000000)
    mul r11.xy, r8.zwzz, r9.wwww
    mad r9.xy, -r11.xyxx, r3.xyxx, r8.zwzz
    add r9.xyz, -r0.xyzx, r9.xyzx
    dp3 r8.z, r1.xyzx, r10.xyzx
    max r8.z, r8.z, l(0.000000)
    add r8.z, -r8.z, l(1.000000)
    dp3 r8.w, r9.xyzx, r9.xyzx
    rsq r8.w, r8.w
    mul r9.xyw, r8.wwww, r9.xyxz
    dp3 r8.w, r9.xywx, r10.xyzx
    max r8.w, -r8.w, l(0.000000)
    mul r8.z, r8.w, r8.z
    mad_sat r8.w, r2.z, r5.x, -|r9.z|
    div r8.w, r8.w, r5.y
    mul r9.x, r8.w, r8.z
    sample_l_indexable(texture2d)(float,float,float,float) r9.yzw, r8.xyxx, t0.wxyz, s0, l(0.000000)
    mad r6.xyz, r9.yzwy, r9.xxxx, r6.xyzx
    mad r5.w, r8.z, r8.w, r5.w
    iadd r6.w, r6.w, l(1)
    mov r7.xy, r7.zwzz
  endloop 
  mov r4.xyz, r6.xyzx
  mov r4.w, r5.w
  mul r5.xy, r7.xyxx, l(0.707107, 0.707107, 0.000000, 0.000000)
  mad r3.z, r7.x, l(0.707107), -r5.y
  add r3.w, r5.y, r5.x
  iadd r1.w, r1.w, l(1)
endloop 
mul o0.xyzw, r4.xyzw, l(0.062500, 0.062500, 0.062500, 0.062500)
ret 
// Approximately 100 instruction slots used
