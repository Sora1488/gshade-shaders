//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Timer;                       // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V___TapeTex                     texture  float4          2d            t12      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 5
mul r0.x, v1.y, l(-1080.500000)
round_ni r0.x, r0.x
mul r0.yzw, cb0[0].xxxx, l(0.000000, 0.001000, 0.002000, 0.000500)
frc r1.xy, |r0.zyzz|
mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
lt r0.z, cb0[0].x, l(0.000000)
movc r1.xy, r0.zzzz, -r1.xyxx, r1.xyxx
mad r1.xy, cb0[0].xxxx, l(0.001000, 0.000500, 0.000000, 0.000000), -r1.xyxx
frc r1.zw, r1.xxxy
add r2.xyzw, -r1.zwxy, l(1.000000, 1.000000, 3.141593, 3.141593)
add r2.xy, r2.xyxx, r2.xyxx
mul r3.xy, r0.xxxx, l(-0.000925, -0.005815, 0.000000, 0.000000)
mad r0.x, r3.y, r2.x, r2.z
sincos null, r0.x, r0.x
add r0.x, r0.x, l(1.000000)
mul r0.x, r0.x, l(0.500000)
mad r1.x, r3.y, r1.z, r1.x
sincos null, r1.x, r1.x
add r1.x, r1.x, l(1.000000)
mul r1.x, r1.x, l(0.500000)
max r1.x, r1.x, l(0.500000)
mul r0.x, r0.x, r1.x
mul r0.x, r0.x, l(15.000000)
round_ni r0.x, r0.x
frc r0.yw, r0.wwwy
add r0.y, -r0.y, l(1.000000)
mul r1.xz, r0.xxyx, l(1.000000, 0.000000, 1080.500000, 0.000000)
frc r1.z, r1.z
mad r0.y, r0.y, l(1080.500000), -r1.z
div r1.z, r0.y, r1.x
frc r1.z, |r1.z|
mul r1.z, r1.x, r1.z
lt r2.x, r0.y, l(0.000000)
movc r1.z, r2.x, -r1.z, r1.z
div r1.z, r1.z, r1.x
add r2.x, -r1.z, l(1.000000)
div r1.x, l(1080.500000), r1.x
mul r2.z, r0.y, l(0.000925)
lt r2.z, r3.x, r2.z
mad r0.x, -r0.x, l(1.000000), r0.y
mul r0.x, r0.x, l(0.000925)
lt r0.x, r0.x, r3.x
and r0.x, r0.x, r2.z
mad r0.y, r3.x, r1.x, r2.x
round_ni r0.y, r0.y
div r0.y, r0.y, r1.x
div r1.x, -r1.z, r1.x
add r0.y, r0.y, -r1.x
movc r0.x, r0.x, r0.y, r3.x
mul r1.xz, cb0[0].xxxx, l(0.002400, 0.000000, 13.000001, 0.000000)
frc r0.y, |r1.x|
mul r0.y, r0.y, l(0.500000)
movc r0.y, r0.z, -r0.y, r0.y
mad r0.y, cb0[0].x, l(0.001200), -r0.y
frc r0.z, r0.y
add r1.x, -r0.z, l(1.000000)
add r1.x, r1.x, r1.x
add r2.x, -r0.y, l(3.141593)
mul r2.z, r0.x, l(6.283185)
mad r1.x, r2.z, r1.x, r2.x
sincos null, r1.x, r1.x
add r1.x, r1.x, l(1.000000)
mul r1.x, r1.x, l(0.500000)
mad r0.y, r2.z, r0.z, r0.y
sincos null, r0.y, r0.y
add r0.y, r0.y, l(1.000000)
mul r0.y, r0.y, l(0.500000)
max r0.y, r0.y, l(0.500000)
mul r0.y, r0.y, r1.x
mul r0.y, r0.y, l(8.000000)
round_ni r0.y, r0.y
mul r0.z, r0.y, l(1.000000)
mad r2.xz, cb0[0].xxxx, l(0.000450, 0.000000, -0.000350, 0.000000), l(0.500000, 0.000000, 0.250000, 0.000000)
frc r2.xz, r2.xxzx
add r2.xz, -r2.xxzx, l(1.000000, 0.000000, 1.000000, 0.000000)
mul r3.xy, r2.xzxx, l(1080.500000, 1080.500000, 0.000000, 0.000000)
frc r3.xy, r3.xyxx
mad r2.xz, r2.xxzx, l(1080.500000, 0.000000, 1080.500000, 0.000000), -r3.xxyx
div r1.x, r2.x, r0.z
frc r1.x, |r1.x|
mul r1.x, r0.z, r1.x
lt r3.xy, r2.xzxx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r1.x, r3.x, -r1.x, r1.x
div r1.x, r1.x, r0.z
add r3.x, -r1.x, l(1.000000)
div r0.z, l(1080.500000), r0.z
mul r3.zw, r2.xxxz, l(0.000000, 0.000000, 0.000925, 0.000925)
lt r3.z, r0.x, r3.z
mad r0.y, -r0.y, l(1.000000), r2.x
mul r0.y, r0.y, l(0.000925)
lt r0.y, r0.y, r0.x
and r0.y, r0.y, r3.z
mad r2.x, r0.x, r0.z, r3.x
round_ni r2.x, r2.x
div r2.x, r2.x, r0.z
div r0.z, -r1.x, r0.z
add r0.z, -r0.z, r2.x
movc r0.x, r0.y, r0.z, r0.x
mul r0.y, r0.x, l(6.283185)
mad r0.z, r0.y, r2.y, r2.w
sincos null, r0.z, r0.z
add r0.z, r0.z, l(1.000000)
mad r0.y, r0.y, r1.w, r1.y
sincos null, r0.y, r0.y
add r0.y, r0.y, l(1.000000)
mul r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
max r0.y, r0.y, l(0.500000)
mul r0.y, r0.y, r0.z
mul r0.y, r0.y, l(11.000000)
round_ni r0.y, r0.y
mul r0.z, r0.y, l(1.000000)
div r1.x, r2.z, r0.z
frc r1.x, |r1.x|
mul r1.x, r0.z, r1.x
movc r1.x, r3.y, -r1.x, r1.x
div r1.x, r1.x, r0.z
add r1.y, -r1.x, l(1.000000)
div r0.z, l(1080.500000), r0.z
lt r1.w, r0.x, r3.w
mad r0.y, -r0.y, l(1.000000), r2.z
mul r0.y, r0.y, l(0.000925)
lt r0.y, r0.y, r0.x
and r0.y, r0.y, r1.w
mad r1.y, r0.x, r0.z, r1.y
round_ni r1.y, r1.y
div r1.y, r1.y, r0.z
div r0.z, -r1.x, r0.z
add r0.z, -r0.z, r1.y
movc r0.z, r0.y, r0.z, r0.x
mul r1.x, r0.z, l(540.250000)
frc r1.x, |r1.x|
add r1.x, r1.x, r1.x
lt r1.y, r0.z, l(0.000000)
movc r1.x, r1.y, -r1.x, r1.x
lt r1.x, r1.x, l(1.000000)
sincos r1.y, null, r1.z
mad r1.y, r1.y, l(0.000260), v1.x
movc r1.x, r1.x, r1.y, v1.x
mad r1.y, r0.z, l(240.500000), r0.w
round_ni r1.y, r1.y
mul r1.zw, r0.wwww, l(0.000000, 0.000000, 0.004158, 0.070000)
mad r2.z, r1.y, l(0.004158), -r1.z
mul r0.w, r1.x, l(427.555542)
round_ni r2.y, r0.w
mul r0.w, r2.y, l(0.002339)
mov r3.x, l(0)
mov r0.x, r1.x
mov r0.y, l(0)
mov r1.y, l(0)
loop 
  ige r1.z, r1.y, l(20)
  breakc_nz r1.z
  itof r1.z, r1.y
  mul r3.z, r1.z, l(0.157080)
  mad r3.y, -r1.z, l(0.002339), r2.z
  sample_l_indexable(texture2d)(float,float,float,float) r1.z, r3.xyxx, t12.xzyw, s1, l(0.000000)
  lt r1.z, l(0.550000), r1.z
  sincos r3.y, null, r3.z
  round_z r3.z, r3.y
  mad r4.x, -r3.z, l(0.009356), r0.x
  add r4.y, r0.y, r3.y
  movc r0.xy, r1.zzzz, r4.xyxx, r0.xyxx
  iadd r1.y, r1.y, l(1)
endloop 
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xzxx, t0.xyzw, s1
dp3 r0.x, r1.xyzx, l(0.298900, 0.595900, 0.211500, 0.000000)
mul r0.z, r1.y, l(0.274400)
mad r0.z, r1.x, l(0.587000), -r0.z
mad r0.z, -r1.z, l(0.522900), r0.z
mul r1.y, r1.y, l(0.321600)
mad r1.x, r1.x, l(0.114000), -r1.y
mad r1.x, r1.z, l(0.311400), r1.x
mul r2.w, r2.y, l(0.002339)
sample_indexable(texture2d)(float,float,float,float) r1.yz, r2.wzww, t12.yxzw, s1
add r0.x, r0.x, r1.z
mad r3.xyz, r2.yzyy, l(4.490644, 1080.000000, 4.490644, 0.000000), r1.wwww
mul r3.xyz, r3.xyzx, l(443.897491, 397.297302, 491.187103, 0.000000)
frc r3.xyz, r3.xyzx
add r4.xyz, r3.yzxy, l(19.190001, 19.190001, 19.190001, 0.000000)
dp3 r1.z, r3.zxyz, r4.xyzx
add r3.xyz, r1.zzzz, r3.xyzx
add r1.zw, r3.yyyz, r3.xxxx
mul r1.zw, r3.zzzy, r1.zzzw
frc r1.zw, r1.zzzw
log r1.zw, r1.zzzw
mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.588235, 0.588235)
exp r1.zw, r1.zzzw
mad r1.zw, r1.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000), l(0.000000, 0.000000, -1.000000, -1.000000)
mul r1.zw, r0.xxxx, r1.zzzw
mad r3.x, r1.z, l(0.150000), r0.z
mad r3.y, r1.w, l(0.150000), r1.x
add r0.x, -r0.x, l(1.000000)
mad r0.z, -r1.y, l(0.050000), l(1.000000)
mad r0.x, -r0.x, r0.z, l(1.000000)
mov r1.x, r0.x
mov r1.y, l(0)
loop 
  ige r0.z, r1.y, l(10)
  breakc_nz r0.z
  itof r0.z, r1.y
  mad r2.x, -r0.z, l(0.002339), r0.w
  sample_l_indexable(texture2d)(float,float,float,float) r1.zw, r2.xzxx, t12.yzxw, s1, l(0.000000)
  lt r1.z, l(0.800000), r1.z
  if_nz r1.z
    add r1.z, -r1.w, l(1.000000)
    mul r1.z, r1.z, l(10.000000)
    ge r1.w, r1.z, r0.z
    div r0.z, r0.z, r1.z
    add r0.z, -r0.z, l(1.000000)
    and r0.z, r0.z, r1.w
    add r1.z, -r1.x, l(1.000000)
    mad r0.z, -r0.z, l(0.050000), l(1.000000)
    mad r1.x, -r1.z, r0.z, l(1.000000)
  endif 
  iadd r1.y, r1.y, l(1)
endloop 
lt r0.x, l(0.400000), r0.y
if_nz r0.x
  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
  mul r3.xy, r0.xxxx, r3.xyxx
endif 
add r0.x, r1.x, r3.x
add r0.x, r3.y, r0.x
mul r1.yz, r3.xxxx, l(0.000000, 0.272000, 0.647400, 0.000000)
mad r1.xy, r1.xxxx, l(0.956000, 0.621000, 0.000000, 0.000000), -r1.yzyy
mad r0.y, -r3.y, l(1.106000), r1.x
mad r0.z, r3.y, l(1.704600), r1.y
ge r1.xy, l(0.001042, 0.002778, 0.000000, 0.000000), v1.xyxx
ge r1.zw, v1.xxxy, l(0.000000, 0.000000, 0.998958, 0.997222)
or r0.w, r1.z, r1.x
or r0.w, r1.y, r0.w
or r0.w, r1.w, r0.w
lt r1.xyzw, l(0.001042, 0.985937, 0.002778, 0.974074), v1.xxyy
lt r2.xyzw, v1.xxxy, l(0.014063, 0.998958, 0.500000, 0.025926)
and r1.xyz, r1.xyzx, r2.xywx
or r1.x, r1.y, r1.x
add r2.xy, v1.xyxx, l(-0.001042, -0.002778, 0.000000, 0.000000)
mul r2.xy, r2.xyxx, l(76.799995, 43.200001, 0.000000, 0.000000)
add r3.xy, -v1.xyxx, l(0.998958, 0.997222, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(76.799995, 43.200001, 0.000000, 0.000000)
movc r1.y, r2.z, r2.x, r3.x
mul r2.xzw, r0.xxyz, r1.yyyy
movc r0.xyz, r1.xxxx, r2.xzwx, r0.xyzx
lt r1.xy, v1.yyyy, l(0.997222, 0.500000, 0.000000, 0.000000)
and r1.x, r1.x, r1.w
or r1.x, r1.x, r1.z
movc r1.y, r1.y, r2.y, r3.y
mul r1.yzw, r0.xxyz, r1.yyyy
movc r0.xyz, r1.xxxx, r1.yzwy, r0.xyzx
movc o0.xyz, r0.wwww, l(0,0,0,0), r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 252 instruction slots used
