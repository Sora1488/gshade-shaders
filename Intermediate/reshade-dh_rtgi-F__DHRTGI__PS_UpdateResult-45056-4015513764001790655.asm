//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__DHRTGI__smoothPass3Tex       texture  float4          2d            t24      1 
// __V__DHRTGI__smoothAOPass3Tex     texture  float4          2d            t26      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t24
dcl_resource_texture2d (float,float,float,float) t26
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 5
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div r0.w, r0.w, r1.x
lt r1.x, l(0.990000), r0.w
if_nz r1.x
  mov o0.xyz, r0.xyzx
  mov o0.w, l(1.000000)
  mov o1.xyzw, l(0,0,0,0)
  ret 
endif 
min r1.x, r0.z, r0.y
min r1.x, r0.x, r1.x
max r1.yz, r0.zzyz, r0.yyxy
max r1.yz, r0.xxzx, r1.yyzy
add r1.x, r1.x, r1.y
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t24.xyzw, s2, l(0.000000)
min r1.y, r2.z, r2.y
min r1.y, r1.y, r2.x
max r1.w, r2.z, r2.y
max r1.w, r1.w, r2.x
add r2.w, r1.y, r1.w
add r1.y, -r1.y, r1.w
ne r3.x, r1.y, l(0.000000)
add r3.yzw, -r2.zzxy, r1.wwww
div r3.yzw, r3.yyzw, r1.yyyy
add r3.yzw, -r3.wwyz, r3.yyzw
add r3.yzw, r3.yyzw, l(0.000000, 6.000000, 2.000000, 4.000000)
ge r4.xyz, r2.xyzx, r1.wwww
and r4.xyz, r4.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
mul r3.yzw, r3.yyzw, r4.xxyz
max r1.w, r3.y, r3.w
max r1.w, r1.w, r3.z
mul r1.w, r1.w, l(0.166667)
frc r4.x, r1.w
add r1.w, r2.w, l(-1.000000)
add r1.w, -|r1.w|, l(1.000000)
div r4.y, r1.y, r1.w
and r1.yw, r3.xxxx, r4.xxxy
sample_l_indexable(texture2d)(float,float,float,float) r3.x, v1.xyxx, t26.xyzw, s2, l(0.000000)
max r3.x, r1.z, r3.x
mad r1.x, r1.x, l(0.500000), l(0.100000)
rsq r1.x, r1.x
div r1.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.x
mul r3.y, r2.w, l(1.570796)
sincos r3.y, null, r3.y
mul r1.x, r1.x, |r3.y|
mad r3.yzw, r1.yyyy, l(0.000000, 6.000000, 6.000000, 6.000000), l(0.000000, -3.000000, -2.000000, -4.000000)
mad_sat r3.yzw, |r3.yyzw|, l(0.000000, 1.000000, -1.000000, -1.000000), l(0.000000, -1.000000, 2.000000, 2.000000)
mad r1.y, r1.x, l(2.000000), l(-1.000000)
add r1.y, -|r1.y|, l(1.000000)
mul r1.y, r1.w, r1.y
add r3.yzw, r3.yyzw, l(0.000000, -0.500000, -0.500000, -0.500000)
mad r3.yzw, r3.yyzw, r1.yyyy, r1.xxxx
add r1.x, -r1.z, l(1.000000)
add r1.y, r1.w, r1.x
mad r1.y, r2.w, l(0.500000), r1.y
mad r1.z, r1.z, l(2.000000), l(0.100000)
min r1.z, r1.z, l(1.000000)
dp2 r1.x, r1.xxxx, r1.wwww
add r1.w, -r1.w, l(1.000000)
mul r4.xyz, r0.xyzx, r1.wwww
mad r3.yzw, r1.xxxx, r3.yyzw, r4.xxyz
add r1.x, r2.y, r2.x
add r1.x, r2.z, r1.x
lt r1.w, l(0.000000), r1.x
lt r2.w, r1.z, r1.x
and r1.w, r1.w, r2.w
mul r4.xyz, r2.xyzx, r1.zzzz
div r4.xyz, r4.xyzx, r1.xxxx
movc r1.xzw, r1.wwww, r4.xxyz, r2.xxyz
mul r1.xzw, r3.yyzw, r1.xxzw
mul r1.xyz, r1.yyyy, r1.xzwx
mad r0.xyz, r0.xyzx, l(0.900000, 0.900000, 0.900000, 0.000000), r1.xyzx
mul_sat o0.xyz, r3.xxxx, r0.xyzx
mov o0.w, l(1.000000)
mov o1.x, r0.w
mov o1.yzw, l(0,0,0,1.000000)
ret 
// Approximately 79 instruction slots used
