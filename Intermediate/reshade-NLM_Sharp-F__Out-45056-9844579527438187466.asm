//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__DepthBufferTex               texture  float4          2d             t0      1 
// __V__BackBufferTex                texture  float4          2d             t2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 9
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t2.xyzw, s0
mov r1.xyz, l(0,0,0,0)
mov r0.w, l(0)
mov r2.y, l(-1.000000)
loop 
  lt r1.w, l(1.000000), r2.y
  breakc_nz r1.w
  mul r1.w, r2.y, r2.y
  mov r3.xyz, r1.xyzx
  mov r2.z, r0.w
  mov r2.x, l(-1.000000)
  loop 
    lt r2.w, l(1.000000), r2.x
    breakc_nz r2.w
    mov r2.w, l(0)
    mov r4.y, l(-0.500000)
    loop 
      lt r3.w, l(0.500000), r4.y
      breakc_nz r3.w
      add r5.y, r2.y, r4.y
      mov r6.x, r2.w
      mov r6.y, l(-0.500000)
      loop 
        lt r3.w, l(0.500000), r6.y
        breakc_nz r3.w
        add r5.x, r2.x, r6.y
        mad r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.000521, 0.000926), v1.xxxy
        sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t2.xyzw, s0, l(0.000000)
        mov_sat r7.xyzw, r7.xyzw
        mov r4.x, r6.y
        mad r4.xz, r4.xxyx, l(0.000521, 0.000000, 0.000926, 0.000000), v1.xxyx
        sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r4.xzxx, t2.xyzw, s0, l(0.000000)
        mov_sat r8.xyzw, r8.xyzw
        add r7.xyzw, -r7.xyzw, r8.xyzw
        dp4 r3.w, r7.xyzw, r7.xyzw
        add r6.x, r3.w, r6.x
        add r6.y, r6.y, l(1.000000)
      endloop 
      mov r2.w, r6.x
      add r4.y, r4.y, l(1.000000)
    endloop 
    mad r3.w, r2.x, r2.x, r1.w
    mul r3.w, r3.w, l(-0.200000)
    mad r3.w, r2.w, l(-1.250000), r3.w
    mul r3.w, r3.w, l(1.442695)
    exp r3.w, r3.w
    mad r4.xy, r2.xyxx, l(0.000521, 0.000926, 0.000000, 0.000000), v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t2.xyzw, s0, l(0.000000)
    mov_sat r4.xyz, r4.xyzx
    mad r3.xyz, r3.wwww, r4.xyzx, r3.xyzx
    add r2.z, r2.z, r3.w
    add r2.x, r2.x, l(1.000000)
  endloop 
  mov r1.xyz, r3.xyzx
  mov r0.w, r2.z
  add r2.y, r2.y, l(1.000000)
endloop 
div_sat r1.xyz, r1.xyzx, r0.wwww
add r1.xyz, r0.xyzx, -r1.xyzx
mul r1.xyz, r1.xyzx, l(1.937500, 1.937500, 1.937500, 0.000000)
add r2.xyzw, v1.xyxy, l(0.000000, -0.000926, -0.000521, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t2.xyzw, s0, l(0.000000)
dp3 r0.w, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t2.xyzw, s0, l(0.000000)
dp3 r1.w, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t2.xyzw, s0, l(0.000000)
dp3 r2.x, r2.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
add r3.xyzw, v1.xyxy, l(0.000521, 0.000000, 0.000000, 0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r2.yzw, r3.xyxx, t2.wxyz, s0, l(0.000000)
dp3 r2.y, r2.yzwy, l(0.212600, 0.715200, 0.072200, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t2.xyzw, s0, l(0.000000)
dp3 r2.z, r3.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
min r2.w, r2.y, r2.x
min r2.w, r1.w, r2.w
min r3.x, r0.w, r2.z
min r2.w, r2.w, r3.x
max r2.x, r2.y, r2.x
max r1.w, r1.w, r2.x
max r0.w, r0.w, r2.z
max r0.w, r0.w, r1.w
rcp r1.w, r0.w
add r0.w, -r0.w, l(1.000000)
min r0.w, r0.w, r2.w
mul_sat r0.w, r1.w, r0.w
mul r0.w, r0.w, l(0.625000)
mad r1.xyz, r0.wwww, r1.xyzx, r0.xyzx
sample_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t0.yzwx, s0
mad r0.w, r0.w, l(-0.999500), l(1.000000)
div_sat r0.w, l(0.000500), r0.w
add r0.xyz, r0.xyzx, -r1.xyzx
mad o0.xyz, r0.wwww, r0.xyzx, r1.xyzx
ret 
// Approximately 92 instruction slots used
