//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Depth_Map;                     // Offset:    0 Size:     4
//   float Depth_Map_Adjust;            // Offset:    4 Size:     4
//   bool Depth_Map_Flip;               // Offset:    8 Size:     4
//   bool No_Depth_Map;                 // Offset:   12 Size:     4
//   float Sharpness;                   // Offset:   16 Size:     4
//   bool CAM_IOB;                      // Offset:   20 Size:     4
//   bool CA_Mask_Boost;                // Offset:   24 Size:     4
//   bool CA_Removal;                   // Offset:   28 Size:     4
//   int B_Grounding;                   // Offset:   32 Size:     4
//   bool Slow_Mode;                    // Offset:   36 Size:     4
//   int Debug_View;                    // Offset:   40 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__DepthBufferTex               texture  float4          2d             t0      1 
// __V__BackBufferTex                texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 9
sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t2.xyzw, s0, l(0.000000)
ieq r1.xy, cb0[2].xxxx, l(2, 1, 0, 0)
movc r1.yz, r1.yyyy, l(0,0.000651,0.001157,0), l(0,0.000521,0.000926,0)
movc r1.xy, r1.xxxx, l(0.000781,0.001389,0,0), r1.yzyy
mov r2.xyz, l(0,0,0,0)
mov r0.w, cb0[2].y
mov r1.zw, l(0,0,0,-2)
loop 
  ilt r2.w, l(2), r1.w
  breakc_nz r2.w
  if_nz r0.w
    itof r3.x, r1.w
    mov r4.xyz, r2.xyzx
    mov r2.w, r1.z
    mov r3.z, l(-2)
    loop 
      ilt r3.w, l(2), r3.z
      breakc_nz r3.w
      itof r3.y, r3.z
      mul r3.yw, r1.xxxy, r3.xxxy
      mad r3.yw, r3.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000), v1.xxxy
      sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r3.ywyy, t2.xyzw, s0, l(0.000000)
      add r6.xyz, -r0.xyzx, r5.xyzx
      dp3 r3.y, r6.xyzx, r6.xyzx
      mul r3.y, r3.y, l(-11.541560)
      exp r3.y, r3.y
      mul r3.w, r3.y, l(1.595760)
      mad r2.w, r3.y, l(1.595760), r2.w
      mad r4.xyz, r3.wwww, r5.xyzx, r4.xyzx
      iadd r3.z, r3.z, l(1)
    endloop 
    mov r2.xyz, r4.xyzx
    mov r1.z, r2.w
  else 
    imul null, r3.x, r1.w, r1.w
    itof r3.x, r3.x
    mad r3.y, -r3.x, l(0.500000), l(1.000000)
    itof r3.x, r1.w
    mul r3.xy, r1.xyxx, r3.xyxx
    mad r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t2.xyzw, s0, l(0.000000)
    add r5.xyz, -r0.xyzx, r3.xyzx
    dp3 r3.w, r5.xyzx, r5.xyzx
    mul r3.w, r3.w, l(-11.541560)
    exp r3.w, r3.w
    mul r4.w, r3.w, l(1.595760)
    mad r1.z, r3.w, l(1.595760), r1.z
    mad r2.xyz, r4.wwww, r3.xyzx, r2.xyzx
  endif 
  iadd r1.w, r1.w, l(1)
endloop 
mul_sat r0.w, cb0[1].x, l(0.500000)
add r1.w, -v1.y, l(1.000000)
movc r3.y, cb0[0].z, r1.w, v1.y
mov r3.x, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.w, r3.xyxx, t0.yzwx, s0
div r2.w, l(0.125000), cb0[0].y
add r3.x, -r1.w, l(1.000000)
add r3.y, r2.w, l(-1.000000)
mad r1.w, r1.w, r3.y, l(1.000000)
div_sat r1.w, r2.w, r1.w
mad r3.x, r3.x, r3.y, l(1.000000)
div_sat r3.x, r2.w, r3.x
movc r4.x, cb0[0].x, r3.x, r1.w
add r3.xz, v1.xxyx, v1.xxyx
mad r1.w, v1.y, l(2.000000), l(-1.000000)
add r3.w, -r1.w, l(1.000000)
movc r5.y, cb0[0].z, r3.w, r1.w
mul r5.x, v1.x, l(2.000000)
sample_indexable(texture2d)(float,float,float,float) r1.w, r5.xyxx, t0.yzwx, s0
add r3.w, -r1.w, l(1.000000)
mad r1.w, r1.w, r3.y, l(1.000000)
div_sat r1.w, r2.w, r1.w
mad r3.w, r3.w, r3.y, l(1.000000)
div_sat r3.w, r2.w, r3.w
movc r4.y, cb0[0].x, r3.w, r1.w
movc r4.yz, cb0[0].wwww, l(0,0,0,0), r4.xxyx
if_z cb0[2].z
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, v1.xyxx, t2.xyzw, s0
  div_sat r2.xyz, r2.xyzx, r1.zzzz
  add r2.xyz, -r2.xyzx, r5.xyzx
  mul r1.z, cb0[1].x, l(3.100000)
  mul r2.xyz, r1.zzzz, r2.xyzx
  add r6.xyzw, v1.xyxy, l(0.000000, -0.000926, -0.000521, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t2.xyzw, s0, l(0.000000)
  dp3 r1.z, r7.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.zwzz, t2.xyzw, s0, l(0.000000)
  dp3 r1.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  dp3 r0.x, r0.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  add r6.xyzw, v1.xyxy, l(0.000521, 0.000000, 0.000000, 0.000926)
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r6.xyxx, t2.xyzw, s0, l(0.000000)
  dp3 r0.y, r7.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r6.zwzz, t2.xyzw, s0, l(0.000000)
  dp3 r0.z, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  min r3.w, r0.y, r0.x
  min r3.w, r1.w, r3.w
  min r4.w, r0.z, r1.z
  min r3.w, r3.w, r4.w
  max r0.x, r0.y, r0.x
  max r0.xy, r0.xzxx, r1.wzww
  max r0.x, r0.y, r0.x
  rcp r0.y, r0.x
  add r0.xz, -r0.xxxx, l(1.000000, 0.000000, 2.000000, 0.000000)
  min r0.xz, r0.xxzx, r3.wwww
  mul_sat r0.xy, r0.yyyy, r0.xzxx
  movc r0.x, cb0[1].y, r0.y, r0.x
  mad r0.y, r0.x, r0.x, -r0.x
  mad r0.y, r0.w, r0.y, r0.x
  movc_sat r0.x, cb0[1].z, r0.y, r0.x
  movc r0.x, cb0[1].w, l(1.000000), r0.x
  mov_sat r0.y, cb0[1].x
  mul r0.x, r0.y, r0.x
  mad r0.xyz, r0.xxxx, r2.xyzx, r5.xyzx
  add r2.xyz, -r0.xyzx, r5.xyzx
  mad o0.xyz, r4.yyyy, r2.xyzx, r0.xyzx
  ret 
else 
  ieq r0.x, cb0[2].z, l(1)
  if_nz r0.x
    mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyxx, t2.xyzw, s0, l(0.000000)
    mov r5.xyz, l(0,0,0,0)
    mov r0.z, cb0[2].y
    mov r1.zw, l(0,0,0,-2)
    loop 
      ilt r3.w, l(2), r1.w
      breakc_nz r3.w
      if_nz r0.z
        itof r6.x, r1.w
        mov r7.xyz, r5.xyzx
        mov r3.w, r1.z
        mov r4.y, l(-2)
        loop 
          ilt r4.w, l(2), r4.y
          breakc_nz r4.w
          itof r6.y, r4.y
          mul r6.yz, r1.xxyx, r6.xxyx
          mad r6.yz, r6.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), r0.xxyx
          sample_l_indexable(texture2d)(float,float,float,float) r6.yzw, r6.yzyy, t2.wxyz, s0, l(0.000000)
          add r8.xyz, -r2.xyzx, r6.yzwy
          dp3 r4.w, r8.xyzx, r8.xyzx
          mul r4.w, r4.w, l(-11.541560)
          exp r4.w, r4.w
          mul r5.w, r4.w, l(1.595760)
          mad r3.w, r4.w, l(1.595760), r3.w
          mad r7.xyz, r5.wwww, r6.yzwy, r7.xyzx
          iadd r4.y, r4.y, l(1)
        endloop 
        mov r5.xyz, r7.xyzx
        mov r1.z, r3.w
      else 
        imul null, r4.y, r1.w, r1.w
        itof r4.y, r4.y
        mad r6.y, -r4.y, l(0.500000), l(1.000000)
        itof r6.x, r1.w
        mul r4.yw, r1.xxxy, r6.xxxy
        mad r4.yw, r4.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000), r0.xxxy
        sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r4.ywyy, t2.xyzw, s0, l(0.000000)
        add r8.xyz, -r2.xyzx, r6.xyzx
        dp3 r4.y, r8.xyzx, r8.xyzx
        mul r4.y, r4.y, l(-11.541560)
        exp r4.y, r4.y
        mul r4.w, r4.y, l(1.595760)
        mad r1.z, r4.y, l(1.595760), r1.z
        mad r5.xyz, r4.wwww, r6.xyzx, r5.xyzx
      endif 
      iadd r1.w, r1.w, l(1)
    endloop 
    lt r0.xy, v1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    if_nz r0.y
      mad r0.y, -v1.y, l(2.000000), l(1.000000)
      movc r2.x, cb0[0].z, r0.y, r3.z
      mul r2.y, v1.x, l(2.000000)
      sample_indexable(texture2d)(float,float,float,float) r0.y, r2.yxyy, t0.yxzw, s0
      add r0.z, -r0.y, l(1.000000)
      mad r0.y, r0.y, r3.y, l(1.000000)
      mad r0.z, r0.z, r3.y, l(1.000000)
      div_sat r0.yz, r2.wwww, r0.yyzy
      movc r0.y, cb0[0].x, r0.z, r0.y
      mad r6.xyzw, v1.xyxy, l(2.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -0.000926, -0.000521, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r1.xyw, r6.xyxx, t2.xywz, s0, l(0.000000)
      dp3 r0.z, r1.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r1.xyw, r6.zwzz, t2.xywz, s0, l(0.000000)
      dp3 r1.x, r1.xywx, l(0.212600, 0.715200, 0.072200, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xzw, r3.xzxx, t2.xwyz, s0, l(0.000000)
      dp3 r1.y, r3.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
      mad r6.xyzw, v1.xyxy, l(2.000000, 2.000000, 2.000000, 2.000000), l(0.000521, 0.000000, 0.000000, 0.000926)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xzw, r6.xyxx, t2.xwyz, s0, l(0.000000)
      dp3 r1.w, r3.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
      sample_l_indexable(texture2d)(float,float,float,float) r3.xzw, r6.zwzz, t2.xwyz, s0, l(0.000000)
      dp3 r2.y, r3.xzwx, l(0.212600, 0.715200, 0.072200, 0.000000)
      min r3.x, r1.w, r1.y
      min r3.x, r1.x, r3.x
      min r3.z, r0.z, r2.y
      min r3.x, r3.z, r3.x
      max r1.y, r1.w, r1.y
      max r1.x, r1.y, r1.x
      max r0.z, r0.z, r2.y
      max r0.z, r0.z, r1.x
      rcp r1.x, r0.z
      add r1.yw, -r0.zzzz, l(0.000000, 1.000000, 0.000000, 2.000000)
      min r1.yw, r1.yyyw, r3.xxxx
      mul_sat r1.xy, r1.xxxx, r1.ywyy
      movc r0.z, cb0[1].y, r1.y, r1.x
      mad r1.x, r0.z, r0.z, -r0.z
      mad r0.w, r0.w, r1.x, r0.z
      movc_sat r0.z, cb0[1].z, r0.w, r0.z
      add r0.y, -r0.y, l(1.000000)
      add r0.z, r0.z, l(-1.000000)
      mad r0.y, r0.y, r0.z, l(1.000000)
      movc r0.y, cb0[1].w, l(1.000000), r0.y
      mad r2.z, v1.x, l(2.000000), l(-1.000000)
      sample_indexable(texture2d)(float,float,float,float) r0.z, r2.zxzz, t0.yzxw, s0
      add r0.w, -r0.z, l(1.000000)
      mad r0.z, r0.z, r3.y, l(1.000000)
      mad r0.w, r0.w, r3.y, l(1.000000)
      div_sat r0.zw, r2.wwww, r0.zzzw
      movc r0.z, cb0[0].x, r0.w, r0.z
      movc o0.xyz, r0.xxxx, r0.yyyy, r0.zzzz
      ret 
    else 
      mad r0.yz, v1.xxyx, l(0.000000, 2.000000, 2.000000, 0.000000), l(0.000000, 0.000000, -1.000000, 0.000000)
      sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t2.wxyz, s0
      add r0.yzw, r0.yyzw, l(0.000000, -1.000000, -0.000000, -1.000000)
      mad r0.yzw, r4.zzzz, r0.yyzw, l(0.000000, 1.000000, 0.000000, 1.000000)
      div_sat r1.xyz, r5.xyzx, r1.zzzz
      movc o0.xyz, r0.xxxx, r0.yzwy, r1.xyzx
      ret 
    endif 
  else 
    mov o0.xyz, r4.xxxx
    ret 
  endif 
endif 
ret 
// Approximately 235 instruction slots used
