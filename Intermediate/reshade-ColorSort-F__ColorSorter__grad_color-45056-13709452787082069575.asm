//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Buffer1;                       // Offset:    0 Size:     4 [unused]
//   uint RotationAngle;                // Offset:    4 Size:     4 [unused]
//   float BrightnessThresholdStart;    // Offset:    8 Size:     4 [unused]
//   float BrightnessThresholdEnd;      // Offset:   12 Size:     4 [unused]
//   float GradientStrength;            // Offset:   16 Size:     4
//   float MaskingNoise;                // Offset:   20 Size:     4 [unused]
//   float NoiseSize;                   // Offset:   24 Size:     4 [unused]
//   bool ReverseSort;                  // Offset:   28 Size:     4 [unused]
//   bool InvertMask;                   // Offset:   32 Size:     4 [unused]
//   bool ShowMask;                     // Offset:   36 Size:     4 [unused]
//   bool HotsamplingMode;              // Offset:   40 Size:     4 [unused]
//   int Buffer2;                       // Offset:   44 Size:     4 [unused]
//   bool FilterColor;                  // Offset:   48 Size:     4 [unused]
//   bool ShowSelectedHue;              // Offset:   52 Size:     4 [unused]
//   float Value;                       // Offset:   56 Size:     4 [unused]
//   float ValueRange;                  // Offset:   60 Size:     4 [unused]
//   float Hue;                         // Offset:   64 Size:     4 [unused]
//   float HueRange;                    // Offset:   68 Size:     4 [unused]
//   float Saturation;                  // Offset:   72 Size:     4 [unused]
//   float SaturationRange;             // Offset:   76 Size:     4 [unused]
//   int Buffer3;                       // Offset:   80 Size:     4 [unused]
//   bool FilterDepth;                  // Offset:   84 Size:     4 [unused]
//   float FocusDepth;                  // Offset:   88 Size:     4 [unused]
//   float FocusRangeDepth;             // Offset:   92 Size:     4 [unused]
//   bool Spherical;                    // Offset:   96 Size:     4 [unused]
//   int Sphere_FieldOfView;            // Offset:  100 Size:     4 [unused]
//   float Sphere_FocusHorizontal;      // Offset:  104 Size:     4 [unused]
//   float Sphere_FocusVertical;        // Offset:  108 Size:     4 [unused]
//   int Buffer4;                       // Offset:  112 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ColorSorter__texNoise        texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
mul r0.xy, v1.xyxx, l(0.468750, 0.625000, 0.000000, 0.000000)
frc r0.xy, r0.xyxx
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t6.xyzw, s1
mul r0.y, r0.x, l(12.566371)
sincos r0.y, null, r0.y
mad r0.x, r0.x, l(12.566371), r0.y
mad r0.x, r0.x, l(0.079577), l(-0.500000)
mul r0.xyz, r0.xxxx, cb0[1].xxxx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
mov r0.w, l(0)
add_sat o0.xyzw, r0.xyzw, r1.xyzw
ret 
// Approximately 12 instruction slots used
