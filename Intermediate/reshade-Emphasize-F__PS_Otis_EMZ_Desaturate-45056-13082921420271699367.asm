//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float FocusDepth;                  // Offset:    0 Size:     4
//   float FocusRangeDepth;             // Offset:    4 Size:     4
//   float FocusEdgeDepth;              // Offset:    8 Size:     4
//   bool Spherical;                    // Offset:   12 Size:     4
//   int Sphere_FieldOfView;            // Offset:   16 Size:     4
//   float Sphere_FocusHorizontal;      // Offset:   20 Size:     4
//   float Sphere_FocusVertical;        // Offset:   24 Size:     4
//   float3 BlendColor;                 // Offset:   32 Size:    12
//   float BlendFactor;                 // Offset:   44 Size:     4
//   float EffectFactor;                // Offset:   48 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
add r0.xy, v1.xyxx, -cb0[1].yzyy
mul r0.xy, r0.xyxx, l(1920.000000, 1080.000000, 0.000000, 0.000000)
mul r0.xy, r0.xyxx, r0.xyxx
add r0.x, r0.y, r0.x
sqrt r0.x, r0.x
itof r0.y, cb0[1].x
mul r0.y, r0.y, l(0.000521)
mul r0.x, r0.y, r0.x
mul r0.x, r0.x, l(0.017453)
sincos null, r0.x, r0.x
mul r0.y, cb0[0].x, cb0[0].x
sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
div r0.z, r0.z, r0.w
mad r0.y, r0.z, r0.z, r0.y
dp2 r0.w, cb0[0].xxxx, r0.zzzz
add r0.z, r0.z, -cb0[0].x
mad r0.x, -r0.w, r0.x, r0.y
sqrt r0.x, r0.x
movc r0.x, cb0[0].w, r0.x, |r0.z|
add r0.y, cb0[0].z, cb0[0].y
div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), r0.y
lt r0.y, r0.y, r0.x
mul_sat r0.x, r0.z, r0.x
mad r0.z, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r0.z
min r0.x, r0.x, l(1.000000)
movc r0.w, r0.y, l(1.000000), r0.x
mul_sat r1.x, r0.w, cb0[3].x
mov r2.w, l(0)
sample_indexable(texture2d)(float,float,float,float) r3.xyzw, v1.xyxx, t0.xyzw, s0
add r1.y, r3.y, r3.x
add r1.y, r3.z, r1.y
mul r0.xyz, r1.yyyy, l(0.333333, 0.333333, 0.333333, 0.000000)
mad r2.xyz, -r1.yyyy, l(0.333333, 0.333333, 0.333333, 0.000000), cb0[2].xyzx
mad r0.xyzw, cb0[2].wwww, r2.xyzw, r0.xyzw
add r0.xyzw, -r3.xyzw, r0.xyzw
mad o0.xyzw, r1.xxxx, r0.xyzw, r3.xyzw
ret 
// Approximately 40 instruction slots used
