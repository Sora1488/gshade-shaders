//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float DITHERAMOUNT;                // Offset:    0 Size:     4
//   int DITHERBIAS;                    // Offset:    4 Size:     4
//   float LEIFX_LINES;                 // Offset:    8 Size:     4
//   float LEIFX_PIXELWIDTH;            // Offset:   12 Size:     4 [unused]
//   float GAMMA_LEVEL;                 // Offset:   16 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0
mul r1.xyz, v1.xyyx, l(480.000000, 270.000000, 540.000000, 0.000000)
frc r1.xyz, |r1.xyzx|
mul r1.xy, r1.xyxx, l(4.000000, 4.000000, 0.000000, 0.000000)
lt r2.xy, v1.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r1.xy, r2.xyxx, -r1.xyxx, r1.xyxx
ftoi r1.xy, r1.xyxx
ishl r1.x, r1.x, l(2)
iadd r1.x, r1.y, r1.x
mul r0.y, r0.y, l(255.000000)
if_z r1.x
  mov r1.y, l(16)
else 
  ieq r1.w, r1.x, l(1)
  if_nz r1.w
    mov r1.y, l(4)
  else 
    ieq r1.w, r1.x, l(2)
    if_nz r1.w
      mov r1.y, l(13)
    else 
      ieq r1.w, r1.x, l(3)
      if_nz r1.w
        mov r1.y, l(1)
      else 
        ieq r1.w, r1.x, l(4)
        if_nz r1.w
          mov r1.y, l(8)
        else 
          ieq r1.w, r1.x, l(5)
          if_nz r1.w
            mov r1.y, l(12)
          else 
            ieq r1.w, r1.x, l(6)
            if_nz r1.w
              mov r1.y, l(5)
            else 
              ieq r1.w, r1.x, l(7)
              if_nz r1.w
                mov r1.y, l(9)
              else 
                ieq r1.w, r1.x, l(8)
                if_nz r1.w
                  mov r1.y, l(14)
                else 
                  ieq r3.xyzw, r1.xxxx, l(9, 10, 11, 12)
                  ieq r2.xzw, r1.xxxx, l(13, 0, 14, 15)
                  and r1.x, r2.w, l(11)
                  movc r1.x, r2.z, l(7), r1.x
                  movc r1.x, r2.x, l(10), r1.x
                  movc r1.x, r3.w, l(6), r1.x
                  movc r1.x, r3.z, l(3), r1.x
                  movc r1.x, r3.y, l(15), r1.x
                  movc r1.y, r3.x, l(2), r1.x
                endif 
              endif 
            endif 
          endif 
        endif 
      endif 
    endif 
  endif 
endif 
iadd r1.x, -r1.y, l(18)
ftoi r1.y, cb0[0].x
imad r1.x, r1.x, r1.y, cb0[0].y
itof r1.x, r1.x
mad r0.y, r1.x, l(0.500000), r0.y
mad r0.xz, r0.xxzx, l(255.000000, 0.000000, 255.000000, 0.000000), r1.xxxx
mul r0.xyz, r0.xyzx, l(0.125490, 0.250980, 0.125490, 0.000000)
round_ni r0.xyz, r0.xyzx
mul r1.x, cb0[0].z, l(0.100000)
add r1.y, r1.z, r1.z
movc r1.y, r2.y, -r1.y, r1.y
lt r1.y, r1.y, l(1.000000)
movc r1.x, r1.y, l(0), r1.x
mad o0.y, r0.y, l(0.015625), r1.x
mad o0.xz, r0.xxzx, l(0.031250, 0.000000, 0.031250, 0.000000), r1.xxxx
mov o0.w, r0.w
ret 
// Approximately 80 instruction slots used
