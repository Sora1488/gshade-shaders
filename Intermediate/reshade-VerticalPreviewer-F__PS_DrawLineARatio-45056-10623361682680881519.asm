//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool VPreToggle;                   // Offset:    0 Size:     4 [unused]
//   int cLayerVPre_Angle;              // Offset:    4 Size:     4 [unused]
//   float cLayerVPre_Scale;            // Offset:    8 Size:     4 [unused]
//   float cLayerVPre_PosX;             // Offset:   12 Size:     4 [unused]
//   float cLayerVPre_PosY;             // Offset:   16 Size:     4 [unused]
//   int cLayerVPre_Composition;        // Offset:   20 Size:     4 [unused]
//   float4 UIGridColor;                // Offset:   32 Size:    16 [unused]
//   float UIGridLineWidth;             // Offset:   48 Size:     4 [unused]
//   int cLayerVPre_CompositionARatio;  // Offset:   52 Size:     4
//   float4 UIGridColorARatio;          // Offset:   64 Size:    16
//   float UIGridLineWidthARatio;       // Offset:   80 Size:     4
//   float cLayer_Blend_BGFill;         // Offset:   84 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__texDraw                      texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[6], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t6.xyzw, s0
switch cb0[3].y
  case l(1)
  eq r1.x, v1.y, l(-1.000000)
  mad r1.yz, cb0[5].xxxx, l(0.000000, 0.000521, 0.000521, 0.000000), l(0.000000, 0.125000, 0.875000, 0.000000)
  ge r1.yz, r1.yyzy, v1.xxxx
  mad r2.xy, -cb0[5].xxxx, l(0.000521, 0.000521, 0.000000, 0.000000), l(0.125000, 0.875000, 0.000000, 0.000000)
  ge r2.xy, v1.xxxx, r2.xyxx
  and r1.yz, r1.yyzy, r2.xxyx
  mad r1.w, cb0[5].x, l(0.000926), v1.y
  ge r1.w, r1.w, v1.y
  and r1.yz, r1.wwww, r1.yyzy
  mad r1.w, -cb0[5].x, l(0.000926), v1.y
  ge r1.w, v1.y, r1.w
  and r1.yz, r1.wwww, r1.yyzy
  movc r2.xyz, r1.yyyy, cb0[4].xyzx, r0.xyzx
  movc r2.xyz, r1.xxxx, r0.xyzx, r2.xyzx
  movc r1.yzw, r1.zzzz, cb0[4].xxyz, r2.xxyz
  movc r1.xyz, r1.xxxx, r0.xyzx, r1.yzwy
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad r0.xyz, cb0[4].wwww, r1.xyzx, r0.xyzx
  break 
  case l(2)
  eq r1.x, v1.y, l(-1.000000)
  mad r1.yz, cb0[5].xxxx, l(0.000000, 0.000521, 0.000521, 0.000000), l(0.000000, 0.175000, 0.825000, 0.000000)
  ge r1.yz, r1.yyzy, v1.xxxx
  mad r2.xy, -cb0[5].xxxx, l(0.000521, 0.000521, 0.000000, 0.000000), l(0.175000, 0.825000, 0.000000, 0.000000)
  ge r2.xy, v1.xxxx, r2.xyxx
  and r1.yz, r1.yyzy, r2.xxyx
  mad r1.w, cb0[5].x, l(0.000926), v1.y
  ge r1.w, r1.w, v1.y
  and r1.yz, r1.wwww, r1.yyzy
  mad r1.w, -cb0[5].x, l(0.000926), v1.y
  ge r1.w, v1.y, r1.w
  and r1.yz, r1.wwww, r1.yyzy
  movc r2.xyz, r1.yyyy, cb0[4].xyzx, r0.xyzx
  movc r2.xyz, r1.xxxx, r0.xyzx, r2.xyzx
  movc r1.yzw, r1.zzzz, cb0[4].xxyz, r2.xxyz
  movc r1.xyz, r1.xxxx, r0.xyzx, r1.yzwy
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad r0.xyz, cb0[4].wwww, r1.xyzx, r0.xyzx
  break 
  case l(3)
  eq r1.x, v1.y, l(-1.000000)
  mad r1.yz, cb0[5].xxxx, l(0.000000, 0.000521, 0.000521, 0.000000), l(0.000000, 0.345000, 0.655000, 0.000000)
  ge r1.yz, r1.yyzy, v1.xxxx
  mad r2.xy, -cb0[5].xxxx, l(0.000521, 0.000521, 0.000000, 0.000000), l(0.345000, 0.655000, 0.000000, 0.000000)
  ge r2.xy, v1.xxxx, r2.xyxx
  and r1.yz, r1.yyzy, r2.xxyx
  mad r1.w, cb0[5].x, l(0.000926), v1.y
  ge r1.w, r1.w, v1.y
  and r1.yz, r1.wwww, r1.yyzy
  mad r1.w, -cb0[5].x, l(0.000926), v1.y
  ge r1.w, v1.y, r1.w
  and r1.yz, r1.wwww, r1.yyzy
  movc r2.xyz, r1.yyyy, cb0[4].xyzx, r0.xyzx
  movc r2.xyz, r1.xxxx, r0.xyzx, r2.xyzx
  movc r1.yzw, r1.zzzz, cb0[4].xxyz, r2.xxyz
  movc r1.xyz, r1.xxxx, r0.xyzx, r1.yzwy
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad r0.xyz, cb0[4].wwww, r1.xyzx, r0.xyzx
  break 
  case l(4)
  eq r1.x, v1.y, l(-1.000000)
  mad r1.yz, cb0[5].xxxx, l(0.000000, 0.000521, 0.000521, 0.000000), l(0.000000, 0.257000, 0.743000, 0.000000)
  ge r1.yz, r1.yyzy, v1.xxxx
  mad r2.xy, -cb0[5].xxxx, l(0.000521, 0.000521, 0.000000, 0.000000), l(0.257000, 0.743000, 0.000000, 0.000000)
  ge r2.xy, v1.xxxx, r2.xyxx
  and r1.yz, r1.yyzy, r2.xxyx
  mad r1.w, cb0[5].x, l(0.000926), v1.y
  ge r1.w, r1.w, v1.y
  and r1.yz, r1.wwww, r1.yyzy
  mad r1.w, -cb0[5].x, l(0.000926), v1.y
  ge r1.w, v1.y, r1.w
  and r1.yz, r1.wwww, r1.yyzy
  movc r2.xyz, r1.yyyy, cb0[4].xyzx, r0.xyzx
  movc r2.xyz, r1.xxxx, r0.xyzx, r2.xyzx
  movc r1.yzw, r1.zzzz, cb0[4].xxyz, r2.xxyz
  movc r1.xyz, r1.xxxx, r0.xyzx, r1.yzwy
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad r0.xyz, cb0[4].wwww, r1.xyzx, r0.xyzx
  break 
  case l(5)
  eq r1.x, v1.y, l(-1.000000)
  mad r1.yz, cb0[5].xxxx, l(0.000000, 0.000521, 0.000521, 0.000000), l(0.000000, 0.250000, 0.750000, 0.000000)
  ge r1.yz, r1.yyzy, v1.xxxx
  mad r2.xy, -cb0[5].xxxx, l(0.000521, 0.000521, 0.000000, 0.000000), l(0.250000, 0.750000, 0.000000, 0.000000)
  ge r2.xy, v1.xxxx, r2.xyxx
  and r1.yz, r1.yyzy, r2.xxyx
  mad r1.w, cb0[5].x, l(0.000926), v1.y
  ge r1.w, r1.w, v1.y
  and r1.yz, r1.wwww, r1.yyzy
  mad r1.w, -cb0[5].x, l(0.000926), v1.y
  ge r1.w, v1.y, r1.w
  and r1.yz, r1.wwww, r1.yyzy
  movc r2.xyz, r1.yyyy, cb0[4].xyzx, r0.xyzx
  movc r2.xyz, r1.xxxx, r0.xyzx, r2.xyzx
  movc r1.yzw, r1.zzzz, cb0[4].xxyz, r2.xxyz
  movc r1.xyz, r1.xxxx, r0.xyzx, r1.yzwy
  add r1.xyz, -r0.xyzx, r1.xyzx
  mad r0.xyz, cb0[4].wwww, r1.xyzx, r0.xyzx
  break 
  default 
  break 
endswitch 
mov o0.xyz, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 108 instruction slots used
