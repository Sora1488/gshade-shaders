//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float AO_TEXSCALE;                 // Offset:    0 Size:     4
//   float AO_SHARPNESS;                // Offset:    4 Size:     4 [unused]
//   bool AO_SHARPNESS_DETECT;          // Offset:    8 Size:     4 [unused]
//   int AO_BLUR_STEPS;                 // Offset:   12 Size:     4 [unused]
//   int AO_DEBUG;                      // Offset:   16 Size:     4 [unused]
//   bool AO_LUMINANCE_CONSIDERATION;   // Offset:   20 Size:     4 [unused]
//   float AO_LUMINANCE_LOWER;          // Offset:   24 Size:     4 [unused]
//   float AO_LUMINANCE_UPPER;          // Offset:   28 Size:     4 [unused]
//   float AO_FADE_START;               // Offset:   32 Size:     4 [unused]
//   float AO_FADE_END;                 // Offset:   36 Size:     4 [unused]
//   int iSSAOSamples;                  // Offset:   40 Size:     4 [unused]
//   bool iSSAOSmartSampling;           // Offset:   44 Size:     4 [unused]
//   float fSSAOSamplingRange;          // Offset:   48 Size:     4 [unused]
//   float fSSAODarkeningAmount;        // Offset:   52 Size:     4 [unused]
//   float fSSAOBrighteningAmount;      // Offset:   56 Size:     4 [unused]
//   int iRayAOSamples;                 // Offset:   60 Size:     4 [unused]
//   float fRayAOSamplingRange;         // Offset:   64 Size:     4 [unused]
//   float fRayAOMaxDepth;              // Offset:   68 Size:     4 [unused]
//   float fRayAOMinDepth;              // Offset:   72 Size:     4 [unused]
//   float fRayAOPower;                 // Offset:   76 Size:     4 [unused]
//   int iHBAOSamples;                  // Offset:   80 Size:     4 [unused]
//   float fHBAOSamplingRange;          // Offset:   84 Size:     4 [unused]
//   float fHBAOAmount;                 // Offset:   88 Size:     4 [unused]
//   float fHBAOClamp;                  // Offset:   92 Size:     4 [unused]
//   float fHBAOAttenuation;            // Offset:   96 Size:     4 [unused]
//   int iSSGISamples;                  // Offset:  100 Size:     4
//   float fSSGISamplingRange;          // Offset:  104 Size:     4
//   float fSSGIIlluminationMult;       // Offset:  108 Size:     4
//   float fSSGIOcclusionMult;          // Offset:  112 Size:     4
//   float fSSGIModelThickness;         // Offset:  116 Size:     4
//   float fSSGISaturation;             // Offset:  120 Size:     4
//   float iSAOSamples;                 // Offset:  124 Size:     4 [unused]
//   float fSAOIntensity;               // Offset:  128 Size:     4 [unused]
//   float fSAOClamp;                   // Offset:  132 Size:     4 [unused]
//   float fSAORadius;                  // Offset:  136 Size:     4 [unused]
//   float fSAOBias;                    // Offset:  140 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texHDR3                      texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -0.137648, 0.284202, 0.516250, 0},
                              { -0.626618, 0.459412, 0.244334, 0},
                              { -0.890314, -0.058654, 0.101482, 0},
                              { 0.287142, 0.851168, 0.157460, 0},
                              { -0.152525, -0.387012, 0.653892, 0},
                              { 0.697870, -0.217677, 0.563764, 0},
                              { 0.734301, 0.377433, 0.634728, 0},
                              { 0.140880, -0.889150, 0.246765, 0},
                              { -0.664262, -0.543601, 0.564232, 0},
                              { -0.324815, -0.093939, 0.003569, 0},
                              { -0.120858, 0.915206, 0.638453, 0},
                              { -0.452815, -0.965942, 0.395655, 0},
                              { -0.605974, 0.771908, 0.704962, 0},
                              { -0.688625, -0.538031, 0.348286, 0},
                              { 0.538031, -0.217677, 0.748404, 0},
                              { 0.734301, 0.999934, 0.230486, 0},
                              { -0.997607, -0.796926, 0.004316, 0},
                              { -0.577536, 0.284202, 0.542373, 0},
                              { -0.626618, 0.911518, 0.502570, 0},
                              { -0.298189, -0.086542, 0.406666, 0},
                              { 0.916124, 0.851168, 0.265420, 0},
                              { -0.152525, -0.071040, 0.886518, 0},
                              { 0.702279, -0.823825, 0.950557, 0},
                              { 0.602507, 0.645259, 0.993658, 0} }
dcl_constantbuffer CB0[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
div r0.xy, v1.xyxx, cb0[0].xxxx
lt r0.zw, l(0.000000, 0.000000, 1.000000, 1.000000), r0.xxxy
or r0.z, r0.w, r0.z
discard_nz r0.z
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.xyxx, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
div r0.z, r0.z, r0.w
lt r0.w, l(0.999900), r0.z
if_nz r0.w
  mov o0.xyzw, l(0,0,0,1.000000)
else 
  mad r1.xy, r0.yxyy, l(-2.000000, 2.000000, 0.000000, 0.000000), l(1.000000, -1.000000, 0.000000, 0.000000)
  mul r1.xy, r0.zzzz, r1.xyxx
  mul r1.xy, r1.xyxx, l(0.767327, 0.431621, 0.000000, 0.000000)
  deriv_rtx_coarse r2.yz, r1.yyxy
  deriv_rtx_coarse r2.x, r0.z
  deriv_rty_coarse r1.xz, r1.xxyx
  deriv_rty_coarse r1.y, r0.z
  mul r3.xyz, r1.xyzx, r2.xyzx
  mad r1.xyz, r2.zxyz, r1.yzxy, -r3.xyzx
  dp3 r0.w, r1.xyzx, r1.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, r1.xyzx
  dp2 r0.w, r0.xyxx, l(25.979601, 156.466003, 0.000000, 0.000000)
  sincos r0.w, null, r0.w
  mul r0.w, r0.w, l(43758.542969)
  frc r2.x, r0.w
  mad r0.w, -r2.x, r2.x, l(1.000000)
  sqrt r2.y, r0.w
  mul r3.xyz, r0.zzzz, l(0.431621, 0.767327, 5000.000000, 0.000000)
  mul r0.zw, cb0[6].zzzz, l(0.000000, 0.000000, 0.000521, 0.000926)
  div r0.zw, r3.xxxy, r0.zzzw
  mov r1.w, -r1.y
  div r1.xy, r1.xwxx, r0.zwzz
  mad r0.xy, r1.xyxx, l(1.000000, 1.777778, 0.000000, 0.000000), r0.xyxx
  mul r1.x, r1.z, cb0[6].z
  mad r1.xy, r1.xxxx, l(5.000000, 20.000000, 0.000000, 0.000000), r3.zzzz
  mov r3.xyz, l(0,0,0,0)
  mov r1.zw, l(0,0,0,0)
  mov r2.zw, l(0,0,0,0)
  loop 
    ige r3.w, r2.w, cb0[6].y
    breakc_nz r3.w
    dp4 r3.w, icb[r2.w + 0].xxyy, r2.xxyy
    mad r4.xy, r2.xyxx, -r3.wwww, icb[r2.w + 0].xyxx
    div r4.xy, r4.xyxx, r0.zwzz
    mad r4.xy, r4.xyxx, l(1.000000, 1.777778, 0.000000, 0.000000), r0.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r3.w, r4.xyxx, t2.yzwx, s0, l(0.000000)
    mad r4.z, -r3.w, l(999.000000), l(1000.000000)
    div r3.w, r3.w, r4.z
    mul r4.z, r3.w, l(5000.000000)
    mul r4.w, cb0[6].z, icb[r2.w + 0].z
    mul r5.x, r4.w, l(10.000000)
    mad r5.yz, r4.wwww, l(0.000000, 5.000000, 20.000000, 0.000000), r1.xxyx
    mad r3.w, -r3.w, l(5000.000000), r5.y
    max r5.y, r3.w, l(0.000000)
    min r5.y, r5.x, r5.y
    add r5.y, r1.z, r5.y
    add r3.w, r3.w, -cb0[7].y
    max r3.w, r3.w, l(0.000000)
    min r3.w, r5.x, r3.w
    add r1.z, -r3.w, r5.y
    lt r3.w, r4.z, r5.z
    mad r5.x, -r4.w, l(20.000000), r1.y
    lt r4.z, r5.x, r4.z
    and r3.w, r3.w, r4.z
    if_nz r3.w
      sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t10.xyzw, s0, l(0.000000)
      add r3.xyz, r3.xyzx, r4.xyzx
    endif 
    add r1.w, r1.w, l(1.000000)
    mad r2.z, r4.w, l(10.000000), r2.z
    iadd r2.w, r2.w, l(1)
  endloop 
  mul r0.x, r1.w, l(5.000000)
  div r0.xyz, r3.xyzx, r0.xxxx
  div r0.w, r1.z, r2.z
  mul r1.xyz, r0.xyzx, cb0[6].wwww
  mad o0.w, -r0.w, cb0[7].x, l(1.000000)
  dp3 r0.w, r1.xyzx, l(0.333000, 0.333000, 0.333000, 0.000000)
  mad r0.xyz, r0.xyzx, cb0[6].wwww, -r0.wwww
  mad o0.xyz, cb0[7].zzzz, r0.xyzx, r0.wwww
endif 
ret 
// Approximately 84 instruction slots used
