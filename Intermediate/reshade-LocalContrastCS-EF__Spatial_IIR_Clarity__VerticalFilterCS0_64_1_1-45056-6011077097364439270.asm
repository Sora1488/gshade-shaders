//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__Spatial_IIR_Clarity__Luma    texture  float4          2d             t2      1 
// V__Spatial_IIR_Clarity__wBlur0        UAV   float          2d             u1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_texture2d (float,float,float,float) t2
dcl_uav_typed_texture2d (float,float,float,float) u1
dcl_input vThreadID.xy
dcl_temps 4
dcl_thread_group 64, 1, 1
ult r0.x, vThreadID.y, l(9)
if_nz r0.x
  ishl r0.x, vThreadID.y, l(7)
  utof r1.x, vThreadID.x
  utof r1.y, r0.x
  add r0.xyz, r1.xyyx, l(0.500000, 0.500000, -127.500000, 0.000000)
  ftoi r1.xy, r0.xzxx
  mov r1.z, l(0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzz, t2.yzxw
  lt r0.w, r0.x, l(1920.000000)
  ftoi r2.x, r0.x
  mov r2.zw, l(0,0,0,0)
  mov r0.x, r0.z
  mov r1.y, l(-127)
  loop 
    ige r1.z, r1.y, l(128)
    breakc_nz r1.z
    itof r1.z, r1.y
    add r1.z, r0.y, r1.z
    ftoi r2.y, r1.z
    ld_indexable(texture2d)(float,float,float,float) r2.y, r2.xyzw, t2.yxzw
    add r3.x, -r0.x, r2.y
    add r3.x, -|r3.x|, l(1.000000)
    mul r3.y, |r3.x|, |r3.x|
    mul r3.y, r3.y, r3.y
    mul r3.x, r3.y, |r3.x|
    add r3.y, r0.x, -r2.y
    mad r0.x, r3.x, r3.y, r2.y
    ige r2.y, r1.y, l(0)
    and r2.y, r0.w, r2.y
    if_nz r2.y
      ftoi r1.w, r1.z
      store_uav_typed u1.xyzw, r1.xwww, r0.xxxx
    endif 
    iadd r1.y, r1.y, l(1)
  endloop 
else 
  ishl r0.x, vThreadID.y, l(7)
  iadd r0.x, r0.x, l(-1024)
  utof r1.x, vThreadID.x
  utof r1.y, r0.x
  add r0.xyzw, r1.xyyx, l(0.500000, 0.500000, 128.500000, 1920.500000)
  ftoi r1.xy, r0.xzxx
  mov r1.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.z, r1.xyzw, t2.yzxw
  ftoi r1.x, r0.w
  ftoi r2.x, r0.x
  mov r2.zw, l(0,0,0,0)
  mov r0.x, r0.z
  mov r0.w, l(127)
  loop 
    ige r3.x, l(-128), r0.w
    breakc_nz r3.x
    itof r3.x, r0.w
    add r3.x, r0.y, r3.x
    ftoi r2.y, r3.x
    ld_indexable(texture2d)(float,float,float,float) r2.y, r2.xyzw, t2.yxzw
    add r3.y, -r0.x, r2.y
    add r3.y, -|r3.y|, l(1.000000)
    mul r3.z, |r3.y|, |r3.y|
    mul r3.z, r3.z, r3.z
    mul r3.y, r3.z, |r3.y|
    add r3.z, r0.x, -r2.y
    mad r0.x, r3.y, r3.z, r2.y
    ige r2.y, l(0), r0.w
    if_nz r2.y
      ftoi r1.yzw, r3.xxxx
      store_uav_typed u1.xyzw, r1.xyzw, r0.xxxx
    endif 
    iadd r0.w, r0.w, l(-1)
  endloop 
endif 
ret 
// Approximately 73 instruction slots used
