//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 coordinates;                // Offset:    0 Size:     8
//   float frame_rate;                  // Offset:    8 Size:     4 [unused]
//   float2 anim_rate;                  // Offset:   16 Size:     8
//   float min_depth;                   // Offset:   24 Size:     4
//   float3 border_color;               // Offset:   32 Size:    12
//   float opacity;                     // Offset:   44 Size:     4
//   float blending_amount;             // Offset:   48 Size:     4
//   int render_type;                   // Offset:   52 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texColorBuffer               texture  float4          2d             t4      1 
// __V__ssTexture                    texture  float4          2d             t6      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[4], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 8
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t4.xyzw, s1
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div r0.w, r0.w, r1.x
lt r0.w, cb0[1].z, r0.w
if_nz r0.w
  mad r1.xy, -cb0[0].xyxx, l(0.500000, 0.500000, 0.000000, 0.000000), v1.xyxx
  dp2 r0.w, cb0[0].xyxx, cb0[0].xyxx
  sqrt r0.w, r0.w
  add r2.xyzw, cb0[0].xyxy, l(-1.000000, -0.000000, -0.000000, -1.000000)
  dp2 r1.w, r2.xyxx, r2.xyxx
  sqrt r1.w, r1.w
  dp2 r2.x, r2.zwzz, r2.zwzz
  add r2.yz, cb0[0].xxyx, l(0.000000, -1.000000, -1.000000, 0.000000)
  dp2 r2.y, r2.yzyy, r2.yzyy
  sqrt r2.xy, r2.xyxx
  max r0.w, r0.w, r1.w
  max r1.w, r2.y, r2.x
  max r0.w, r0.w, r1.w
  mul r0.w, r0.w, cb0[1].x
  mul r1.z, r1.x, l(1.777778)
  mad r1.xy, -cb0[0].xyxx, l(0.888889, 0.500000, 0.000000, 0.000000), r1.zyzz
  dp2 r1.x, r1.xyxx, r1.xyxx
  sqrt r1.x, r1.x
  mul r1.y, r0.w, l(1.777778)
  lt r1.z, r1.x, r1.y
  if_nz r1.z
    sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t6.xyzw, s1
    switch cb0[3].y
      case l(1)
      min r4.xyz, r0.xyzx, r2.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(2)
      mad r4.xyz, r0.xyzx, r2.xyzx, -r0.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(3)
      lt r4.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r2.xyzx
      and r1.z, r4.y, r4.x
      and r1.z, r4.z, r1.z
      add r4.xyz, -r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      div r4.xyz, r4.xyzx, r2.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r4.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      and r4.xyz, r1.zzzz, r4.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(4)
      add r4.xyz, r0.xyzx, r2.xyzx
      add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(5)
      max r4.xyz, r0.xyzx, r2.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(6)
      add r4.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r4.xyz, -r4.xyzx, r5.xyzx, -r0.xyzx
      add r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(7)
      lt r4.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      and r1.z, r4.y, r4.x
      and r1.z, r4.z, r1.z
      add r4.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div r4.xyz, r0.xyzx, r4.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r4.xyz, r1.zzzz, r4.xyzx, l(1.000000,1.000000,1.000000,0)
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(8)
      add r4.xyz, r0.xyzx, r2.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(9)
      add r4.xyz, r0.xyzx, r2.xyzx
      min r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(10)
      ge r4.xyz, r0.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
      or r1.z, r4.y, r4.x
      or r1.z, r4.z, r1.z
      mul r4.xyz, r2.xyzx, r2.xyzx
      add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div_sat r4.xyz, r4.xyzx, r5.xyzx
      movc r4.xyz, r1.zzzz, r0.xyzx, r4.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(11)
      mul r4.xyz, r0.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      add r7.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r6.xyz, -r6.xyzx, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      ge r7.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(12)
      ge r4.xyz, l(0.500000, 0.500000, 0.500000, 0.000000), r2.xyzx
      and r1.z, r4.y, r4.x
      and r1.z, r4.z, r1.z
      mad r4.xyz, -r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
      mul r4.xyz, r0.xyzx, r4.xyzx
      add r5.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad_sat r4.xyz, -r4.xyzx, r5.xyzx, r0.xyzx
      mad r5.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
      ge r6.xyz, l(0.250000, 0.250000, 0.250000, 0.000000), r0.xyzx
      and r1.w, r6.y, r6.x
      and r1.w, r6.z, r1.w
      mad r6.xyz, r0.xyzx, l(16.000000, 16.000000, 16.000000, 0.000000), l(-12.000000, -12.000000, -12.000000, 0.000000)
      mad r6.xyz, r6.xyzx, r0.xyzx, l(4.000000, 4.000000, 4.000000, 0.000000)
      mul r6.xyz, r0.xyzx, r6.xyzx
      sqrt r7.xyz, r0.xyzx
      movc r6.xyz, r1.wwww, r6.xyzx, r7.xyzx
      add r6.xyz, -r0.xyzx, r6.xyzx
      mad_sat r5.xyz, r5.xyzx, r6.xyzx, r0.xyzx
      movc r4.xyz, r1.zzzz, r4.xyzx, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(13)
      mul r4.xyz, r0.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      add r7.xyz, -r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      mad r6.xyz, -r6.xyzx, r7.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      ge r7.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(14)
      mul r4.xyz, r0.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r0.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      div r6.xyz, r2.xyzx, r6.xyzx
      ge r7.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(15)
      lt r4.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r1.z, r4.y, r4.x
      or r1.z, r4.z, r1.z
      mad r4.xyz, r2.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
      add r4.xyz, r4.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r5.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      mad r5.xyz, r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r0.xyzx
      min r5.xyz, r5.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      movc r4.xyz, r1.zzzz, r4.xyzx, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(16)
      lt r4.xyz, r2.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r1.z, r4.y, r4.x
      or r1.z, r4.z, r1.z
      add r4.xyz, r2.xyzx, r2.xyzx
      min r4.xyz, r0.xyzx, r4.xyzx
      add r5.xyz, r2.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      add r5.xyz, r5.xyzx, r5.xyzx
      max r5.xyz, r0.xyzx, r5.xyzx
      movc r4.xyz, r1.zzzz, r4.xyzx, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(17)
      mul r4.xyz, r0.xyzx, r2.xyzx
      add r5.xyz, r4.xyzx, r4.xyzx
      add r6.xyz, -r0.xyzx, l(1.010000, 1.010000, 1.010000, 0.000000)
      add r6.xyz, r6.xyzx, r6.xyzx
      div r6.xyz, r2.xyzx, r6.xyzx
      ge r7.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      and r7.xyz, r7.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
      mad r4.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r6.xyzx
      mad r4.xyz, r7.xyzx, r4.xyzx, r5.xyzx
      lt r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      or r1.z, r4.y, r4.x
      or r1.z, r4.z, r1.z
      movc r1.z, r1.z, l(0), l(1.000000)
      add r4.xyz, -r0.xyzx, r1.zzzz
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(18)
      add r4.xyz, r0.xyzx, -r2.xyzx
      add r5.xyz, -r0.xyzx, r2.xyzx
      max r4.xyz, r4.xyzx, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(19)
      add r4.xyz, r0.xyzx, r2.xyzx
      mul r5.xyz, r0.xyzx, r2.xyzx
      mad r4.xyz, -r5.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), r4.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(20)
      add r4.xyz, r0.xyzx, -r2.xyzx
      max r4.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(21)
      add r4.xyz, r2.xyzx, l(0.010000, 0.010000, 0.010000, 0.000000)
      div_sat r4.xyz, r0.xyzx, r4.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(22)
      div r4.xyz, r0.xyzx, r2.xyzx
      div r4.xyz, l(1.000000, 1.000000, 1.000000, 1.000000), r4.xyzx
      mov_sat r4.xyz, r4.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(23)
      div_sat r4.xyz, r0.xyzx, r2.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(24)
      ge r4.xyz, r2.xyzx, l(0.999999, 0.999999, 0.999999, 0.000000)
      or r1.z, r4.y, r4.x
      or r1.z, r4.z, r1.z
      mul r4.xyz, r0.xyzx, r0.xyzx
      add r5.xyz, -r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
      div_sat r4.xyz, r4.xyzx, r5.xyzx
      movc r4.xyz, r1.zzzz, r2.xyzx, r4.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(25)
      add r4.xyz, r0.xyzx, r2.xyzx
      add_sat r4.xyz, r4.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(26)
      add r4.xyz, r0.xyzx, -r2.xyzx
      add_sat r4.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(27)
      max r1.z, r0.z, r0.y
      max r1.z, r0.x, r1.z
      min r1.w, r0.z, r0.y
      min r1.w, r0.x, r1.w
      add r4.y, -r1.w, r1.z
      max r1.z, r2.z, r2.y
      max r1.z, r1.z, r2.x
      eq r1.w, r1.z, r2.x
      min r2.w, r2.z, r2.y
      min r2.w, r2.w, r2.x
      eq r3.w, r2.w, r2.z
      and r5.x, r1.w, r3.w
      if_nz r5.x
        lt r5.x, r2.z, r2.x
        add r5.yz, -r2.zzzz, r2.yyxy
        mul r5.y, r4.y, r5.y
        div r4.z, r5.y, r5.z
        and r5.xy, r4.yzyy, r5.xxxx
        mov r5.z, l(0)
      else 
        eq r5.w, r2.w, r2.y
        and r1.w, r1.w, r5.w
        if_nz r1.w
          lt r1.w, r2.y, r2.x
          add r6.xy, -r2.yyyy, r2.zxzz
          mul r6.x, r4.y, r6.x
          div r4.w, r6.x, r6.y
          and r5.xz, r1.wwww, r4.yywy
          mov r5.y, l(0)
        else 
          eq r1.w, r1.z, r2.y
          and r3.w, r3.w, r1.w
          if_nz r3.w
            lt r3.w, r2.z, r2.y
            add r6.xy, -r2.zzzz, r2.xyxx
            mul r4.w, r4.y, r6.x
            div r4.x, r4.w, r6.y
            and r5.xy, r4.xyxx, r3.wwww
            mov r5.z, l(0)
          else 
            eq r2.w, r2.w, r2.x
            and r1.w, r1.w, r2.w
            if_nz r1.w
              lt r1.w, r2.x, r2.y
              add r6.xy, -r2.xxxx, r2.zyzz
              mul r3.w, r4.y, r6.x
              div r4.z, r3.w, r6.y
              and r5.yz, r1.wwww, r4.yyzy
              mov r5.x, l(0)
            else 
              eq r1.z, r1.z, r2.z
              and r1.w, r5.w, r1.z
              lt r6.xy, r2.yxyy, r2.zzzz
              add r7.xyzw, -r2.yyxx, r2.xzyz
              mul r6.zw, r4.yyyy, r7.xxxz
              div r4.xz, r6.zzwz, r7.yywy
              and r7.xz, r4.xxyx, r6.xxxx
              and r1.z, r2.w, r1.z
              and r4.yz, r4.zzyz, r6.yyyy
              mov r4.x, l(0)
              movc r4.xyz, r1.zzzz, r4.xyzx, r2.xyzx
              mov r7.y, l(0)
              movc r5.xyz, r1.wwww, r7.xyzx, r4.xyzx
            endif 
          endif 
        endif 
      endif 
      dp3 r1.z, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r1.w, r5.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r1.z, -r1.w, r1.z
      add r4.xyz, r1.zzzz, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(28)
      max r1.z, r2.z, r2.y
      max r1.z, r1.z, r2.x
      min r1.w, r2.z, r2.y
      min r1.w, r1.w, r2.x
      add r4.y, -r1.w, r1.z
      max r1.z, r0.z, r0.y
      max r1.z, r0.x, r1.z
      eq r1.w, r0.x, r1.z
      min r2.w, r0.z, r0.y
      min r2.w, r0.x, r2.w
      eq r3.w, r0.z, r2.w
      and r5.x, r1.w, r3.w
      if_nz r5.x
        lt r5.x, r0.z, r0.x
        add r5.yz, -r0.zzzz, r0.yyxy
        mul r5.y, r4.y, r5.y
        div r4.z, r5.y, r5.z
        and r5.xy, r4.yzyy, r5.xxxx
        mov r5.z, l(0)
      else 
        eq r5.w, r0.y, r2.w
        and r1.w, r1.w, r5.w
        if_nz r1.w
          lt r1.w, r0.y, r0.x
          add r6.xy, -r0.yyyy, r0.zxzz
          mul r6.x, r4.y, r6.x
          div r4.w, r6.x, r6.y
          and r5.xz, r1.wwww, r4.yywy
          mov r5.y, l(0)
        else 
          eq r1.w, r0.y, r1.z
          and r3.w, r3.w, r1.w
          if_nz r3.w
            lt r3.w, r0.z, r0.y
            add r6.xy, -r0.zzzz, r0.xyxx
            mul r4.w, r4.y, r6.x
            div r4.x, r4.w, r6.y
            and r5.xy, r4.xyxx, r3.wwww
            mov r5.z, l(0)
          else 
            eq r2.w, r0.x, r2.w
            and r1.w, r1.w, r2.w
            if_nz r1.w
              lt r1.w, r0.x, r0.y
              add r6.xy, -r0.xxxx, r0.zyzz
              mul r3.w, r4.y, r6.x
              div r4.z, r3.w, r6.y
              and r5.yz, r1.wwww, r4.yyzy
              mov r5.x, l(0)
            else 
              eq r1.z, r0.z, r1.z
              and r1.w, r5.w, r1.z
              lt r6.xy, r0.yxyy, r0.zzzz
              add r7.xyzw, -r0.yyxx, r0.xzyz
              mul r6.zw, r4.yyyy, r7.xxxz
              div r4.xz, r6.zzwz, r7.yywy
              and r7.xz, r4.xxyx, r6.xxxx
              and r1.z, r2.w, r1.z
              and r4.yz, r4.zzyz, r6.yyyy
              mov r4.x, l(0)
              movc r4.xyz, r1.zzzz, r4.xyzx, r0.xyzx
              mov r7.y, l(0)
              movc r5.xyz, r1.wwww, r7.xyzx, r4.xyzx
            endif 
          endif 
        endif 
      endif 
      dp3 r1.z, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r1.w, r5.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r1.z, -r1.w, r1.z
      add r4.xyz, r1.zzzz, r5.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(29)
      dp3 r1.z, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r1.w, r2.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r1.z, -r1.w, r1.z
      add r4.xyz, r1.zzzz, r2.xyzx
      add r4.xyz, -r0.xyzx, r4.xyzx
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      case l(30)
      dp3 r1.z, r2.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      dp3 r1.w, r0.xzyx, l(0.333330, 0.333330, 0.333340, 0.000000)
      add r4.xyz, -r1.wwww, r1.zzzz
      mad r3.xyz, cb0[3].xxxx, r4.xyzx, r0.xyzx
      break 
      default 
      add r2.xyz, -r0.xyzx, r2.xyzx
      mad r3.xyz, cb0[3].xxxx, r2.xyzx, r0.xyzx
      break 
    endswitch 
    mov o0.xyz, r3.xyzx
  else 
    lt r1.y, r1.y, r1.x
    mad r0.w, r0.w, l(1.777778), l(0.002500)
    ge r0.w, r0.w, r1.x
    and r0.w, r0.w, r1.y
    add r1.xyz, -r0.xyzx, cb0[2].xyzx
    mad r1.xyz, cb0[2].wwww, r1.xyzx, r0.xyzx
    movc o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
  endif 
else 
  mov o0.xyz, r0.xyzx
endif 
ret 
// Approximately 455 instruction slots used
