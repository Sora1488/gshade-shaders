//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xy  
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 12
dcl_indexableTemp x0[3], 4
dcl_indexableTemp x1[3], 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div r1.y, r0.w, r1.x
ftoi r2.xy, v0.xyxx
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyzw, t0.xyzw
iadd r4.xyzw, r2.xyxy, l(1, -1, 0, -1)
mov r5.xy, r4.zwzz
mov r5.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r5.xyz, r5.xyzw, t0.xyzw
mov r4.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyzw, t0.xyzw
iadd r6.xyzw, r2.xyxy, l(1, 1, 1, 0)
mov r7.xy, r6.zwzz
mov r7.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyzw, t0.xyzw
mov r6.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyzw, t0.xyzw
iadd r8.xyzw, r2.xyxy, l(-1, 1, 0, 1)
mov r9.xy, r8.zwzz
mov r9.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r9.xyz, r9.xyzw, t0.xyzw
mov r8.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r8.xyz, r8.xyzw, t0.xyzw
iadd r2.xyzw, r2.xyxy, l(-1, -1, -1, 0)
mov r10.xy, r2.zwzz
mov r10.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r10.xyz, r10.xyzw, t0.xyzw
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r2.xyz, r2.xyzw, t0.xyzw
dp3 r0.w, r3.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r3.x, r5.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r3.y, r4.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r3.z, r7.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r3.w, r6.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r11.x, r9.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r11.y, r8.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r11.z, r10.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
dp3 r11.w, r2.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
add r5.xyz, -r3.xxxx, r5.xyzx
max r1.w, r5.z, r5.y
max r5.x, r1.w, r5.x
add r4.xyz, -r3.yyyy, r4.xyzx
max r1.w, r4.z, r4.y
max r5.y, r1.w, r4.x
add r4.xyz, -r3.zzzz, r7.xyzx
max r1.w, r4.z, r4.y
max r5.z, r1.w, r4.x
add r4.xyz, -r3.wwww, r6.xyzx
max r1.w, r4.z, r4.y
max r1.w, r1.w, r4.x
add r4.xyz, r9.xyzx, -r11.xxxx
max r2.w, r4.z, r4.y
max r2.w, r2.w, r4.x
add r4.xyz, r8.xyzx, -r11.yyyy
max r4.y, r4.z, r4.y
max r4.x, r4.y, r4.x
add r4.yzw, r10.xxyz, -r11.zzzz
max r4.z, r4.w, r4.z
max r4.y, r4.z, r4.y
add r2.xyz, r2.xyzx, -r11.wwww
max r2.y, r2.z, r2.y
max r2.x, r2.y, r2.x
mov x0[1].xyzw, l(0,0,0,0)
mov x0[2].xyzw, l(0,0,0,0)
mov x1[1].xyzw, l(0,0,0,0)
mov x1[2].xyzw, l(0,0,0,0)
add r6.xyzw, v1.xyxy, l(0.000000, -0.000926, 0.000521, -0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.xyxx, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r7.x, r2.y, r2.z
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.zwzz, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r7.z, r2.y, r2.z
add r6.xyzw, v1.xyxy, l(0.000521, 0.000000, 0.000521, 0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.xyxx, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r7.y, r2.y, r2.z
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.zwzz, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r7.w, r2.y, r2.z
mov x0[0].xyzw, r7.xzyw
add r6.xyzw, v1.xyxy, l(0.000000, 0.000926, -0.000521, 0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.xyxx, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r8.x, r2.y, r2.z
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.zwzz, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r8.y, r2.y, r2.z
add r6.xyzw, v1.xyxy, l(-0.000521, 0.000000, -0.000521, -0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.xyxx, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r8.z, r2.y, r2.z
sample_l_indexable(texture2d)(float,float,float,float) r2.y, r6.zwzz, t2.yxzw, s0, l(0.000000)
mad r2.z, -r2.y, l(999.000000), l(1000.000000)
div r8.w, r2.y, r2.z
mov x1[0].xyzw, r8.xyzw
add r3.xyzw, r3.xyzw, -r11.xyzw
add r2.y, |r3.y|, |r3.x|
add r2.y, |r3.z|, r2.y
add r2.y, |r3.w|, r2.y
add r0.w, -r0.w, l(1.000000)
mul r3.x, r0.w, r2.y
mul r2.yz, r5.yyzy, l(0.000000, -1.000000, -2.000000, 0.000000)
add r0.w, r2.z, r2.y
mad r0.w, r1.w, l(-1.000000), r0.w
mad r0.w, r4.x, l(1.000000), r0.w
mad r0.w, r4.y, l(2.000000), r0.w
mad r0.w, r2.x, l(1.000000), r0.w
mul r2.yz, r5.xxyx, l(0.000000, 2.000000, 1.000000, 0.000000)
add r2.y, r2.z, r2.y
mad r2.y, r1.w, l(-1.000000), r2.y
mad r2.y, r2.w, l(-2.000000), r2.y
mad r2.y, r4.x, l(-1.000000), r2.y
mad r2.y, r2.x, l(1.000000), r2.y
max r0.w, r0.w, r2.y
mul r2.yz, r5.yyzy, l(0.000000, 1.000000, 2.000000, 0.000000)
add r2.y, r2.z, r2.y
mad r2.y, r1.w, l(1.000000), r2.y
mad r2.y, r4.x, l(-1.000000), r2.y
mad r2.y, r4.y, l(-2.000000), r2.y
mad r2.y, r2.x, l(-1.000000), r2.y
mul r4.yz, r5.xxyx, l(0.000000, -2.000000, -1.000000, 0.000000)
add r2.z, r4.z, r4.y
mad r1.w, r1.w, l(1.000000), r2.z
mad r1.w, r2.w, l(2.000000), r1.w
mad r1.w, r4.x, l(1.000000), r1.w
mad r1.w, r2.x, l(-1.000000), r1.w
max r1.w, r1.w, r2.y
max r3.y, r0.w, r1.w
add r2.yz, v1.xxyx, l(0.000000, 0.000000, -0.000926, 0.000000)
mov r2.x, r7.x
mov r1.xz, v1.yyxy
add r2.xyz, r1.yzxy, -r2.xyzx
add r7.xz, v1.yyxy, l(0.000000, 0.000000, 0.000521, 0.000000)
add r1.xzw, r1.xxyz, -r7.xxyz
mul r4.xyz, r1.xzwx, r2.xyzx
mad r1.xzw, r2.zzxy, r1.zzwx, -r4.xxyz
dp3 r0.w, r1.xzwx, r1.xzwx
rsq r0.w, r0.w
mul r0.w, r0.w, r1.w
mad_sat r0.w, r0.w, l(0.500000), l(0.500000)
add r3.z, -r0.w, l(1.000000)
mov r3.w, l(0)
mov r0.w, l(0)
loop 
  itof r1.x, r0.w
  ge r1.x, r1.x, l(1.000000)
  breakc_nz r1.x
  mov r2.xyzw, x0[r0.w + 0].xyzw
  mov r4.xyzw, x1[r0.w + 0].xyzw
  min r1.xz, r2.zzwz, r4.zzwz
  min r1.xz, r1.xxzx, r4.xxyx
  min r1.xz, r1.xxzx, r2.xxyx
  max r5.xy, r2.zwzz, r4.zwzz
  max r5.xy, r4.xyxx, r5.xyxx
  max r5.xy, r2.xyxx, r5.xyxx
  max r1.w, r5.y, r5.x
  min r1.x, r1.z, r1.x
  add r1.x, -r1.x, r1.w
  add r1.x, r1.x, l(0.000010)
  div r1.z, r1.y, r1.x
  mov r5.xz, r2.xxzx
  mov r5.yw, r4.xxxz
  div r5.xyzw, r5.xyzw, r1.xxxx
  mov r4.xz, r2.yywy
  div r2.xyzw, r4.xyzw, r1.xxxx
  add r4.xyzw, -r1.zzzz, r5.xyzw
  add r2.xyzw, -r1.zzzz, r2.xyzw
  add r1.xz, -|r4.yywy|, |r4.xxzx|
  max r1.x, |r1.z|, |r1.x|
  add r1.zw, -|r2.yyyw|, |r2.xxxz|
  max r1.z, |r1.w|, |r1.z|
  max r1.x, r1.z, r1.x
  max r3.w, r1.x, r3.w
  iadd r0.w, r0.w, l(1)
endloop 
mov_sat r3.xyzw, r3.xyzw
mul r0.w, r3.w, r3.w
mul r0.w, r0.w, r3.w
mul r2.w, r0.w, l(3.000000)
dp3 r0.w, r0.xyzx, l(0.212600, 0.715100, 0.072100, 0.000000)
add r1.x, r0.w, l(0.200000)
max r1.x, r1.x, l(0.000100)
add r1.x, r1.x, l(-0.000100)
mul r1.x, r1.x, l(5.002501)
min r1.x, r1.x, l(1.000000)
mad r1.z, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.z
add r0.w, -r0.w, l(1.200000)
max r0.w, r0.w, l(0.000100)
add r0.w, r0.w, l(-0.000100)
mul r0.w, r0.w, l(5.002501)
min r0.w, r0.w, l(1.000000)
mad r1.z, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r0.w, r0.w, r1.z
mul r0.w, r0.w, r1.x
max r1.x, r0.z, r0.y
max r1.x, r0.x, r1.x
min r1.z, r0.z, r0.y
min r1.z, r0.x, r1.z
add r1.x, -r1.z, r1.x
add r1.z, r1.x, l(0.200000)
max r1.z, r1.z, l(0.000100)
add r1.z, r1.z, l(-0.000100)
mul r1.z, r1.z, l(5.002501)
min r1.z, r1.z, l(1.000000)
mad r1.w, r1.z, l(-2.000000), l(3.000000)
mul r1.z, r1.z, r1.z
mul r1.z, r1.z, r1.w
add r1.x, -r1.x, l(1.200000)
max r1.x, r1.x, l(0.000100)
add r1.x, r1.x, l(-0.000100)
mul r1.x, r1.x, l(5.002501)
min r1.x, r1.x, l(1.000000)
mad r1.w, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.w
mul r1.x, r1.x, r1.z
add r4.xyzw, r1.yyyy, l(0.200000, 0.200000, 0.200000, 1.400000)
max r4.xyzw, r4.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)
add r4.xyzw, r4.xyzw, l(-0.000100, -0.000100, -0.000100, -0.000100)
mul r4.xyzw, r4.xyzw, l(5.002501, 5.002501, 5.002501, 5.002501)
min r4.xyzw, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r5.xyzw, r4.zzzw, l(-2.000000, -2.000000, -2.000000, -2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r4.xyzw, r4.xyzw, r4.xyzw
mul r4.xyzw, r4.xyzw, r5.xyzw
add r5.xyzw, -r1.yyyy, l(1.200000, 0.600000, 1.200000, 0.120000)
max r5.xyzw, r5.xyzw, l(0.000100, 0.000100, 0.000100, 0.000100)
add r5.xyzw, r5.xyzw, l(-0.000100, -0.000100, -0.000100, -0.000100)
mul r5.xyzw, r5.xyzw, l(5.002501, 5.002501, 5.002501, 5.002501)
min r5.xyzw, r5.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
mad r6.xyzw, r5.zyzw, l(-2.000000, -2.000000, -2.000000, -2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r5.xyzw, r5.xyzw, r5.xyzw
mul r5.xyzw, r5.xyzw, r6.xyzw
mul r4.xyzw, r4.xyzw, r5.xyzw
min r0.w, r0.w, r1.x
mul r1.xyzw, r0.wwww, r4.xyzw
mul r2.xyz, r3.xyzx, l(1.000000, 0.500000, 1.000000, 0.000000)
mul r1.xyzw, r1.xyzw, r2.xyzw
max r0.w, r1.w, r1.z
max r0.w, r0.w, r1.y
max r0.w, r0.w, r1.x
mad_sat o0.xyz, r0.wwww, -r0.xyzx, r0.xyzx
ret 
// Approximately 248 instruction slots used
