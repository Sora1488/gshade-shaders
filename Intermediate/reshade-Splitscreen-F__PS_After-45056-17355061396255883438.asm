//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int splitscreen_mode;              // Offset:    0 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__Before                       texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
ieq r0.xyz, cb0[0].xxxx, l(1, 2, 3, 0)
if_z cb0[0].x
  lt r0.w, v1.x, l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
  movc o0.xyzw, r0.wwww, r1.xyzw, r2.xyzw
else 
  mov o0.xyzw, l(0,0,0,0)
endif 
if_nz r0.x
  add r0.x, v1.x, l(-0.500000)
  add_sat r0.x, |r0.x|, l(-0.250000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
  ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
  movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
endif 
if_nz r0.y
  add r0.x, v1.x, l(-0.375000)
  mad r0.x, v1.y, l(0.250000), r0.x
  add_sat r0.x, r0.x, l(-0.250000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t0.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t4.xyzw, s0
  ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
  movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
endif 
if_nz r0.z
  add r0.x, v1.x, l(-0.375000)
  mad r0.x, v1.y, l(0.250000), r0.x
  add r0.x, r0.x, l(-0.250000)
  add_sat r0.x, |r0.x|, l(-0.250000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
  ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
  movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
endif 
ieq r0.xyz, cb0[0].xxxx, l(4, 5, 6, 0)
if_nz r0.x
  lt r0.x, v1.y, l(0.500000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
  movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
endif 
if_nz r0.y
  add r0.x, v1.y, l(-0.500000)
  add_sat r0.x, |r0.x|, l(-0.250000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
  ne r0.x, l(0.000000, 0.000000, 0.000000, 0.000000), r0.x
  movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
endif 
if_nz r0.z
  add r0.x, v1.y, v1.x
  lt r0.x, r0.x, l(1.000000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
  movc o0.xyzw, r0.xxxx, r1.xyzw, r2.xyzw
endif 
ret 
// Approximately 59 instruction slots used
