//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   bool DOF_AUTOFOCUS;                // Offset:    0 Size:     4 [unused]
//   bool DOF_MOUSEDRIVEN_AF;           // Offset:    4 Size:     4 [unused]
//   float2 DOF_FOCUSPOINT;             // Offset:    8 Size:     8 [unused]
//   float DOF_FOCUSSAMPLES;            // Offset:   16 Size:     4 [unused]
//   float DOF_FOCUSRADIUS;             // Offset:   20 Size:     4 [unused]
//   float DOF_NEARBLURCURVE;           // Offset:   24 Size:     4
//   float DOF_FARBLURCURVE;            // Offset:   28 Size:     4 [unused]
//   float DOF_MANUALFOCUSDEPTH;        // Offset:   32 Size:     4 [unused]
//   float DOF_INFINITEFOCUS;           // Offset:   36 Size:     4 [unused]
//   float DOF_BLURRADIUS;              // Offset:   40 Size:     4
//   int iADOF1_ShapeType;              // Offset:   44 Size:     4
//   int iADOF2_ShapeType;              // Offset:   48 Size:     4 [unused]
//   int iADOF3_ShapeType;              // Offset:   52 Size:     4 [unused]
//   float iADOF_ShapeQuality;          // Offset:   56 Size:     4
//   float fADOF_ShapeRotation;         // Offset:   60 Size:     4
//   bool bADOF_RotAnimationEnable;     // Offset:   64 Size:     4
//   float fADOF_RotAnimationSpeed;     // Offset:   68 Size:     4
//   bool bADOF_ShapeCurvatureEnable;   // Offset:   72 Size:     4
//   float fADOF_ShapeCurvatureAmount;  // Offset:   76 Size:     4
//   bool bADOF_ShapeApertureEnable;    // Offset:   80 Size:     4
//   float fADOF_ShapeApertureAmount;   // Offset:   84 Size:     4
//   bool bADOF_ShapeAnamorphEnable;    // Offset:   88 Size:     4
//   float fADOF_ShapeAnamorphRatio;    // Offset:   92 Size:     4
//   bool bADOF_ShapeDistortEnable;     // Offset:   96 Size:     4
//   float fADOF_ShapeDistortAmount;    // Offset:  100 Size:     4
//   bool bADOF_ShapeDiffusionEnable;   // Offset:  104 Size:     4
//   float fADOF_ShapeDiffusionAmount;  // Offset:  108 Size:     4
//   bool bADOF_ShapeWeightEnable;      // Offset:  112 Size:     4
//   float fADOF_ShapeWeightCurve;      // Offset:  116 Size:     4
//   float fADOF_ShapeWeightAmount;     // Offset:  120 Size:     4
//   float fADOF_BokehCurve;            // Offset:  124 Size:     4
//   bool bADOF_ShapeChromaEnable;      // Offset:  128 Size:     4
//   int iADOF_ShapeChromaMode;         // Offset:  132 Size:     4
//   float fADOF_ShapeChromaAmount;     // Offset:  136 Size:     4
//   bool bADOF_ImageChromaEnable;      // Offset:  140 Size:     4 [unused]
//   float iADOF_ImageChromaHues;       // Offset:  144 Size:     4 [unused]
//   float fADOF_ImageChromaCurve;      // Offset:  148 Size:     4 [unused]
//   float fADOF_ImageChromaAmount;     // Offset:  152 Size:     4 [unused]
//   float fADOF_SmootheningAmount;     // Offset:  156 Size:     4 [unused]
//   float2 MouseCoords;                // Offset:  160 Size:     8 [unused]
//   float Timer;                       // Offset:  168 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__texHDR1                      texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[11], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 21
dcl_indexableTemp x0[13], 4
mul r0.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000)
mov_sat r0.zw, r0.xxxy
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t0.xyzw, s0
mad r0.z, r1.w, l(2.000000), l(-1.000000)
mul r0.z, |r0.z|, cb0[2].z
lt r0.w, r1.w, l(0.500000)
add r2.x, cb0[1].z, cb0[1].z
max r2.x, r2.x, l(1.000000)
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul r2.x, r0.z, r2.x
movc r0.z, r0.w, r2.x, r0.z
max r0.w, r0.y, r0.x
ge r0.w, l(1.050000), r0.w
ge r2.x, r0.z, l(1.200000)
and r0.w, r0.w, r2.x
if_nz r0.w
  sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, r0.xyxx, t0.xyzw, s0, l(0.000000)
  div r0.w, r0.z, cb0[2].z
  add r2.w, cb0[3].z, l(-1.000000)
  mad r0.w, r0.w, r2.w, l(1.000000)
  round_ne r0.w, r0.w
  mul r3.zw, r0.zzzz, l(0.000000, 0.000000, 0.000521, 0.000926)
  mov x0[4].xy, l(0,0,0,0)
  mov x0[5].xy, l(0,0,0,0)
  mov x0[6].xy, l(0,0,0,0)
  mov x0[7].xy, l(0,0,0,0)
  mov x0[8].xy, l(0,0,0,0)
  mov x0[9].xy, l(0,0,0,0)
  mov x0[10].xy, l(0,0,0,0)
  mov x0[11].xy, l(0,0,0,0)
  mov x0[12].xy, l(0,0,0,0)
  switch cb0[2].w
    case l(0)
    add r2.w, -cb0[7].z, l(1.000000)
    movc r2.w, cb0[7].x, r2.w, l(1.000000)
    log r5.xyz, |r2.xyzx|
    mul r5.xyz, r5.xyzx, cb0[7].wwww
    exp r5.xyz, r5.xyzx
    mul r5.xyz, r2.wwww, r5.xyzx
    mul r4.w, r3.z, cb0[5].w
    movc r3.y, cb0[5].z, r4.w, r3.z
    mul r4.w, cb0[4].y, cb0[10].z
    mad r4.w, r4.w, l(0.005000), cb0[3].w
    movc r4.w, cb0[4].x, r4.w, cb0[3].w
    mul r6.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r5.w, v1.x, l(1.666667), r6.x
    sincos r5.w, null, r5.w
    mul r5.w, r5.w, l(493013.000000)
    frc r7.x, r5.w
    mad r5.w, v1.x, l(1.666667), -r6.y
    sincos null, r5.w, r5.w
    mul r5.w, r5.w, l(289013.000000)
    frc r7.y, r5.w
    add r6.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r6.xy, r6.xyxx, cb0[6].wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r6.xy, cb0[6].zzzz, r6.xyxx, l(0,0,0,0)
    mul r5.w, r4.w, l(0.017453)
    sincos r7.x, r8.x, r5.w
    mov x0[0].y, r7.x
    mov x0[0].x, r8.x
    mad r7.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(0.523599, 1.047197, 1.570796, 2.094395)
    sincos r7.x, r8.x, r7.x
    mov x0[1].y, r7.x
    mov x0[1].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[2].y, r7.x
    mov x0[2].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[3].y, r7.x
    mov x0[3].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[4].y, r7.x
    mov x0[4].x, r8.x
    mad r7.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(2.617994, 3.141593, 3.665191, 4.188790)
    sincos r7.x, r8.x, r7.x
    mov x0[5].y, r7.x
    mov x0[5].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[6].y, r7.x
    mov x0[6].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[7].y, r7.x
    mov x0[7].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[8].y, r7.x
    mov x0[8].x, r8.x
    mad r7.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(4.712389, 5.235987, 5.759586, 6.283185)
    sincos r7.x, r8.x, r7.x
    mov x0[9].y, r7.x
    mov x0[9].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[10].y, r7.x
    mov x0[10].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[11].y, r7.x
    mov x0[11].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[12].y, r7.x
    mov x0[12].x, r8.x
    mad r6.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), l(0.000000, 0.000000, -0.500000, -0.500000)
    mad r7.xy, v1.yxyy, l(1.666667, -1.666667, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r4.w, r7.xyxx, r7.xyxx
    rsq r4.w, r4.w
    mul r7.xy, r4.wwww, r7.xyxx
    dp2 r4.w, r6.zwzz, r6.zwzz
    sqrt r4.w, r4.w
    mul r4.w, r4.w, cb0[6].y
    mul r4.w, r4.w, l(2.221000)
    sincos null, r4.w, r4.w
    add r5.w, -r4.w, l(1.000000)
    mul r6.z, r1.w, l(0.990000)
    add r6.w, -cb0[8].z, l(1.000000)
    add r7.z, cb0[8].z, l(1.000000)
    mov r4.xyz, r5.xyzx
    mov r7.w, cb0[4].z
    mov r8.x, cb0[5].x
    mov r8.yz, cb0[6].xxzx
    mov r8.w, cb0[7].x
    mov r9.x, cb0[8].x
    mov r0.z, r2.w
    mov r9.y, l(1.000000)
    loop 
      lt r9.z, r0.w, r9.y
      breakc_nz r9.z
      div r9.z, r9.y, r0.w
      mov r10.xyz, r4.xyzx
      mov r9.w, r7.w
      mov r10.w, r8.x
      mov r11.xyz, r8.yzwy
      mov r11.w, r9.x
      mov r12.x, r0.z
      mov r12.y, l(1)
      loop 
        ilt r12.z, l(12), r12.y
        breakc_nz r12.z
        iadd r12.zw, r12.yyyy, l(0, 0, -1, 1)
        mov r13.xy, x0[r12.z + 0].xyxx
        mov r13.zw, x0[r12.y + 0].xxxy
        add r13.zw, -r13.xxxy, r13.zzzw
        mov r12.z, r9.w
        mov r14.xyzw, r10.xyzw
        mov r15.xyzw, r11.xyzw
        mov r16.x, r12.x
        mov r16.y, r9.z
        mov r16.z, l(0)
        loop 
          ge r16.w, r16.z, r9.y
          breakc_nz r16.w
          div r16.w, r16.z, r9.y
          mad r17.x, r16.w, l(6.283185), l(-1.570796)
          sincos r17.x, null, r17.x
          mad r17.x, r17.x, cb0[5].y, l(1.000000)
          mul r17.x, r16.y, r17.x
          movc r16.y, r14.w, r17.x, r16.y
          mad r17.xy, r16.wwww, r13.zwzz, r13.xyxx
          mul r17.xy, r16.yyyy, r17.xyxx
          dp2 r16.w, r17.xyxx, r17.xyxx
          rsq r16.w, r16.w
          mul r17.zw, r16.wwww, r17.xxxy
          mad r17.zw, r17.zzzw, r16.yyyy, -r17.xxxy
          mad r17.zw, cb0[4].wwww, r17.zzzw, r17.xxxy
          movc r17.xy, r12.zzzz, r17.zwzz, r17.xyxx
          dp2 r16.w, r7.xyxx, r17.xyxx
          mul r17.zw, r7.xxxy, r16.wwww
          mul r17.zw, r5.wwww, r17.zzzw
          mad r17.zw, r17.xxxy, r4.wwww, r17.zzzw
          movc r17.xy, r15.xxxx, r17.zwzz, r17.xyxx
          mul r17.zw, r6.xxxy, r17.xxxy
          movc r17.xy, r15.yyyy, r17.zwzz, r17.xyxx
          if_nz r15.w
            mul r17.zw, r3.yyyw, r17.xxxy
            mad r18.xy, r17.zwzz, r6.wwww, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r18.xyz, r18.xyxx, t0.xyzw, s0, l(0.000000)
            mad r19.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000), r17.zwzz
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.xyxx, t0.xyzw, s0, l(0.000000)
            mad r17.zw, r17.zzzw, r7.zzzz, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyz, r17.zwzz, t0.xyzw, s0, l(0.000000)
            switch cb0[8].y
              case l(0)
              mov r19.x, r18.x
              mov r19.z, r20.z
              break 
              case l(1)
              mov r19.y, r20.y
              mov r19.z, r18.z
              break 
              case l(2)
              mov r19.x, r20.x
              mov r19.y, r18.y
              break 
              case l(3)
              mov r19.x, r18.x
              mov r19.y, r20.y
              break 
              case l(4)
              mov r19.y, r18.y
              mov r19.z, r20.z
              break 
              default 
              mov r19.x, r20.x
              mov r19.z, r18.z
              break 
            endswitch 
          else 
            mad r17.zw, r17.xxxy, r3.yyyw, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r17.zwzz, t0.xyzw, s0, l(0.000000)
          endif 
          ge r16.w, r19.w, r6.z
          mad r17.z, r19.w, l(2.000000), l(-1.000000)
          mul r17.z, |r17.z|, |r17.z|
          mul r17.z, r17.z, r17.z
          movc r16.w, r16.w, l(1.000000), r17.z
          dp2 r17.x, r17.xyxx, r17.xyxx
          sqrt r17.x, r17.x
          log r17.x, r17.x
          mul r17.x, r17.x, cb0[7].y
          exp r17.x, r17.x
          add r17.x, r17.x, l(-1.000000)
          mad r17.x, cb0[7].z, r17.x, l(1.000000)
          mul r17.x, r16.w, r17.x
          movc r16.w, r15.z, r17.x, r16.w
          log r17.xyz, |r19.xyzx|
          mul r17.xyz, r17.xyzx, cb0[7].wwww
          exp r17.xyz, r17.xyzx
          mad r14.xyz, r17.xyzx, r16.wwww, r14.xyzx
          add r16.x, r16.w, r16.x
          add r16.z, r16.z, l(1.000000)
        endloop 
        mov r10.xyz, r14.xyzx
        mov r12.x, r16.x
        mov r12.xy, r12.xwxx
      endloop 
      mov r4.xyz, r10.xyzx
      mov r0.z, r12.x
      add r9.y, r9.y, l(1.000000)
    endloop 
    break 
    case l(2)
    add r2.w, -cb0[7].z, l(1.000000)
    movc r2.w, cb0[7].x, r2.w, l(1.000000)
    log r5.xyz, |r2.xyzx|
    mul r5.xyz, r5.xyzx, cb0[7].wwww
    exp r5.xyz, r5.xyzx
    mul r5.xyz, r2.wwww, r5.xyzx
    mul r3.y, r3.z, cb0[5].w
    movc r3.x, cb0[5].z, r3.y, r3.z
    mul r3.y, cb0[4].y, cb0[10].z
    mad r3.y, r3.y, l(0.005000), cb0[3].w
    movc r3.y, cb0[4].x, r3.y, cb0[3].w
    mul r6.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r4.w, v1.x, l(1.666667), r6.x
    sincos r4.w, null, r4.w
    mul r4.w, r4.w, l(493013.000000)
    frc r7.x, r4.w
    mad r4.w, v1.x, l(1.666667), -r6.y
    sincos null, r4.w, r4.w
    mul r4.w, r4.w, l(289013.000000)
    frc r7.y, r4.w
    add r6.xy, r7.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r6.xy, r6.xyxx, cb0[6].wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r6.xy, cb0[6].zzzz, r6.xyxx, l(0,0,0,0)
    mul r4.w, r3.y, l(0.017453)
    sincos r7.x, r8.x, r4.w
    mov x0[0].y, r7.x
    mov x0[0].x, r8.x
    mad r7.xyzw, r3.yyyy, l(0.017453, 0.017453, 0.017453, 0.017453), l(1.570796, 3.141593, 4.712389, 6.283185)
    sincos r7.x, r8.x, r7.x
    mov x0[1].y, r7.x
    mov x0[1].x, r8.x
    sincos r7.x, r8.x, r7.y
    mov x0[2].y, r7.x
    mov x0[2].x, r8.x
    sincos r7.x, r8.x, r7.z
    mov x0[3].y, r7.x
    mov x0[3].x, r8.x
    sincos r7.x, r8.x, r7.w
    mov x0[4].y, r7.x
    mov x0[4].x, r8.x
    mad r6.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), l(0.000000, 0.000000, -0.500000, -0.500000)
    mad r7.xy, v1.yxyy, l(1.666667, -1.666667, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r3.y, r7.xyxx, r7.xyxx
    rsq r3.y, r3.y
    mul r7.xy, r3.yyyy, r7.xyxx
    dp2 r3.y, r6.zwzz, r6.zwzz
    sqrt r3.y, r3.y
    mul r3.y, r3.y, cb0[6].y
    mul r3.y, r3.y, l(2.221000)
    sincos null, r3.y, r3.y
    add r4.w, -r3.y, l(1.000000)
    mul r5.w, r1.w, l(0.990000)
    add r6.z, -cb0[8].z, l(1.000000)
    add r6.w, cb0[8].z, l(1.000000)
    mov r4.xyz, r5.xyzx
    mov r7.z, cb0[4].z
    mov r7.w, cb0[5].x
    mov r8.xy, cb0[6].xzxx
    mov r8.z, cb0[7].x
    mov r8.w, cb0[8].x
    mov r0.z, r2.w
    mov r9.x, l(1.000000)
    loop 
      lt r9.y, r0.w, r9.x
      breakc_nz r9.y
      div r9.y, r9.x, r0.w
      mov r10.xyz, r4.xyzx
      mov r9.zw, r7.zzzw
      mov r10.w, r8.x
      mov r11.xyz, r8.yzwy
      mov r11.w, r0.z
      mov r12.x, l(1)
      loop 
        ilt r12.y, l(4), r12.x
        breakc_nz r12.y
        iadd r12.yz, r12.xxxx, l(0, -1, 1, 0)
        mov r12.yw, x0[r12.y + 0].xxxy
        mov r13.xy, x0[r12.x + 0].xyxx
        add r13.xy, -r12.ywyy, r13.xyxx
        mov r13.zw, r9.zzzw
        mov r14.xyzw, r10.xyzw
        mov r15.xyzw, r11.xyzw
        mov r16.x, r9.y
        mov r16.y, l(0)
        loop 
          ge r16.z, r16.y, r9.x
          breakc_nz r16.z
          div r16.z, r16.y, r9.x
          mad r16.w, r16.z, l(6.283185), l(-1.570796)
          sincos r16.w, null, r16.w
          mad r16.w, r16.w, cb0[5].y, l(1.000000)
          mul r16.w, r16.w, r16.x
          movc r16.x, r13.w, r16.w, r16.x
          mad r16.zw, r16.zzzz, r13.xxxy, r12.yyyw
          mul r16.zw, r16.xxxx, r16.zzzw
          dp2 r17.x, r16.zwzz, r16.zwzz
          rsq r17.x, r17.x
          mul r17.xy, r16.zwzz, r17.xxxx
          mad r17.xy, r17.xyxx, r16.xxxx, -r16.zwzz
          mad r17.xy, cb0[4].wwww, r17.xyxx, r16.zwzz
          movc r16.zw, r13.zzzz, r17.xxxy, r16.zzzw
          dp2 r17.x, r7.xyxx, r16.zwzz
          mul r17.xy, r7.xyxx, r17.xxxx
          mul r17.xy, r4.wwww, r17.xyxx
          mad r17.xy, r16.zwzz, r3.yyyy, r17.xyxx
          movc r16.zw, r14.wwww, r17.xxxy, r16.zzzw
          mul r17.xy, r6.xyxx, r16.zwzz
          movc r16.zw, r15.xxxx, r17.xxxy, r16.zzzw
          if_nz r15.z
            mul r17.xy, r3.xwxx, r16.zwzz
            mad r17.zw, r17.xxxy, r6.zzzz, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r18.xyz, r17.zwzz, t0.xyzw, s0, l(0.000000)
            mad r17.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), r17.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r17.zwzz, t0.xyzw, s0, l(0.000000)
            mad r17.xy, r17.xyxx, r6.wwww, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r17.xyz, r17.xyxx, t0.xyzw, s0, l(0.000000)
            switch cb0[8].y
              case l(0)
              mov r19.x, r18.x
              mov r19.z, r17.z
              break 
              case l(1)
              mov r19.y, r17.y
              mov r19.z, r18.z
              break 
              case l(2)
              mov r19.x, r17.x
              mov r19.y, r18.y
              break 
              case l(3)
              mov r19.x, r18.x
              mov r19.y, r17.y
              break 
              case l(4)
              mov r19.y, r18.y
              mov r19.z, r17.z
              break 
              default 
              mov r19.x, r17.x
              mov r19.z, r18.z
              break 
            endswitch 
          else 
            mad r17.xy, r16.zwzz, r3.xwxx, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r17.xyxx, t0.xyzw, s0, l(0.000000)
          endif 
          ge r17.x, r19.w, r5.w
          mad r17.y, r19.w, l(2.000000), l(-1.000000)
          mul r17.y, |r17.y|, |r17.y|
          mul r17.y, r17.y, r17.y
          movc r17.x, r17.x, l(1.000000), r17.y
          dp2 r16.z, r16.zwzz, r16.zwzz
          sqrt r16.z, r16.z
          log r16.z, r16.z
          mul r16.z, r16.z, cb0[7].y
          exp r16.z, r16.z
          add r16.z, r16.z, l(-1.000000)
          mad r16.z, cb0[7].z, r16.z, l(1.000000)
          mul r16.z, r16.z, r17.x
          movc r16.z, r15.y, r16.z, r17.x
          log r17.xyz, |r19.xyzx|
          mul r17.xyz, r17.xyzx, cb0[7].wwww
          exp r17.xyz, r17.xyzx
          mad r14.xyz, r17.xyzx, r16.zzzz, r14.xyzx
          add r15.w, r15.w, r16.z
          add r16.y, r16.y, l(1.000000)
        endloop 
        mov r10.xyz, r14.xyzx
        mov r11.w, r15.w
        mov r12.x, r12.z
      endloop 
      mov r4.xyz, r10.xyzx
      mov r0.z, r11.w
      add r9.x, r9.x, l(1.000000)
    endloop 
    break 
    case l(3)
    add r2.w, -cb0[7].z, l(1.000000)
    movc r2.w, cb0[7].x, r2.w, l(1.000000)
    log r5.xyz, |r2.xyzx|
    mul r5.xyz, r5.xyzx, cb0[7].wwww
    exp r5.xyz, r5.xyzx
    mul r5.xyz, r2.wwww, r5.xyzx
    mul r3.x, r3.z, cb0[5].w
    movc r6.x, cb0[5].z, r3.x, r3.z
    mul r3.x, cb0[4].y, cb0[10].z
    mad r3.x, r3.x, l(0.005000), cb0[3].w
    movc r3.x, cb0[4].x, r3.x, cb0[3].w
    mul r7.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r3.y, v1.x, l(1.666667), r7.x
    sincos r3.y, null, r3.y
    mul r3.y, r3.y, l(493013.000000)
    frc r8.x, r3.y
    mad r3.y, v1.x, l(1.666667), -r7.y
    sincos null, r3.y, r3.y
    mul r3.y, r3.y, l(289013.000000)
    frc r8.y, r3.y
    add r7.xy, r8.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r7.xy, r7.xyxx, cb0[6].wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r7.xy, cb0[6].zzzz, r7.xyxx, l(0,0,0,0)
    mul r3.y, r3.x, l(0.017453)
    sincos r8.x, r9.x, r3.y
    mov x0[0].y, r8.x
    mov x0[0].x, r9.x
    mad r8.xyz, r3.xxxx, l(0.017453, 0.017453, 0.017453, 0.000000), l(2.094395, 4.188790, 6.283185, 0.000000)
    sincos r3.x, r8.x, r8.x
    mov x0[1].y, r3.x
    mov x0[1].x, r8.x
    sincos r3.x, r8.x, r8.y
    mov x0[2].y, r3.x
    mov x0[2].x, r8.x
    sincos r3.x, r8.x, r8.z
    mov x0[3].y, r3.x
    mov x0[3].x, r8.x
    mad r3.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000), l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r7.zw, v1.yyyx, l(0.000000, 0.000000, 1.666667, -1.666667), l(0.000000, 0.000000, -0.500000, 0.500000)
    dp2 r4.w, r7.zwzz, r7.zwzz
    rsq r4.w, r4.w
    mul r7.zw, r4.wwww, r7.zzzw
    dp2 r3.x, r3.xyxx, r3.xyxx
    sqrt r3.x, r3.x
    mul r3.x, r3.x, cb0[6].y
    mul r3.x, r3.x, l(2.221000)
    sincos null, r3.x, r3.x
    add r3.y, -r3.x, l(1.000000)
    mul r4.w, r1.w, l(0.990000)
    add r5.w, -cb0[8].z, l(1.000000)
    add r6.w, cb0[8].z, l(1.000000)
    mov r6.yz, r3.wwww
    mov r4.xyz, r5.xyzx
    mov r8.x, cb0[4].z
    mov r8.y, cb0[5].x
    mov r8.zw, cb0[6].xxxz
    mov r9.x, cb0[7].x
    mov r9.y, cb0[8].x
    mov r0.z, r2.w
    mov r9.z, l(1.000000)
    loop 
      lt r9.w, r0.w, r9.z
      breakc_nz r9.w
      div r9.w, r9.z, r0.w
      mov r10.xyz, r4.xyzx
      mov r10.w, r8.x
      mov r11.xyz, r8.yzwy
      mov r11.w, r9.x
      mov r12.x, r9.y
      mov r12.y, r0.z
      mov r12.z, l(1)
      loop 
        ilt r12.w, l(3), r12.z
        breakc_nz r12.w
        iadd r13.xy, r12.zzzz, l(-1, 1, 0, 0)
        mov r13.xz, x0[r13.x + 0].xxyx
        mov r14.xy, x0[r12.z + 0].xyxx
        add r14.xy, -r13.xzxx, r14.xyxx
        mov r15.xyz, r10.xyzx
        mov r12.w, r10.w
        mov r13.w, r11.x
        mov r14.zw, r11.yyyz
        mov r15.w, r11.w
        mov r16.xy, r12.xyxx
        mov r16.z, r9.w
        mov r16.w, l(0)
        loop 
          ge r17.x, r16.w, r9.z
          breakc_nz r17.x
          div r17.x, r16.w, r9.z
          mad r17.y, r17.x, l(6.283185), l(-1.570796)
          sincos r17.y, null, r17.y
          mad r17.y, r17.y, cb0[5].y, l(1.000000)
          mul r17.y, r16.z, r17.y
          movc r16.z, r13.w, r17.y, r16.z
          mad r17.xy, r17.xxxx, r14.xyxx, r13.xzxx
          mul r17.xy, r16.zzzz, r17.xyxx
          dp2 r17.z, r17.xyxx, r17.xyxx
          rsq r17.z, r17.z
          mul r17.zw, r17.zzzz, r17.xxxy
          mad r17.zw, r17.zzzw, r16.zzzz, -r17.xxxy
          mad r17.zw, cb0[4].wwww, r17.zzzw, r17.xxxy
          movc r17.xy, r12.wwww, r17.zwzz, r17.xyxx
          dp2 r17.z, r7.zwzz, r17.xyxx
          mul r17.zw, r7.zzzw, r17.zzzz
          mul r17.zw, r3.yyyy, r17.zzzw
          mad r17.zw, r17.xxxy, r3.xxxx, r17.zzzw
          movc r17.xy, r14.zzzz, r17.zwzz, r17.xyxx
          mul r17.zw, r7.xxxy, r17.xxxy
          movc r17.xy, r14.wwww, r17.zwzz, r17.xyxx
          if_nz r16.x
            mul r17.zw, r6.xxxy, r17.xxxy
            mad r18.xy, r17.zwzz, r5.wwww, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r18.xyz, r18.xyxx, t0.xyzw, s0, l(0.000000)
            mad r19.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000), r17.zwzz
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r19.xyxx, t0.xyzw, s0, l(0.000000)
            mad r17.zw, r17.zzzw, r6.wwww, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r20.xyz, r17.zwzz, t0.xyzw, s0, l(0.000000)
            switch cb0[8].y
              case l(0)
              mov r19.x, r18.x
              mov r19.z, r20.z
              break 
              case l(1)
              mov r19.y, r20.y
              mov r19.z, r18.z
              break 
              case l(2)
              mov r19.x, r20.x
              mov r19.y, r18.y
              break 
              case l(3)
              mov r19.x, r18.x
              mov r19.y, r20.y
              break 
              case l(4)
              mov r19.y, r18.y
              mov r19.z, r20.z
              break 
              default 
              mov r19.x, r20.x
              mov r19.z, r18.z
              break 
            endswitch 
          else 
            mad r17.zw, r17.xxxy, r6.xxxz, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyzw, r17.zwzz, t0.xyzw, s0, l(0.000000)
          endif 
          ge r17.z, r19.w, r4.w
          mad r17.w, r19.w, l(2.000000), l(-1.000000)
          mul r17.w, |r17.w|, |r17.w|
          mul r17.w, r17.w, r17.w
          movc r17.z, r17.z, l(1.000000), r17.w
          dp2 r17.x, r17.xyxx, r17.xyxx
          sqrt r17.x, r17.x
          log r17.x, r17.x
          mul r17.x, r17.x, cb0[7].y
          exp r17.x, r17.x
          add r17.x, r17.x, l(-1.000000)
          mad r17.x, cb0[7].z, r17.x, l(1.000000)
          mul r17.x, r17.x, r17.z
          movc r17.x, r15.w, r17.x, r17.z
          log r17.yzw, |r19.xxyz|
          mul r17.yzw, r17.yyzw, cb0[7].wwww
          exp r17.yzw, r17.yyzw
          mad r15.xyz, r17.yzwy, r17.xxxx, r15.xyzx
          add r16.y, r16.y, r17.x
          add r16.w, r16.w, l(1.000000)
        endloop 
        mov r10.xyz, r15.xyzx
        mov r12.y, r16.y
        mov r12.z, r13.y
      endloop 
      mov r4.xyz, r10.xyzx
      mov r0.z, r12.y
      add r9.z, r9.z, l(1.000000)
    endloop 
    break 
    default 
    add r2.w, -cb0[7].z, l(1.000000)
    movc r2.w, cb0[7].x, r2.w, l(1.000000)
    log r2.xyz, |r2.xyzx|
    mul r2.xyz, r2.xyzx, cb0[7].wwww
    exp r2.xyz, r2.xyzx
    mul r2.xyz, r2.wwww, r2.xyzx
    mul r3.x, r3.z, cb0[5].w
    movc r3.x, cb0[5].z, r3.x, r3.z
    mul r4.w, cb0[4].y, cb0[10].z
    mad r4.w, r4.w, l(0.005000), cb0[3].w
    movc r4.w, cb0[4].x, r4.w, cb0[3].w
    mul r5.xy, v1.yyyy, l(905.516663, 955.516663, 0.000000, 0.000000)
    mad r5.x, v1.x, l(1.666667), r5.x
    sincos r5.x, null, r5.x
    mul r5.x, r5.x, l(493013.000000)
    frc r6.x, r5.x
    mad r5.x, v1.x, l(1.666667), -r5.y
    sincos null, r5.x, r5.x
    mul r5.x, r5.x, l(289013.000000)
    frc r6.y, r5.x
    add r5.xy, r6.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
    mad r5.xy, r5.xyxx, cb0[6].wwww, l(1.000000, 1.000000, 0.000000, 0.000000)
    movc r5.xy, cb0[6].zzzz, r5.xyxx, l(0,0,0,0)
    mul r5.z, r4.w, l(0.017453)
    sincos r6.x, r7.x, r5.z
    mov x0[0].y, r6.x
    mov x0[0].x, r7.x
    mad r6.xyzw, r4.wwww, l(0.017453, 0.017453, 0.017453, 0.017453), l(1.256637, 2.513274, 3.769911, 5.026548)
    sincos r6.x, r7.x, r6.x
    mov x0[1].y, r6.x
    mov x0[1].x, r7.x
    sincos r6.x, r7.x, r6.y
    mov x0[2].y, r6.x
    mov x0[2].x, r7.x
    sincos r6.x, r7.x, r6.z
    mov x0[3].y, r6.x
    mov x0[3].x, r7.x
    sincos r6.x, r7.x, r6.w
    mov x0[4].y, r6.x
    mov x0[4].x, r7.x
    mad r4.w, r4.w, l(0.017453), l(6.283185)
    sincos r6.x, r7.x, r4.w
    mov x0[5].y, r6.x
    mov x0[5].x, r7.x
    mad r5.zw, v1.xxxy, l(0.000000, 0.000000, 1.666667, 1.666667), l(0.000000, 0.000000, -0.500000, -0.500000)
    mad r6.xy, v1.yxyy, l(1.666667, -1.666667, 0.000000, 0.000000), l(-0.500000, 0.500000, 0.000000, 0.000000)
    dp2 r4.w, r6.xyxx, r6.xyxx
    rsq r4.w, r4.w
    mul r6.xy, r4.wwww, r6.xyxx
    dp2 r4.w, r5.zwzz, r5.zwzz
    sqrt r4.w, r4.w
    mul r4.w, r4.w, cb0[6].y
    mul r4.w, r4.w, l(2.221000)
    sincos null, r4.w, r4.w
    add r5.z, -r4.w, l(1.000000)
    mul r5.w, r1.w, l(0.990000)
    add r6.z, -cb0[8].z, l(1.000000)
    add r6.w, cb0[8].z, l(1.000000)
    mov r3.yz, r3.wwww
    mov r4.xyz, r2.xyzx
    mov r3.w, cb0[4].z
    mov r7.x, cb0[5].x
    mov r7.yz, cb0[6].xxzx
    mov r7.w, cb0[7].x
    mov r8.x, cb0[8].x
    mov r0.z, r2.w
    mov r8.y, l(1.000000)
    loop 
      lt r8.z, r0.w, r8.y
      breakc_nz r8.z
      div r8.z, r8.y, r0.w
      mov r9.xyz, r4.xyzx
      mov r8.w, r3.w
      mov r9.w, r7.x
      mov r10.xyz, r7.yzwy
      mov r10.w, r8.x
      mov r11.x, r0.z
      mov r11.y, l(1)
      loop 
        ilt r11.z, l(5), r11.y
        breakc_nz r11.z
        iadd r11.zw, r11.yyyy, l(0, 0, -1, 1)
        mov r12.xy, x0[r11.z + 0].xyxx
        mov r12.zw, x0[r11.y + 0].xxxy
        add r12.zw, -r12.xxxy, r12.zzzw
        mov r11.z, r8.w
        mov r13.xyzw, r9.xyzw
        mov r14.xyzw, r10.xyzw
        mov r15.x, r11.x
        mov r15.y, r8.z
        mov r15.z, l(0)
        loop 
          ge r15.w, r15.z, r8.y
          breakc_nz r15.w
          div r15.w, r15.z, r8.y
          mad r16.x, r15.w, l(6.283185), l(-1.570796)
          sincos r16.x, null, r16.x
          mad r16.x, r16.x, cb0[5].y, l(1.000000)
          mul r16.x, r15.y, r16.x
          movc r15.y, r13.w, r16.x, r15.y
          mad r16.xy, r15.wwww, r12.zwzz, r12.xyxx
          mul r16.xy, r15.yyyy, r16.xyxx
          dp2 r15.w, r16.xyxx, r16.xyxx
          rsq r15.w, r15.w
          mul r16.zw, r15.wwww, r16.xxxy
          mad r16.zw, r16.zzzw, r15.yyyy, -r16.xxxy
          mad r16.zw, cb0[4].wwww, r16.zzzw, r16.xxxy
          movc r16.xy, r11.zzzz, r16.zwzz, r16.xyxx
          dp2 r15.w, r6.xyxx, r16.xyxx
          mul r16.zw, r6.xxxy, r15.wwww
          mul r16.zw, r5.zzzz, r16.zzzw
          mad r16.zw, r16.xxxy, r4.wwww, r16.zzzw
          movc r16.xy, r14.xxxx, r16.zwzz, r16.xyxx
          mul r16.zw, r5.xxxy, r16.xxxy
          movc r16.xy, r14.yyyy, r16.zwzz, r16.xyxx
          if_nz r14.w
            mul r16.zw, r3.xxxy, r16.xxxy
            mad r17.xy, r16.zwzz, r6.zzzz, r0.xyxx
            sample_l_indexable(texture2d)(float,float,float,float) r17.xyz, r17.xyxx, t0.xyzw, s0, l(0.000000)
            mad r18.xy, v1.xyxx, l(1.666667, 1.666667, 0.000000, 0.000000), r16.zwzz
            sample_l_indexable(texture2d)(float,float,float,float) r18.xyzw, r18.xyxx, t0.xyzw, s0, l(0.000000)
            mad r16.zw, r16.zzzw, r6.wwww, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r19.xyz, r16.zwzz, t0.xyzw, s0, l(0.000000)
            switch cb0[8].y
              case l(0)
              mov r18.x, r17.x
              mov r18.z, r19.z
              break 
              case l(1)
              mov r18.y, r19.y
              mov r18.z, r17.z
              break 
              case l(2)
              mov r18.x, r19.x
              mov r18.y, r17.y
              break 
              case l(3)
              mov r18.x, r17.x
              mov r18.y, r19.y
              break 
              case l(4)
              mov r18.y, r17.y
              mov r18.z, r19.z
              break 
              default 
              mov r18.x, r19.x
              mov r18.z, r17.z
              break 
            endswitch 
          else 
            mad r16.zw, r16.xxxy, r3.xxxz, r0.xxxy
            sample_l_indexable(texture2d)(float,float,float,float) r18.xyzw, r16.zwzz, t0.xyzw, s0, l(0.000000)
          endif 
          ge r15.w, r18.w, r5.w
          mad r16.z, r18.w, l(2.000000), l(-1.000000)
          mul r16.z, |r16.z|, |r16.z|
          mul r16.z, r16.z, r16.z
          movc r15.w, r15.w, l(1.000000), r16.z
          dp2 r16.x, r16.xyxx, r16.xyxx
          sqrt r16.x, r16.x
          log r16.x, r16.x
          mul r16.x, r16.x, cb0[7].y
          exp r16.x, r16.x
          add r16.x, r16.x, l(-1.000000)
          mad r16.x, cb0[7].z, r16.x, l(1.000000)
          mul r16.x, r15.w, r16.x
          movc r15.w, r14.z, r16.x, r15.w
          log r16.xyz, |r18.xyzx|
          mul r16.xyz, r16.xyzx, cb0[7].wwww
          exp r16.xyz, r16.xyzx
          mad r13.xyz, r16.xyzx, r15.wwww, r13.xyzx
          add r15.x, r15.w, r15.x
          add r15.z, r15.z, l(1.000000)
        endloop 
        mov r9.xyz, r13.xyzx
        mov r11.x, r15.x
        mov r11.xy, r11.xwxx
      endloop 
      mov r4.xyz, r9.xyzx
      mov r0.z, r11.x
      add r8.y, r8.y, l(1.000000)
    endloop 
    break 
  endswitch 
  div r0.xyz, r4.xyzx, r0.zzzz
  max r0.xyz, r0.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[7].w
  log r0.xyz, r0.xyzx
  mul r0.xyz, r0.xyzx, r0.wwww
  exp r1.xyz, r0.xyzx
endif 
mov o0.xyzw, r1.xyzw
ret 
// Approximately 787 instruction slots used
