//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int2 inp_video_size;               // Offset:    0 Size:     8
//   int resize_method;                 // Offset:    8 Size:     4
//   bool ROTATED;                      // Offset:   12 Size:     4 [unused]
//   int inp_screen_ratio;              // Offset:   16 Size:     4 [unused]
//   int inp_game_ratio;                // Offset:   20 Size:     4 [unused]
//   float2 aspect_ratio;               // Offset:   24 Size:     8 [unused]
//   bool USE_BACKGROUND;               // Offset:   32 Size:     4 [unused]
//   bool USE_OFF_BEZEL;                // Offset:   36 Size:     4 [unused]
//   float2 arts_aspect_ratio;          // Offset:   40 Size:     8 [unused]
//   float3 bg_col;                     // Offset:   48 Size:    12 [unused]
//   bool CRT_EFFECT;                   // Offset:   60 Size:     4 [unused]
//   float2 texture_size;               // Offset:   64 Size:     8 [unused]
//   float2 buffer_offset;              // Offset:   72 Size:     8 [unused]
//   bool CURVATURE;                    // Offset:   80 Size:     4 [unused]
//   bool VERTICAL_SCANLINES;           // Offset:   84 Size:     4 [unused]
//   int aperture_type;                 // Offset:   88 Size:     4 [unused]
//   float dotmask;                     // Offset:   92 Size:     4 [unused]
//   float sharper;                     // Offset:   96 Size:     4 [unused]
//   bool OVERSAMPLE;                   // Offset:  100 Size:     4 [unused]
//   float ovs_boost;                   // Offset:  104 Size:     4 [unused]
//   float lum;                         // Offset:  108 Size:     4 [unused]
//   float CRTgamma;                    // Offset:  112 Size:     4 [unused]
//   float monitorgamma;                // Offset:  116 Size:     4 [unused]
//   float R;                           // Offset:  120 Size:     4 [unused]
//   float d;                           // Offset:  124 Size:     4 [unused]
//   float2 tilt;                       // Offset:  128 Size:     8 [unused]
//   float cornersize;                  // Offset:  136 Size:     4 [unused]
//   float cornersmooth;                // Offset:  140 Size:     4 [unused]
//   bool BLOOM;                        // Offset:  144 Size:     4 [unused]
//   float BloomBlurOffset;             // Offset:  148 Size:     4 [unused]
//   float BloomStrength;               // Offset:  152 Size:     4 [unused]
//   float BloomContrast;               // Offset:  156 Size:     4 [unused]
//   bool USE_BEZEL;                    // Offset:  160 Size:     4 [unused]
//   bool USE_FRAME;                    // Offset:  164 Size:     4 [unused]
//   bool USE_OVERLAY;                  // Offset:  168 Size:     4 [unused]
//   float2 h_starts;                   // Offset:  176 Size:     8 [unused]
//   float2 v_starts;                   // Offset:  184 Size:     8 [unused]
//   float2 overscan;                   // Offset:  192 Size:     8 [unused]
//   float2 src_offsets;                // Offset:  200 Size:     8 [unused]
//   bool PASS_THROUGH_BORDERS;         // Offset:  208 Size:     4 [unused]
//   float2 ext_zoom;                   // Offset:  212 Size:     8 [unused]
//   float2 ext_offsets;                // Offset:  224 Size:     8 [unused]
//   bool ACTIVATION_PIXEL_TEST;        // Offset:  232 Size:     4
//   float test_epsilon;                // Offset:  236 Size:     4
//   int2 test_pixel;                   // Offset:  240 Size:     8
//   float3 test_color;                 // Offset:  256 Size:    12
//   int2 test_pixel2;                  // Offset:  272 Size:     8
//   float3 test_color2;                // Offset:  288 Size:    12
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[19], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_output o0.xyzw
dcl_temps 4
switch cb0[0].z
  case l(1)
  mov r0.x, l(3.555556)
  break 
  case l(2)
  mov r0.x, l(2.370370)
  break 
  case l(3)
  mov r0.x, l(1.777778)
  break 
  case l(4)
  mov r0.x, l(1.666667)
  break 
  case l(5)
  mov r0.x, l(1.600000)
  break 
  case l(6)
  mov r0.x, l(1.333333)
  break 
  case l(7)
  mov r0.x, l(1.250000)
  break 
  case l(8)
  mov r0.x, l(1.000000)
  break 
  case l(9)
  mov r0.x, l(0.800000)
  break 
  case l(10)
  mov r0.x, l(0.750000)
  break 
  default 
  mov r0.x, l(1.777778)
  break 
endswitch 
if_nz cb0[14].z
  itof r0.yz, cb0[0].xxyx
  ieq r1.xy, cb0[0].xyxx, l(0, 0, 0, 0)
  and r0.w, r1.y, r1.x
  ge r1.x, r0.x, l(1.777778)
  div r2.yw, l(0.000000, 1920.000000, 0.000000, 1920.000000), r0.xxxx
  mul r3.xz, r0.xxxx, l(1080.000000, 0.000000, 1080.000000, 0.000000)
  mov r2.xz, l(1920.000000,0,1920.000000,0)
  mov r3.yw, l(0,1080.000000,0,1080.000000)
  movc r1.xyzw, r1.xxxx, r2.xyzw, r3.xyzw
  mul r2.x, r0.z, r0.x
  movc r2.xz, cb0[0].xxxx, r0.yyyy, r2.xxxx
  div r0.x, r2.z, r0.x
  movc r2.yw, cb0[0].yyyy, r0.zzzz, r0.xxxx
  movc r1.xyzw, r0.wwww, r1.xyzw, r2.xyzw
  mad r1.xyzw, r1.xyzw, l(-0.500000, -0.500000, 0.000521, 0.000926), l(960.000000, 540.000000, 0.000000, 0.000000)
  movc r0.xyzw, r0.wwww, r1.xyzw, l(0,0,1.000000,1.000000)
  itof r1.xy, cb0[15].xyxx
  mad r1.xy, r1.xyxx, r0.zwzz, r0.xyxx
  mul r1.xy, r1.xyxx, l(0.000521, 0.000926, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t0.xyzw, s0
  add r1.xyz, r1.xyzx, -cb0[16].xyzx
  itof r2.xy, cb0[17].xyxx
  mad r0.xy, r2.xyxx, r0.zwzz, r0.xyxx
  mul r0.xy, r0.xyxx, l(0.000521, 0.000926, 0.000000, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, r0.xyxx, t0.xyzw, s0
  add r0.xyz, r0.xyzx, -cb0[18].xyzx
  dp3 r0.w, r1.xyzx, r1.xyzx
  dp3 r0.x, r0.xyzx, r0.xyzx
  lt r0.xw, cb0[14].wwww, r0.xxxw
  or r0.x, r0.x, r0.w
  not r0.x, r0.x
else 
  mov r0.x, l(-1)
endif 
if_nz r0.x
  mov o0.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  ret 
else 
  mov o0.xyzw, l(0,0,0,1.000000)
  ret 
endif 
ret 
// Approximately 78 instruction slots used
