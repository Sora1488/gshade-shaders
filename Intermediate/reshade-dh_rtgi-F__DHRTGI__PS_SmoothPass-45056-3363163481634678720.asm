//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__DHRTGI__normalTex            texture  float4          2d             t6      1 
// __V__DHRTGI__lightPassTex         texture  float4          2d            t10      1 
// __V__DHRTGI__lightPassAOTex       texture  float4          2d            t14      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 10
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r0.x, r0.x, r0.y
lt r0.y, l(0.990000), r0.x
if_nz r0.y
  mov o0.xyzw, l(0,0,0,0)
  mov o1.xyzw, l(0,0,0,0)
  ret 
endif 
mul r0.yz, v1.xxyx, l(0.000000, 960.000000, 540.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t6.xyzw, s0, l(0.000000)
add r1.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r1.xyz, r1.xyzx, r1.xyzx
add_sat r2.xyzw, v1.xyxy, l(-0.001042, -0.001852, 0.001042, 0.001852)
round_z r0.yz, r0.yyzy
mov r3.zw, l(0,0,0,0)
mov r0.w, l(0)
mov r1.w, l(0)
mov r4.xyzw, l(0,0,0,0)
mov r5.x, l(0)
mov r6.x, r2.x
loop 
  lt r5.y, r2.z, r6.x
  breakc_nz r5.y
  mov r5.yzw, r4.xxyz
  mov r6.z, r0.w
  mov r6.w, r1.w
  mov r7.x, r4.w
  mov r7.y, r5.x
  mov r7.z, r2.y
  loop 
    lt r7.w, r2.w, r7.z
    breakc_nz r7.w
    mov r6.y, r7.z
    sample_l_indexable(texture2d)(float,float,float,float) r7.w, r6.xyxx, t2.yzwx, s0, l(0.000000)
    mad r8.x, -r7.w, l(999.000000), l(1000.000000)
    div r7.w, r7.w, r8.x
    lt r8.x, l(0.990000), r7.w
    if_nz r8.x
      add r8.x, r7.z, l(0.001852)
      mov r7.z, r8.x
      continue 
    endif 
    add r7.w, -r0.x, r7.w
    ge r7.w, l(0.100000), |r7.w|
    if_nz r7.w
      sample_l_indexable(texture2d)(float,float,float,float) r8.xyz, r6.xyxx, t6.xyzw, s0, l(0.000000)
      add r8.xyz, r8.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
      add r9.xyz, r8.xyzx, r8.xyzx
      mad r8.xyz, r8.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), -r1.xyzx
      add r8.xyz, |r8.xyzx|, l(-1.500000, -1.500000, -1.500000, 0.000000)
      max r8.xyz, r8.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
      ne r8.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r8.xyzx
      or r7.w, r8.y, r8.x
      or r7.w, r8.z, r7.w
      if_z r7.w
        mul r8.xy, r6.xyxx, l(960.000000, 540.000000, 0.000000, 0.000000)
        ftoi r3.xy, r8.xyxx
        round_z r8.xy, r8.xyxx
        add r8.xy, r0.yzyy, -r8.xyxx
        dp2 r6.y, r8.xyxx, r8.xyxx
        sqrt r6.y, r6.y
        ge r6.y, l(1.000000), r6.y
        if_nz r6.y
          ld_indexable(texture2d)(float,float,float,float) r6.y, r3.xyzz, t14.yxzw
          max r6.y, r6.y, l(0.000000)
          add r7.x, r6.y, r7.x
          iadd r7.y, r7.y, l(1)
        endif 
        ld_indexable(texture2d)(float,float,float,float) r8.xyz, r3.xyww, t10.xyzw
        dp3 r3.x, r9.xyzx, r1.xyzx
        mad r5.yzw, r8.xxyz, |r3.xxxx|, r5.yyzw
        add r6.z, |r3.x|, r6.z
        iadd r6.w, r6.w, l(1)
      endif 
    endif 
    add r7.z, r7.z, l(0.001852)
  endloop 
  mov r4.xyz, r5.yzwy
  mov r0.w, r6.z
  mov r1.w, r6.w
  mov r4.w, r7.x
  mov r5.x, r7.y
  add r6.x, r6.x, l(0.001042)
endloop 
ilt r0.x, r1.w, l(1)
if_nz r0.x
  sample_l_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t10.xyzw, s2, l(1.000000)
  mov o0.xyz, r0.xyzx
  mov o0.w, l(1.000000)
  mov o1.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  ret 
else 
  itof r1.x, r5.x
  div r0.xyz, r4.wwww, r1.xxxx
endif 
div o0.xyz, r4.xyzx, r0.wwww
mov o0.w, l(1.000000)
mov o1.xyz, r0.xyzx
mov o1.w, l(1.000000)
ret 
// Approximately 101 instruction slots used
