//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Timer;                       // Offset:    0 Size:     4 [unused]
//   bool HasDepth;                     // Offset:    4 Size:     4 [unused]
//   int DISTANCE;                      // Offset:    8 Size:     4 [unused]
//   int HIGHLIGHT_DIST;                // Offset:   12 Size:     4 [unused]
//   float3 FOG_TINT;                   // Offset:   16 Size:    12 [unused]
//   int AUTO_COLOR;                    // Offset:   28 Size:     4
//   int WIDTH;                         // Offset:   32 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __V__TexBlur1                     texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 5
ilt r0.x, l(1), cb0[1].w
if_nz r0.x
  add r0.xy, v1.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
  mad r0.xy, r0.xyxx, l(0.125000, 0.125000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r0.zw, r0.xxxy, l(0.000000, 0.000000, 1920.000000, 1080.000000), l(0.000000, 0.000000, -0.500000, -0.500000)
  round_ni r0.zw, r0.zzzw
  add r1.xyzw, r0.zwzw, l(0.500000, 0.500000, -0.500000, -0.500000)
  mad r0.xy, r0.xyxx, l(1920.000000, 1080.000000, 0.000000, 0.000000), -r1.xyxx
  mul r2.xyzw, r0.xyxy, r0.xyxy
  mul r1.xy, r0.xyxx, r2.zwzz
  mul r3.xyzw, r2.xyzw, l(3.000000, 3.000000, 6.000000, 6.000000)
  mad r2.xy, r2.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000), -r1.xyxx
  mad r2.xy, -r0.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000), r2.xyxx
  add r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r3.zw, r1.xxxy, l(0.000000, 0.000000, 3.000000, 3.000000), -r3.zzzw
  add r3.zw, r3.zzzw, l(0.000000, 0.000000, 4.000000, 4.000000)
  mad r3.xy, r1.xyxx, l(-3.000000, -3.000000, 0.000000, 0.000000), r3.xyxx
  mad r3.xy, r0.xyxx, l(3.000000, 3.000000, 0.000000, 0.000000), r3.xyxx
  mad r0.xy, r2.zwzz, r0.xyxx, r3.xyxx
  add r2.xy, r2.xyxx, r3.zwzz
  div r2.zw, r3.zzzw, r2.xxxy
  add r3.xy, r1.zwzz, r2.zwzz
  add r0.xyzw, r0.xyzw, l(1.000000, 1.000000, 1.500000, 1.500000)
  div r1.xy, r1.xyxx, r0.xyxx
  add r3.zw, r0.zzzw, r1.xxxy
  mul r1.xyzw, r3.xyzw, l(0.000521, 0.000926, 0.000521, 0.000926)
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xyxx, t10.xyzw, s1
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.zyzz, t10.xyzw, s1
  mul r4.xyz, r0.xxxx, r4.xyzx
  mad r3.xyz, r3.xyzx, r2.xxxx, r4.xyzx
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.xwxx, t10.xyzw, s1
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t10.xyzw, s1
  mul r0.xzw, r0.xxxx, r1.xxyz
  mad r0.xzw, r4.xxyz, r2.xxxx, r0.xxzw
  mul r0.xyz, r0.xzwx, r0.yyyy
  mad r0.xyz, r2.yyyy, r3.xyzx, r0.xyzx
  mul o0.xyz, r0.xyzx, l(0.027778, 0.027778, 0.027778, 0.000000)
else 
  sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t10.xyzw, s1
  mov o0.xyz, r0.xxxx
endif 
ret 
// Approximately 42 instruction slots used
