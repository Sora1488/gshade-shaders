//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6
mul r0.xy, v1.xyxx, l(480.000000, 270.000000, 0.000000, 0.000000)
round_ni r0.xy, r0.xyxx
mad r0.zw, r0.xxxy, l(0.000000, 0.000000, 4.000000, 4.000000), l(0.000000, 0.000000, 0.500000, 0.500000)
mul r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000521, 0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r1.xyzw, r0.zwzz, t0.xyzw, s0, l(0.000000)
mov r2.xyzw, l(0,0,0,0)
mov r0.z, l(0)
loop 
  ige r0.w, r0.z, l(4)
  breakc_nz r0.w
  itof r0.w, r0.z
  mad r3.x, r0.x, l(4.000000), r0.w
  mov r4.xyzw, r2.xyzw
  mov r0.w, l(0)
  loop 
    ige r3.z, r0.w, l(4)
    breakc_nz r3.z
    itof r3.z, r0.w
    mad r3.y, r0.y, l(4.000000), r3.z
    add r3.yz, r3.xxyx, l(0.000000, 0.500000, 0.500000, 0.000000)
    mul r3.yz, r3.yyzy, l(0.000000, 0.000521, 0.000926, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r3.yzyy, t0.xyzw, s0, l(0.000000)
    add r4.xyzw, r4.xyzw, r5.xyzw
    iadd r0.w, r0.w, l(1)
  endloop 
  mov r2.xyzw, r4.xyzw
  iadd r0.z, r0.z, l(1)
endloop 
mul r0.xyzw, r1.xyzw, l(0.667000, 0.667000, 0.667000, 0.667000)
mad o0.xyzw, r2.xyzw, l(0.020813, 0.020813, 0.020813, 0.020813), r0.xyzw
ret 
// Approximately 31 instruction slots used
