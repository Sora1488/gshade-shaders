//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div r0.w, r0.w, r1.x
lt r1.x, l(0.999000), r0.w
if_nz r1.x
  mov o0.xyz, r0.xyzx
  ret 
endif 
add r1.xyzw, v1.xyxy, l(-0.000521, -0.000926, 0.000521, -0.000926)
sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t2.xyzw, s0, l(0.000000)
mad r1.y, -r1.x, l(999.000000), l(1000.000000)
div r1.x, r1.x, r1.y
sample_l_indexable(texture2d)(float,float,float,float) r1.y, r1.zwzz, t2.yxzw, s0, l(0.000000)
mad r1.z, -r1.y, l(999.000000), l(1000.000000)
div r1.y, r1.y, r1.z
add r1.xy, r0.wwww, -r1.xyxx
lt r1.z, r0.w, l(0.300000)
ge r1.w, l(0.002500), |r1.x|
and r1.z, r1.w, r1.z
ge r1.w, l(0.002500), |r1.y|
and r1.z, r1.w, r1.z
ge r1.w, |r1.x|, l(0.050000)
ge r2.x, |r1.y|, l(0.050000)
or r1.w, r1.w, r2.x
add r1.x, |r1.y|, |r1.x|
mul r1.x, r1.x, l(5.000000)
min r1.x, r1.x, l(1.000000)
mul r1.y, |r0.w|, |r0.w|
mul r1.x, r1.y, r1.x
add r1.y, r0.w, l(-0.700000)
mul r1.y, r1.y, l(3.333333)
movc r1.x, r1.w, r1.x, r1.y
ge r1.y, l(0.000000), r1.x
not r1.z, r1.z
and r1.y, r1.z, r1.y
if_nz r1.y
  mov o0.xyz, r0.xyzx
  ret 
endif 
add r2.xyzw, v1.xyxy, l(0.000208, -0.001111, -0.000625, -0.000370)
sample_indexable(texture2d)(float,float,float,float) r1.yzw, r2.xyxx, t0.wxyz, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t0.xyzw, s0
add r1.yzw, r1.yyzw, r2.xxyz
add r2.xyzw, v1.xyxy, l(0.000625, 0.000370, -0.000208, 0.001111)
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t0.xyzw, s0
add r1.yzw, r1.yyzw, r3.xxyz
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t0.xyzw, s0
add r1.yzw, r1.yyzw, r2.xxyz
mul r2.xyz, r1.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000)
lt r2.w, l(0.000000), r1.x
if_nz r2.w
  mov_sat r1.x, r1.x
  add r2.w, -r1.x, l(1.000000)
  mul r3.xyz, r0.xyzx, r2.wwww
  mad o0.xyz, r2.xyzx, r1.xxxx, r3.xyzx
  ret 
endif 
mad r0.w, -r0.w, l(3.333333), l(1.000000)
mad r1.xyz, -r1.yzwy, l(0.250000, 0.250000, 0.250000, 0.000000), r0.xyzx
mul r2.xyz, r0.wwww, l(4.646828, 15.632229, 1.578086, 0.000000)
mov r1.w, l(1.000000)
mov r2.w, l(0.500000)
dp4_sat r0.w, r1.xyzw, r2.xyzw
mad r0.w, r0.w, l(0.070000), l(-0.035000)
add o0.xyz, r0.wwww, r0.xyzx
ret 
// Approximately 67 instruction slots used
