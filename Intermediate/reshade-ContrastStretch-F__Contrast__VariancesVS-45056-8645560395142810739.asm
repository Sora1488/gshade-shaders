//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__Contrast__Histogram          texture  float4          2d             t2      1 
// __V__Contrast__PrefixSums         texture  float4          2d             t4      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_VERTEXID              0   x           0   VERTID    uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_sgv v0.x, vertex_id
dcl_output_siv o0.xyzw, position
dcl_output o1.xy
dcl_temps 2
uge r0.x, l(341), v0.x
if_nz r0.x
  ld_indexable(texture2d)(float,float,float,float) r0.xy, l(341, 0, 0, 0), t4.xyzw
  div r0.y, r0.y, r0.x
  utof r0.z, v0.x
  ftoi r1.x, r0.z
  mov r1.yzw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r0.w, r1.xyzw, t2.yzwx
  add r0.y, -r0.y, r0.z
  mul r0.y, |r0.y|, l(0.002941)
  div r0.x, r0.w, r0.x
  mul o1.xy, r0.xxxx, r0.yyyy
  mov r0.x, l(-0.666667)
else 
  uge r0.y, l(682), v0.x
  if_nz r0.y
    ld_indexable(texture2d)(float,float,float,float) r0.yz, l(682, 0, 0, 0), t4.zxyw
    ld_indexable(texture2d)(float,float,float,float) r1.xy, l(341, 0, 0, 0), t4.xyzw
    add r0.yz, r0.yyzy, -r1.xxyx
    div r0.z, r0.z, r0.y
    utof r0.w, v0.x
    ftoi r1.x, r0.w
    mov r1.yzw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t2.xyzw
    add r0.z, -r0.z, r0.w
    mul r0.z, |r0.z|, l(0.002933)
    div r0.y, r1.x, r0.y
    mul o1.xy, r0.yyyy, r0.zzzz
    mov r0.x, l(0)
  else 
    ld_indexable(texture2d)(float,float,float,float) r0.yz, l(1023, 0, 0, 0), t4.zxyw
    ld_indexable(texture2d)(float,float,float,float) r1.xy, l(682, 0, 0, 0), t4.xyzw
    add r0.yz, r0.yyzy, -r1.xxyx
    div r0.z, r0.z, r0.y
    utof r0.w, v0.x
    ftoi r1.x, r0.w
    mov r1.yzw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r1.x, r1.xyzw, t2.xyzw
    add r0.z, -r0.z, r0.w
    mul r0.z, |r0.z|, l(0.002924)
    div r0.y, r1.x, r0.y
    mul o1.xy, r0.yyyy, r0.zzzz
    mov r0.x, l(0.666667)
  endif 
endif 
mov o0.x, r0.x
mov o0.yzw, l(0,0,0,1.000000)
ret 
// Approximately 48 instruction slots used
