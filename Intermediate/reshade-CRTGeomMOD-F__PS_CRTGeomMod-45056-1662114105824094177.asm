//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int2 inp_video_size;               // Offset:    0 Size:     8
//   int resize_method;                 // Offset:    8 Size:     4
//   bool ROTATED;                      // Offset:   12 Size:     4
//   int inp_screen_ratio;              // Offset:   16 Size:     4
//   int inp_game_ratio;                // Offset:   20 Size:     4
//   float2 aspect_ratio;               // Offset:   24 Size:     8
//   bool USE_BACKGROUND;               // Offset:   32 Size:     4
//   bool USE_OFF_BEZEL;                // Offset:   36 Size:     4 [unused]
//   float2 arts_aspect_ratio;          // Offset:   40 Size:     8
//   float3 bg_col;                     // Offset:   48 Size:    12
//   bool CRT_EFFECT;                   // Offset:   60 Size:     4
//   float2 texture_size;               // Offset:   64 Size:     8
//   float2 buffer_offset;              // Offset:   72 Size:     8
//   bool CURVATURE;                    // Offset:   80 Size:     4
//   bool VERTICAL_SCANLINES;           // Offset:   84 Size:     4
//   int aperture_type;                 // Offset:   88 Size:     4
//   float dotmask;                     // Offset:   92 Size:     4
//   float sharper;                     // Offset:   96 Size:     4
//   bool OVERSAMPLE;                   // Offset:  100 Size:     4
//   float ovs_boost;                   // Offset:  104 Size:     4
//   float lum;                         // Offset:  108 Size:     4
//   float CRTgamma;                    // Offset:  112 Size:     4
//   float monitorgamma;                // Offset:  116 Size:     4
//   float R;                           // Offset:  120 Size:     4
//   float d;                           // Offset:  124 Size:     4
//   float2 tilt;                       // Offset:  128 Size:     8
//   float cornersize;                  // Offset:  136 Size:     4
//   float cornersmooth;                // Offset:  140 Size:     4
//   bool BLOOM;                        // Offset:  144 Size:     4 [unused]
//   float BloomBlurOffset;             // Offset:  148 Size:     4 [unused]
//   float BloomStrength;               // Offset:  152 Size:     4 [unused]
//   float BloomContrast;               // Offset:  156 Size:     4 [unused]
//   bool USE_BEZEL;                    // Offset:  160 Size:     4 [unused]
//   bool USE_FRAME;                    // Offset:  164 Size:     4 [unused]
//   bool USE_OVERLAY;                  // Offset:  168 Size:     4 [unused]
//   float2 h_starts;                   // Offset:  176 Size:     8
//   float2 v_starts;                   // Offset:  184 Size:     8
//   float2 overscan;                   // Offset:  192 Size:     8
//   float2 src_offsets;                // Offset:  200 Size:     8
//   bool PASS_THROUGH_BORDERS;         // Offset:  208 Size:     4
//   float2 ext_zoom;                   // Offset:  212 Size:     8
//   float2 ext_offsets;                // Offset:  224 Size:     8
//   bool ACTIVATION_PIXEL_TEST;        // Offset:  232 Size:     4
//   float test_epsilon;                // Offset:  236 Size:     4 [unused]
//   int2 test_pixel;                   // Offset:  240 Size:     8 [unused]
//   float3 test_color;                 // Offset:  256 Size:    12 [unused]
//   int2 test_pixel2;                  // Offset:  272 Size:     8 [unused]
//   float3 test_color2;                // Offset:  288 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __s3                              sampler      NA          NA             s3      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__background_texture           texture  float4          2d             t4      1 
// __V__mask_texture                 texture  float4          2d            t14      1 
// __V__mask2x2_texture              texture  float4          2d            t16      1 
// __V__PixelTestTex                 texture  float4          2d            t18      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[15], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t14
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t18
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 15
switch cb0[0].z
  case l(1)
  mov r0.x, l(3.555556)
  break 
  case l(2)
  mov r0.x, l(2.370370)
  break 
  case l(3)
  mov r0.x, l(1.777778)
  break 
  case l(4)
  mov r0.x, l(1.666667)
  break 
  case l(5)
  mov r0.x, l(1.600000)
  break 
  case l(6)
  mov r0.x, l(1.333333)
  break 
  case l(7)
  mov r0.x, l(1.250000)
  break 
  case l(8)
  mov r0.x, l(1.000000)
  break 
  case l(9)
  mov r0.x, l(0.800000)
  break 
  case l(10)
  mov r0.x, l(0.750000)
  break 
  default 
  mov r0.x, l(1.777778)
  break 
endswitch 
itof r0.yz, cb0[0].xxyx
ieq r1.xy, cb0[0].xyxx, l(0, 0, 0, 0)
and r0.w, r1.y, r1.x
switch cb0[0].z
  case l(1)
  mov r1.x, l(3.555556)
  break 
  case l(2)
  mov r1.x, l(2.370370)
  break 
  case l(3)
  mov r1.x, l(1.777778)
  break 
  case l(4)
  mov r1.x, l(1.666667)
  break 
  case l(5)
  mov r1.x, l(1.600000)
  break 
  case l(6)
  mov r1.x, l(1.333333)
  break 
  case l(7)
  mov r1.x, l(1.250000)
  break 
  case l(8)
  mov r1.x, l(1.000000)
  break 
  case l(9)
  mov r1.x, l(0.800000)
  break 
  case l(10)
  mov r1.x, l(0.750000)
  break 
  default 
  mov r1.x, l(1.777778)
  break 
endswitch 
switch cb0[0].z
  case l(1)
  mov r1.y, l(3.555556)
  break 
  case l(2)
  mov r1.y, l(2.370370)
  break 
  case l(3)
  mov r1.y, l(1.777778)
  break 
  case l(4)
  mov r1.y, l(1.666667)
  break 
  case l(5)
  mov r1.y, l(1.600000)
  break 
  case l(6)
  mov r1.y, l(1.333333)
  break 
  case l(7)
  mov r1.y, l(1.250000)
  break 
  case l(8)
  mov r1.y, l(1.000000)
  break 
  case l(9)
  mov r1.y, l(0.800000)
  break 
  case l(10)
  mov r1.y, l(0.750000)
  break 
  default 
  mov r1.y, l(1.777778)
  break 
endswitch 
switch cb0[0].z
  case l(1)
  mov r1.z, l(3.555556)
  break 
  case l(2)
  mov r1.z, l(2.370370)
  break 
  case l(3)
  mov r1.z, l(1.777778)
  break 
  case l(4)
  mov r1.z, l(1.666667)
  break 
  case l(5)
  mov r1.z, l(1.600000)
  break 
  case l(6)
  mov r1.z, l(1.333333)
  break 
  case l(7)
  mov r1.z, l(1.250000)
  break 
  case l(8)
  mov r1.z, l(1.000000)
  break 
  case l(9)
  mov r1.z, l(0.800000)
  break 
  case l(10)
  mov r1.z, l(0.750000)
  break 
  default 
  mov r1.z, l(1.777778)
  break 
endswitch 
movc r2.xy, cb0[0].wwww, cb0[1].wzww, cb0[1].zwzz
switch cb0[0].z
  case l(1)
  mov r1.w, l(3.555556)
  break 
  case l(2)
  mov r1.w, l(2.370370)
  break 
  case l(3)
  mov r1.w, l(1.777778)
  break 
  case l(4)
  mov r1.w, l(1.666667)
  break 
  case l(5)
  mov r1.w, l(1.600000)
  break 
  case l(6)
  mov r1.w, l(1.333333)
  break 
  case l(7)
  mov r1.w, l(1.250000)
  break 
  case l(8)
  mov r1.w, l(1.000000)
  break 
  case l(9)
  mov r1.w, l(0.800000)
  break 
  case l(10)
  mov r1.w, l(0.750000)
  break 
  default 
  mov r1.w, l(1.777778)
  break 
endswitch 
ge r2.z, r1.w, l(1.777778)
div r3.y, l(1920.000000), r1.w
mul r3.z, r1.w, l(1080.000000)
mov r3.xw, l(1920.000000,0,0,1080.000000)
movc r2.zw, r2.zzzz, r3.xxxy, r3.zzzw
mul r3.x, r0.z, r1.w
movc r3.x, cb0[0].x, r0.y, r3.x
div r1.w, r3.x, r1.w
movc r3.y, cb0[0].y, r0.z, r1.w
movc r2.zw, r0.wwww, r2.zzzw, r3.xxxy
switch cb0[1].y
  case l(0)
  div r1.w, r2.z, r2.w
  break 
  case l(1)
  mov r1.w, l(3.555556)
  break 
  case l(2)
  mov r1.w, l(2.370370)
  break 
  case l(3)
  mov r1.w, l(1.777778)
  break 
  case l(4)
  mov r1.w, l(1.666667)
  break 
  case l(5)
  mov r1.w, l(1.600000)
  break 
  case l(6)
  mov r1.w, l(1.333333)
  break 
  case l(7)
  mov r1.w, l(1.250000)
  break 
  case l(8)
  mov r1.w, l(1.000000)
  break 
  case l(9)
  mov r1.w, l(0.800000)
  break 
  case l(10)
  mov r1.w, l(0.750000)
  break 
  default 
  div r1.w, r2.z, r2.w
  break 
endswitch 
switch cb0[1].x
  case l(0)
  mov r2.z, l(1.777778)
  break 
  case l(1)
  mov r2.z, l(3.555556)
  break 
  case l(2)
  mov r2.z, l(2.370370)
  break 
  case l(3)
  mov r2.z, l(1.777778)
  break 
  case l(4)
  mov r2.z, l(1.666667)
  break 
  case l(5)
  mov r2.z, l(1.600000)
  break 
  case l(6)
  mov r2.z, l(1.333333)
  break 
  case l(7)
  mov r2.z, l(1.250000)
  break 
  case l(8)
  mov r2.z, l(1.000000)
  break 
  case l(9)
  mov r2.z, l(0.800000)
  break 
  case l(10)
  mov r2.z, l(0.750000)
  break 
  default 
  mov r2.z, l(1.777778)
  break 
endswitch 
ge r2.w, r2.z, r1.w
div r3.x, r2.z, r1.w
div r3.w, r1.w, r2.z
mov r3.yz, l(0,1.000000,1.000000,0)
movc r3.xy, r2.wwww, r3.xyxx, r3.zwzz
mul r4.y, r1.w, r2.z
mov r4.xz, l(1.000000,0,1920.000000,0)
movc r2.zw, cb0[0].wwww, r4.xxxy, r3.xxxy
div r3.xy, l(1920.000000, 1080.000000, 0.000000, 0.000000), r2.zwzz
div r2.zw, r3.xxxy, r2.xxxy
add r2.zw, -r2.zzzw, l(0.000000, 0.000000, 1920.000000, 1080.000000)
mul r4.xy, r2.zwzz, l(0.500000, 0.500000, 0.000000, 0.000000)
switch cb0[0].z
  case l(1)
  mov r1.w, l(3.555556)
  break 
  case l(2)
  mov r1.w, l(2.370370)
  break 
  case l(3)
  mov r1.w, l(1.777778)
  break 
  case l(4)
  mov r1.w, l(1.666667)
  break 
  case l(5)
  mov r1.w, l(1.600000)
  break 
  case l(6)
  mov r1.w, l(1.333333)
  break 
  case l(7)
  mov r1.w, l(1.250000)
  break 
  case l(8)
  mov r1.w, l(1.000000)
  break 
  case l(9)
  mov r1.w, l(0.800000)
  break 
  case l(10)
  mov r1.w, l(0.750000)
  break 
  default 
  mov r1.w, l(1.777778)
  break 
endswitch 
ge r3.w, r1.w, l(1.777778)
div r4.w, l(1920.000000), r1.w
mul r5.x, r1.w, l(1080.000000)
mov r5.yz, l(0,1080.000000,1920.000000,0)
movc r4.zw, r3.wwww, r4.zzzw, r5.xxxy
mul r3.w, r0.z, r1.w
movc r5.x, cb0[0].x, r0.y, r3.w
div r1.w, r5.x, r1.w
movc r5.y, cb0[0].y, r0.z, r1.w
movc r4.zw, r0.wwww, r4.zzzw, r5.xxxy
switch cb0[1].y
  case l(0)
  div r1.w, r4.z, r4.w
  break 
  case l(1)
  mov r1.w, l(3.555556)
  break 
  case l(2)
  mov r1.w, l(2.370370)
  break 
  case l(3)
  mov r1.w, l(1.777778)
  break 
  case l(4)
  mov r1.w, l(1.666667)
  break 
  case l(5)
  mov r1.w, l(1.600000)
  break 
  case l(6)
  mov r1.w, l(1.333333)
  break 
  case l(7)
  mov r1.w, l(1.250000)
  break 
  case l(8)
  mov r1.w, l(1.000000)
  break 
  case l(9)
  mov r1.w, l(0.800000)
  break 
  case l(10)
  mov r1.w, l(0.750000)
  break 
  default 
  div r1.w, r4.z, r4.w
  break 
endswitch 
switch cb0[1].x
  case l(0)
  mov r3.w, l(1.777778)
  break 
  case l(1)
  mov r3.w, l(3.555556)
  break 
  case l(2)
  mov r3.w, l(2.370370)
  break 
  case l(3)
  mov r3.w, l(1.777778)
  break 
  case l(4)
  mov r3.w, l(1.666667)
  break 
  case l(5)
  mov r3.w, l(1.600000)
  break 
  case l(6)
  mov r3.w, l(1.333333)
  break 
  case l(7)
  mov r3.w, l(1.250000)
  break 
  case l(8)
  mov r3.w, l(1.000000)
  break 
  case l(9)
  mov r3.w, l(0.800000)
  break 
  case l(10)
  mov r3.w, l(0.750000)
  break 
  default 
  mov r3.w, l(1.777778)
  break 
endswitch 
ge r4.z, r3.w, r1.w
div r1.w, r3.w, r1.w
div r1.w, l(1920.000000), r1.w
movc r1.w, r4.z, r1.w, l(1920.000000)
movc r1.w, cb0[0].w, l(1920.000000), r1.w
mul r4.zw, r1.wwww, cb0[11].xxxy
mul r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.010000, 0.010000)
div r4.zw, r4.zzzw, r2.xxxx
switch cb0[0].z
  case l(1)
  mov r1.w, l(3.555556)
  break 
  case l(2)
  mov r1.w, l(2.370370)
  break 
  case l(3)
  mov r1.w, l(1.777778)
  break 
  case l(4)
  mov r1.w, l(1.666667)
  break 
  case l(5)
  mov r1.w, l(1.600000)
  break 
  case l(6)
  mov r1.w, l(1.333333)
  break 
  case l(7)
  mov r1.w, l(1.250000)
  break 
  case l(8)
  mov r1.w, l(1.000000)
  break 
  case l(9)
  mov r1.w, l(0.800000)
  break 
  case l(10)
  mov r1.w, l(0.750000)
  break 
  default 
  mov r1.w, l(1.777778)
  break 
endswitch 
ge r3.w, r1.w, l(1.777778)
div r5.w, l(1920.000000), r1.w
mul r6.x, r1.w, l(1080.000000)
mov r6.yw, l(0,1080.000000,0,1.000000)
movc r5.xy, r3.wwww, r5.zwzz, r6.xyxx
mul r3.w, r0.z, r1.w
movc r6.x, cb0[0].x, r0.y, r3.w
div r1.w, r6.x, r1.w
movc r6.y, cb0[0].y, r0.z, r1.w
movc r5.xy, r0.wwww, r5.xyxx, r6.xyxx
switch cb0[1].y
  case l(0)
  div r1.w, r5.x, r5.y
  break 
  case l(1)
  mov r1.w, l(3.555556)
  break 
  case l(2)
  mov r1.w, l(2.370370)
  break 
  case l(3)
  mov r1.w, l(1.777778)
  break 
  case l(4)
  mov r1.w, l(1.666667)
  break 
  case l(5)
  mov r1.w, l(1.600000)
  break 
  case l(6)
  mov r1.w, l(1.333333)
  break 
  case l(7)
  mov r1.w, l(1.250000)
  break 
  case l(8)
  mov r1.w, l(1.000000)
  break 
  case l(9)
  mov r1.w, l(0.800000)
  break 
  case l(10)
  mov r1.w, l(0.750000)
  break 
  default 
  div r1.w, r5.x, r5.y
  break 
endswitch 
switch cb0[1].x
  case l(0)
  mov r3.w, l(1.777778)
  break 
  case l(1)
  mov r3.w, l(3.555556)
  break 
  case l(2)
  mov r3.w, l(2.370370)
  break 
  case l(3)
  mov r3.w, l(1.777778)
  break 
  case l(4)
  mov r3.w, l(1.666667)
  break 
  case l(5)
  mov r3.w, l(1.600000)
  break 
  case l(6)
  mov r3.w, l(1.333333)
  break 
  case l(7)
  mov r3.w, l(1.250000)
  break 
  case l(8)
  mov r3.w, l(1.000000)
  break 
  case l(9)
  mov r3.w, l(0.800000)
  break 
  case l(10)
  mov r3.w, l(0.750000)
  break 
  default 
  mov r3.w, l(1.777778)
  break 
endswitch 
ge r5.x, r3.w, r1.w
div r5.y, r1.w, r3.w
movc r5.x, r5.x, l(1.000000), r5.y
mul r1.w, r1.w, r3.w
movc r1.w, cb0[0].w, r1.w, r5.x
div r1.w, l(1080.000000), r1.w
mul r5.xy, r1.wwww, cb0[11].zwzz
mul r5.xy, r5.xyxx, l(0.010000, 0.010000, 0.000000, 0.000000)
lt r1.w, r1.z, l(1.777778)
div r6.z, l(1.777778), r1.z
mul r5.zw, r3.xxxy, r6.zzzw
div r5.xyzw, r5.xyzw, r2.yyxy
add r5.zw, -r5.zzzw, l(0.000000, 0.000000, 1920.000000, 1080.000000)
mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
mul r3.z, r1.z, r3.y
mul r3.xy, r3.xzxx, l(1.000000, 0.562500, 0.000000, 0.000000)
div r3.xy, r3.xyxx, r2.xyxx
add r3.xy, -r3.xyxx, l(1920.000000, 1080.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
movc r1.zw, r1.wwww, r5.zzzw, r3.xxxy
movc r1.zw, cb0[0].zzzz, r1.zzzw, r4.xxxy
if_z cb0[0].w
  mul r3.xy, r1.wzww, l(0.000926, 0.000521, 0.000000, 0.000000)
  lt r3.xy, r3.xyxx, v1.yxyy
  add r3.zw, -r1.wwwz, l(0.000000, 0.000000, 1080.000000, 1920.000000)
  mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000926, 0.000521)
  lt r3.zw, v1.yyyx, r3.zzzw
  and r3.xy, r3.zwzz, r3.xyxx
  not r4.x, r3.y
  mad r3.zw, r2.wwww, l(0.000000, 0.000000, 0.500000, 0.500000), r5.xxxy
  mul r3.zw, r3.zzzw, l(0.000000, 0.000000, 0.000926, 0.000926)
  lt r3.z, r3.z, v1.y
  lt r3.w, v1.y, r3.w
  and r3.z, r3.w, r3.z
  mad r5.zw, r2.zzzz, l(0.000000, 0.000000, 0.500000, 0.500000), r4.zzzw
  mul r5.zw, r5.zzzw, l(0.000000, 0.000000, 0.000521, 0.000521)
  lt r3.w, r5.z, v1.x
  lt r5.z, v1.x, r5.w
  and r3.w, r3.w, r5.z
  not r3.w, r3.w
  movc r3.z, r3.z, r3.w, l(-1)
  movc r4.y, r3.y, r3.z, l(-1)
  movc r3.xy, r3.xxxx, r4.xyxx, l(-1,-1,0,0)
  mov r3.zw, l(0,0,0,0)
else 
  mul r4.xy, r1.zwzz, l(0.000521, 0.000926, 0.000000, 0.000000)
  add r5.z, -v1.y, l(1.000000)
  lt r4.x, r4.x, r5.z
  add r1.zw, -r1.zzzw, l(0.000000, 0.000000, 1920.000000, 1080.000000)
  mul r1.zw, r1.zzzw, l(0.000000, 0.000000, 0.000521, 0.000926)
  lt r1.z, r5.z, r1.z
  and r1.z, r1.z, r4.x
  lt r4.x, r4.y, v1.x
  lt r1.w, v1.x, r1.w
  and r1.w, r1.w, r4.x
  not r6.z, r1.w
  mad r4.xy, r2.zzzz, l(0.500000, 0.500000, 0.000000, 0.000000), r4.zwzz
  mul r4.xy, r4.xyxx, l(0.000521, 0.000521, 0.000000, 0.000000)
  lt r2.z, r4.x, r5.z
  lt r4.x, r5.z, r4.y
  and r2.z, r2.z, r4.x
  mad r4.xy, r2.wwww, l(0.500000, 0.500000, 0.000000, 0.000000), r5.xyxx
  mul r4.xy, r4.xyxx, l(0.000926, 0.000926, 0.000000, 0.000000)
  lt r2.w, r4.x, v1.x
  lt r4.x, v1.x, r4.y
  and r2.w, r2.w, r4.x
  not r2.w, r2.w
  movc r2.z, r2.z, r2.w, l(-1)
  movc r6.w, r1.w, r2.z, l(-1)
  movc r3.zw, r1.zzzz, r6.zzzw, l(0,0,-1,-1)
  mov r3.xy, l(0,0,0,0)
endif 
if_nz cb0[14].z
  sample_indexable(texture2d)(float,float,float,float) r1.z, l(0.500000, 0.500000, 0.000000, 0.000000), t18.yzxw, s3
  ge r1.z, r1.z, l(0.500000)
else 
  mov r1.z, l(-1)
endif 
switch cb0[0].z
  case l(1)
  mov r1.w, l(3.555556)
  break 
  case l(2)
  mov r1.w, l(2.370370)
  break 
  case l(3)
  mov r1.w, l(1.777778)
  break 
  case l(4)
  mov r1.w, l(1.666667)
  break 
  case l(5)
  mov r1.w, l(1.600000)
  break 
  case l(6)
  mov r1.w, l(1.333333)
  break 
  case l(7)
  mov r1.w, l(1.250000)
  break 
  case l(8)
  mov r1.w, l(1.000000)
  break 
  case l(9)
  mov r1.w, l(0.800000)
  break 
  case l(10)
  mov r1.w, l(0.750000)
  break 
  default 
  mov r1.w, l(1.777778)
  break 
endswitch 
switch cb0[0].z
  case l(1)
  mov r2.z, l(3.555556)
  break 
  case l(2)
  mov r2.z, l(2.370370)
  break 
  case l(3)
  mov r2.z, l(1.777778)
  break 
  case l(4)
  mov r2.z, l(1.666667)
  break 
  case l(5)
  mov r2.z, l(1.600000)
  break 
  case l(6)
  mov r2.z, l(1.333333)
  break 
  case l(7)
  mov r2.z, l(1.250000)
  break 
  case l(8)
  mov r2.z, l(1.000000)
  break 
  case l(9)
  mov r2.z, l(0.800000)
  break 
  case l(10)
  mov r2.z, l(0.750000)
  break 
  default 
  mov r2.z, l(1.777778)
  break 
endswitch 
ge r2.w, r2.z, l(1.777778)
div r4.y, l(1920.000000), r2.z
mul r4.z, r2.z, l(1080.000000)
mov r4.xw, l(1920.000000,0,0,1080.000000)
movc r4.xy, r2.wwww, r4.xyxx, r4.zwzz
mul r2.w, r0.z, r2.z
movc r5.x, cb0[0].x, r0.y, r2.w
div r2.z, r5.x, r2.z
movc r5.y, cb0[0].y, r0.z, r2.z
movc r2.zw, r0.wwww, r4.xxxy, r5.xxxy
switch cb0[1].y
  case l(0)
  div r4.x, r2.z, r2.w
  break 
  case l(1)
  mov r4.x, l(3.555556)
  break 
  case l(2)
  mov r4.x, l(2.370370)
  break 
  case l(3)
  mov r4.x, l(1.777778)
  break 
  case l(4)
  mov r4.x, l(1.666667)
  break 
  case l(5)
  mov r4.x, l(1.600000)
  break 
  case l(6)
  mov r4.x, l(1.333333)
  break 
  case l(7)
  mov r4.x, l(1.250000)
  break 
  case l(8)
  mov r4.x, l(1.000000)
  break 
  case l(9)
  mov r4.x, l(0.800000)
  break 
  case l(10)
  mov r4.x, l(0.750000)
  break 
  default 
  div r4.x, r2.z, r2.w
  break 
endswitch 
switch cb0[1].x
  case l(0)
  mov r2.z, l(1.777778)
  break 
  case l(1)
  mov r2.z, l(3.555556)
  break 
  case l(2)
  mov r2.z, l(2.370370)
  break 
  case l(3)
  mov r2.z, l(1.777778)
  break 
  case l(4)
  mov r2.z, l(1.666667)
  break 
  case l(5)
  mov r2.z, l(1.600000)
  break 
  case l(6)
  mov r2.z, l(1.333333)
  break 
  case l(7)
  mov r2.z, l(1.250000)
  break 
  case l(8)
  mov r2.z, l(1.000000)
  break 
  case l(9)
  mov r2.z, l(0.800000)
  break 
  case l(10)
  mov r2.z, l(0.750000)
  break 
  default 
  mov r2.z, l(1.777778)
  break 
endswitch 
switch cb0[0].z
  case l(1)
  mov r2.w, l(3.555556)
  break 
  case l(2)
  mov r2.w, l(2.370370)
  break 
  case l(3)
  mov r2.w, l(1.777778)
  break 
  case l(4)
  mov r2.w, l(1.666667)
  break 
  case l(5)
  mov r2.w, l(1.600000)
  break 
  case l(6)
  mov r2.w, l(1.333333)
  break 
  case l(7)
  mov r2.w, l(1.250000)
  break 
  case l(8)
  mov r2.w, l(1.000000)
  break 
  case l(9)
  mov r2.w, l(0.800000)
  break 
  case l(10)
  mov r2.w, l(0.750000)
  break 
  default 
  mov r2.w, l(1.777778)
  break 
endswitch 
ge r4.y, r2.w, l(1.777778)
div r5.y, l(1920.000000), r2.w
mul r5.z, r2.w, l(1080.000000)
mov r5.xw, l(1920.000000,0,0,1080.000000)
movc r4.yz, r4.yyyy, r5.xxyx, r5.zzwz
mul r4.w, r0.z, r2.w
movc r5.x, cb0[0].x, r0.y, r4.w
div r2.w, r5.x, r2.w
movc r5.y, cb0[0].y, r0.z, r2.w
movc r4.yz, r0.wwww, r4.yyzy, r5.xxyx
switch cb0[1].y
  case l(0)
  div r2.w, r4.y, r4.z
  break 
  case l(1)
  mov r2.w, l(3.555556)
  break 
  case l(2)
  mov r2.w, l(2.370370)
  break 
  case l(3)
  mov r2.w, l(1.777778)
  break 
  case l(4)
  mov r2.w, l(1.666667)
  break 
  case l(5)
  mov r2.w, l(1.600000)
  break 
  case l(6)
  mov r2.w, l(1.333333)
  break 
  case l(7)
  mov r2.w, l(1.250000)
  break 
  case l(8)
  mov r2.w, l(1.000000)
  break 
  case l(9)
  mov r2.w, l(0.800000)
  break 
  case l(10)
  mov r2.w, l(0.750000)
  break 
  default 
  div r2.w, r4.y, r4.z
  break 
endswitch 
switch cb0[1].x
  case l(0)
  mov r4.y, l(1.777778)
  break 
  case l(1)
  mov r4.y, l(3.555556)
  break 
  case l(2)
  mov r4.y, l(2.370370)
  break 
  case l(3)
  mov r4.y, l(1.777778)
  break 
  case l(4)
  mov r4.y, l(1.666667)
  break 
  case l(5)
  mov r4.y, l(1.600000)
  break 
  case l(6)
  mov r4.y, l(1.333333)
  break 
  case l(7)
  mov r4.y, l(1.250000)
  break 
  case l(8)
  mov r4.y, l(1.000000)
  break 
  case l(9)
  mov r4.y, l(0.800000)
  break 
  case l(10)
  mov r4.y, l(0.750000)
  break 
  default 
  mov r4.y, l(1.777778)
  break 
endswitch 
if_nz cb0[2].x
  add r4.zw, v1.yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
  switch cb0[1].x
    case l(0)
    mov r5.x, l(1.777778)
    break 
    case l(1)
    mov r5.x, l(3.555556)
    break 
    case l(2)
    mov r5.x, l(2.370370)
    break 
    case l(3)
    mov r5.x, l(1.777778)
    break 
    case l(4)
    mov r5.x, l(1.666667)
    break 
    case l(5)
    mov r5.x, l(1.600000)
    break 
    case l(6)
    mov r5.x, l(1.333333)
    break 
    case l(7)
    mov r5.x, l(1.250000)
    break 
    case l(8)
    mov r5.x, l(1.000000)
    break 
    case l(9)
    mov r5.x, l(0.800000)
    break 
    case l(10)
    mov r5.x, l(0.750000)
    break 
    default 
    mov r5.x, l(1.777778)
    break 
  endswitch 
  mul r4.w, r4.w, r5.x
  mul r4.w, r4.w, cb0[2].z
  mul r5.x, r4.w, l(0.562500)
  mul r5.y, r4.z, cb0[2].w
  add r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r4.zwzz, t4.xyzw, s1
  add r5.xyz, r5.xyzx, -cb0[3].xyzx
  mad r5.xyz, r5.wwww, r5.xyzx, cb0[3].xyzx
else 
  mov r5.xyz, cb0[3].xyzx
endif 
or r3.x, r3.z, r3.x
if_nz r3.x
  mov o0.xyz, r5.xyzx
  mov o0.w, l(1.000000)
  ret 
endif 
ge r3.x, r1.w, l(1.777778)
div r6.y, l(1920.000000), r1.w
mul r6.z, r1.w, l(1080.000000)
mov r6.xw, l(1920.000000,0,0,1080.000000)
movc r3.xz, r3.xxxx, r6.xxyx, r6.zzwz
mul r4.z, r0.z, r1.w
movc r6.x, cb0[0].x, r0.y, r4.z
div r1.w, r6.x, r1.w
movc r6.y, cb0[0].y, r0.z, r1.w
movc r3.xz, r0.wwww, r3.xxzx, r6.xxyx
ge r1.w, r2.z, r4.x
div r6.x, r2.z, r4.x
div r6.w, r4.x, r2.z
mov r6.yz, l(0,1.000000,1.000000,0)
movc r4.zw, r1.wwww, r6.xxxy, r6.zzzw
mul r6.y, r4.x, r2.z
mov r6.xw, l(1.000000,0,0,1.000000)
movc r4.xz, cb0[0].wwww, r6.xxyx, r4.zzwz
mad r6.xy, v1.yxyy, l(-1.000000, 1.000000, 0.000000, 0.000000), l(1.000000, 0.000000, 0.000000, 0.000000)
movc r6.xy, cb0[0].wwww, r6.xyxx, v1.xyxx
add r6.xy, r6.xyxx, l(-0.500000, -0.500000, 0.000000, 0.000000)
mul r7.xy, r2.xyxx, r6.xyxx
mul r7.xy, r7.xyxx, l(1920.000000, 1080.000000, 0.000000, 0.000000)
mul r7.zw, cb0[13].yyyz, l(0.000000, 0.000000, 0.010000, 0.010000)
div r7.xy, r7.xyxx, r7.zwzz
ge r1.w, r4.y, r2.w
div r6.z, r4.y, r2.w
div r8.y, r2.w, r4.y
mov r8.xz, l(1.000000,0,1.000000,0)
movc r6.zw, r1.wwww, r6.zzzw, r8.xxxy
mul r8.w, r2.w, r4.y
movc r2.zw, cb0[0].wwww, r8.zzzw, r6.zzzw
div r2.zw, l(0.000000, 0.000000, 1920.000000, 1080.000000), r2.zzzw
mul r2.zw, r2.zzzw, cb0[14].xxxy
mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.010000, 0.010000), r7.xxxy
mul r2.zw, r4.xxxz, r2.zzzw
mul r4.xy, r2.zwzz, l(0.000521, 0.000926, 0.000000, 0.000000)
mad r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000521, 0.000926), l(0.000000, 0.000000, 0.500000, 0.500000)
mul r2.zw, r3.xxxz, r2.zzzw
mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.000521, 0.000926)
mul r3.xz, r3.xxzx, r4.xxyx
mad r3.xz, r3.xxzx, l(0.000521, 0.000000, 0.000926, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
movc r2.zw, cb0[0].zzzz, r3.xxxz, r2.zzzw
or r1.w, r3.w, r3.y
if_nz r1.w
  if_nz cb0[13].x
    sample_indexable(texture2d)(float,float,float,float) o0.xyzw, r2.zwzz, t0.xyzw, s0
    ret 
  else 
    mov o0.xyz, r5.xyzx
    mov o0.w, l(1.000000)
    ret 
  endif 
endif 
ieq r1.w, cb0[3].w, l(0)
not r1.z, r1.z
or r1.z, r1.z, r1.w
if_nz r1.z
  sample_indexable(texture2d)(float,float,float,float) o0.xyzw, r2.zwzz, t0.xyzw, s0
  ret 
else 
  ge r1.z, r0.x, l(1.777778)
  div r3.y, l(1920.000000), r0.x
  mul r3.z, r0.x, l(1080.000000)
  mov r3.xw, l(1920.000000,0,0,1080.000000)
  movc r1.zw, r1.zzzz, r3.xxxy, r3.zzzw
  mul r2.z, r0.z, r0.x
  movc r3.x, cb0[0].x, r0.y, r2.z
  div r0.x, r3.x, r0.x
  movc r3.y, cb0[0].y, r0.z, r0.x
  movc r1.zw, r0.wwww, r1.zzzw, r3.xxxy
  ge r0.x, r1.x, l(1.777778)
  div r3.y, l(1920.000000), r1.x
  mul r3.z, r1.x, l(1080.000000)
  mov r3.xw, l(1920.000000,0,0,1080.000000)
  movc r2.zw, r0.xxxx, r3.xxxy, r3.zzzw
  mul r0.x, r0.z, r1.x
  movc r3.x, cb0[0].x, r0.y, r0.x
  div r0.x, r3.x, r1.x
  movc r3.y, cb0[0].y, r0.z, r0.x
  movc r2.zw, r0.wwww, r2.zzzw, r3.xxxy
  div r2.zw, l(0.000000, 0.000000, 1920.000000, 1080.000000), r2.zzzw
  ge r0.x, r1.y, l(1.777778)
  div r3.x, l(1920.000000), r1.y
  mul r3.w, r1.y, l(1080.000000)
  mov r3.yz, l(0,1920.000000,1080.000000,0)
  movc r3.xy, r0.xxxx, r3.xyxx, r3.zwzz
  mul r0.x, r0.z, r1.y
  movc r4.y, cb0[0].x, r0.y, r0.x
  div r0.x, r4.y, r1.y
  movc r4.x, cb0[0].y, r0.z, r0.x
  movc r1.xy, r0.wwww, r3.xyxx, r4.xyxx
  eq r3.xy, cb0[4].xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
  and r0.x, r3.y, r3.x
  mul r3.zw, r1.xxxy, l(0.000000, 0.000000, 0.250000, 0.250000)
  movc r3.zw, cb0[0].zzzz, r3.zzzw, l(0,0,270.000000,480.000000)
  div r4.x, r1.y, r1.x
  mul r4.x, r4.x, cb0[4].y
  movc r4.y, r3.x, r4.x, cb0[4].x
  mul r1.x, r1.x, r4.y
  div r1.x, r1.x, r1.y
  movc r4.x, r3.y, r1.x, cb0[4].y
  movc r1.xy, r0.xxxx, r3.zwzz, r4.xyxx
  mul r3.xy, r2.zwzz, r1.yxyy
  mov r4.y, cb0[6].x
  mov r4.xz, l(1.000000,0,1920.000000,0)
  mul r3.xyzw, r3.xyxy, r4.yxxy
  movc r3.xy, cb0[5].yyyy, r3.zwzz, r3.xyxx
  div r5.xy, l(1.000000, 1.000000, 1.000000, 1.000000), r3.xyxx
  switch cb0[0].z
    case l(1)
    mov r0.x, l(3.555556)
    break 
    case l(2)
    mov r0.x, l(2.370370)
    break 
    case l(3)
    mov r0.x, l(1.777778)
    break 
    case l(4)
    mov r0.x, l(1.666667)
    break 
    case l(5)
    mov r0.x, l(1.600000)
    break 
    case l(6)
    mov r0.x, l(1.333333)
    break 
    case l(7)
    mov r0.x, l(1.250000)
    break 
    case l(8)
    mov r0.x, l(1.000000)
    break 
    case l(9)
    mov r0.x, l(0.800000)
    break 
    case l(10)
    mov r0.x, l(0.750000)
    break 
    default 
    mov r0.x, l(1.777778)
    break 
  endswitch 
  ge r3.z, r0.x, l(1.777778)
  div r4.w, l(1920.000000), r0.x
  mul r7.x, r0.x, l(1080.000000)
  mov r7.yz, l(0,1080.000000,1920.000000,0)
  movc r3.zw, r3.zzzz, r4.zzzw, r7.xxxy
  mul r4.x, r0.z, r0.x
  movc r4.x, cb0[0].x, r0.y, r4.x
  div r0.x, r4.x, r0.x
  movc r4.y, cb0[0].y, r0.z, r0.x
  movc r3.zw, r0.wwww, r3.zzzw, r4.xxxy
  switch cb0[1].y
    case l(0)
    div r0.x, r3.z, r3.w
    break 
    case l(1)
    mov r0.x, l(3.555556)
    break 
    case l(2)
    mov r0.x, l(2.370370)
    break 
    case l(3)
    mov r0.x, l(1.777778)
    break 
    case l(4)
    mov r0.x, l(1.666667)
    break 
    case l(5)
    mov r0.x, l(1.600000)
    break 
    case l(6)
    mov r0.x, l(1.333333)
    break 
    case l(7)
    mov r0.x, l(1.250000)
    break 
    case l(8)
    mov r0.x, l(1.000000)
    break 
    case l(9)
    mov r0.x, l(0.800000)
    break 
    case l(10)
    mov r0.x, l(0.750000)
    break 
    default 
    div r0.x, r3.z, r3.w
    break 
  endswitch 
  switch cb0[1].x
    case l(0)
    mov r3.z, l(1.777778)
    break 
    case l(1)
    mov r3.z, l(3.555556)
    break 
    case l(2)
    mov r3.z, l(2.370370)
    break 
    case l(3)
    mov r3.z, l(1.777778)
    break 
    case l(4)
    mov r3.z, l(1.666667)
    break 
    case l(5)
    mov r3.z, l(1.600000)
    break 
    case l(6)
    mov r3.z, l(1.333333)
    break 
    case l(7)
    mov r3.z, l(1.250000)
    break 
    case l(8)
    mov r3.z, l(1.000000)
    break 
    case l(9)
    mov r3.z, l(0.800000)
    break 
    case l(10)
    mov r3.z, l(0.750000)
    break 
    default 
    mov r3.z, l(1.777778)
    break 
  endswitch 
  ge r3.w, r3.z, r0.x
  div r0.x, r3.z, r0.x
  div r0.x, l(1920.000000), r0.x
  movc r0.x, r3.w, r0.x, l(1920.000000)
  movc r0.x, cb0[0].w, l(1920.000000), r0.x
  mul r3.zw, r0.xxxx, cb0[11].xxxy
  mul r0.x, r3.z, l(0.010000)
  switch cb0[0].z
    case l(1)
    mov r3.z, l(3.555556)
    break 
    case l(2)
    mov r3.z, l(2.370370)
    break 
    case l(3)
    mov r3.z, l(1.777778)
    break 
    case l(4)
    mov r3.z, l(1.666667)
    break 
    case l(5)
    mov r3.z, l(1.600000)
    break 
    case l(6)
    mov r3.z, l(1.333333)
    break 
    case l(7)
    mov r3.z, l(1.250000)
    break 
    case l(8)
    mov r3.z, l(1.000000)
    break 
    case l(9)
    mov r3.z, l(0.800000)
    break 
    case l(10)
    mov r3.z, l(0.750000)
    break 
    default 
    mov r3.z, l(1.777778)
    break 
  endswitch 
  ge r4.x, r3.z, l(1.777778)
  div r7.w, l(1920.000000), r3.z
  mul r8.x, r3.z, l(1080.000000)
  mov r8.yz, l(0,1080.000000,1920.000000,0)
  movc r4.xy, r4.xxxx, r7.zwzz, r8.xyxx
  mul r4.z, r0.z, r3.z
  movc r7.x, cb0[0].x, r0.y, r4.z
  div r3.z, r7.x, r3.z
  movc r7.y, cb0[0].y, r0.z, r3.z
  movc r4.xy, r0.wwww, r4.xyxx, r7.xyxx
  switch cb0[1].y
    case l(0)
    div r3.z, r4.x, r4.y
    break 
    case l(1)
    mov r3.z, l(3.555556)
    break 
    case l(2)
    mov r3.z, l(2.370370)
    break 
    case l(3)
    mov r3.z, l(1.777778)
    break 
    case l(4)
    mov r3.z, l(1.666667)
    break 
    case l(5)
    mov r3.z, l(1.600000)
    break 
    case l(6)
    mov r3.z, l(1.333333)
    break 
    case l(7)
    mov r3.z, l(1.250000)
    break 
    case l(8)
    mov r3.z, l(1.000000)
    break 
    case l(9)
    mov r3.z, l(0.800000)
    break 
    case l(10)
    mov r3.z, l(0.750000)
    break 
    default 
    div r3.z, r4.x, r4.y
    break 
  endswitch 
  switch cb0[1].x
    case l(0)
    mov r4.x, l(1.777778)
    break 
    case l(1)
    mov r4.x, l(3.555556)
    break 
    case l(2)
    mov r4.x, l(2.370370)
    break 
    case l(3)
    mov r4.x, l(1.777778)
    break 
    case l(4)
    mov r4.x, l(1.666667)
    break 
    case l(5)
    mov r4.x, l(1.600000)
    break 
    case l(6)
    mov r4.x, l(1.333333)
    break 
    case l(7)
    mov r4.x, l(1.250000)
    break 
    case l(8)
    mov r4.x, l(1.000000)
    break 
    case l(9)
    mov r4.x, l(0.800000)
    break 
    case l(10)
    mov r4.x, l(0.750000)
    break 
    default 
    mov r4.x, l(1.777778)
    break 
  endswitch 
  ge r4.y, r4.x, r3.z
  div r4.z, r3.z, r4.x
  movc r4.y, r4.y, l(1.000000), r4.z
  mul r3.z, r3.z, r4.x
  movc r3.z, cb0[0].w, r3.z, r4.y
  div r3.z, l(1080.000000), r3.z
  mul r4.xy, r3.zzzz, cb0[11].zwzz
  mul r3.z, r4.x, l(0.010000)
  switch cb0[0].z
    case l(1)
    mov r4.x, l(3.555556)
    break 
    case l(2)
    mov r4.x, l(2.370370)
    break 
    case l(3)
    mov r4.x, l(1.777778)
    break 
    case l(4)
    mov r4.x, l(1.666667)
    break 
    case l(5)
    mov r4.x, l(1.600000)
    break 
    case l(6)
    mov r4.x, l(1.333333)
    break 
    case l(7)
    mov r4.x, l(1.250000)
    break 
    case l(8)
    mov r4.x, l(1.000000)
    break 
    case l(9)
    mov r4.x, l(0.800000)
    break 
    case l(10)
    mov r4.x, l(0.750000)
    break 
    default 
    mov r4.x, l(1.777778)
    break 
  endswitch 
  ge r4.z, r4.x, l(1.777778)
  div r8.w, l(1920.000000), r4.x
  mul r7.x, r4.x, l(1080.000000)
  mov r7.yw, l(0,1080.000000,0,1.000000)
  movc r4.zw, r4.zzzz, r8.zzzw, r7.xxxy
  mul r6.z, r0.z, r4.x
  movc r7.x, cb0[0].x, r0.y, r6.z
  div r4.x, r7.x, r4.x
  movc r7.y, cb0[0].y, r0.z, r4.x
  movc r4.xz, r0.wwww, r4.zzwz, r7.xxyx
  switch cb0[1].y
    case l(0)
    div r4.w, r4.x, r4.z
    break 
    case l(1)
    mov r4.w, l(3.555556)
    break 
    case l(2)
    mov r4.w, l(2.370370)
    break 
    case l(3)
    mov r4.w, l(1.777778)
    break 
    case l(4)
    mov r4.w, l(1.666667)
    break 
    case l(5)
    mov r4.w, l(1.600000)
    break 
    case l(6)
    mov r4.w, l(1.333333)
    break 
    case l(7)
    mov r4.w, l(1.250000)
    break 
    case l(8)
    mov r4.w, l(1.000000)
    break 
    case l(9)
    mov r4.w, l(0.800000)
    break 
    case l(10)
    mov r4.w, l(0.750000)
    break 
    default 
    div r4.w, r4.x, r4.z
    break 
  endswitch 
  switch cb0[1].x
    case l(0)
    mov r4.x, l(1.777778)
    break 
    case l(1)
    mov r4.x, l(3.555556)
    break 
    case l(2)
    mov r4.x, l(2.370370)
    break 
    case l(3)
    mov r4.x, l(1.777778)
    break 
    case l(4)
    mov r4.x, l(1.666667)
    break 
    case l(5)
    mov r4.x, l(1.600000)
    break 
    case l(6)
    mov r4.x, l(1.333333)
    break 
    case l(7)
    mov r4.x, l(1.250000)
    break 
    case l(8)
    mov r4.x, l(1.000000)
    break 
    case l(9)
    mov r4.x, l(0.800000)
    break 
    case l(10)
    mov r4.x, l(0.750000)
    break 
    default 
    mov r4.x, l(1.777778)
    break 
  endswitch 
  ge r4.z, r4.x, r4.w
  div r7.z, r4.x, r4.w
  div r8.y, r4.w, r4.x
  mov r8.xz, l(1.000000,0,1.000000,0)
  movc r6.zw, r4.zzzz, r7.zzzw, r8.xxxy
  mul r8.w, r4.w, r4.x
  movc r4.xz, cb0[0].wwww, r8.zzwz, r6.zzwz
  div r4.xz, l(1920.000000, 0.000000, 1080.000000, 0.000000), r4.xxzx
  add r4.xz, -r4.xxzx, l(1920.000000, 0.000000, 1080.000000, 0.000000)
  mad r2.xy, r6.xyxx, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  mad r2.x, r2.x, l(1920.000000), -r0.x
  mad r2.x, -r4.x, l(0.500000), r2.x
  mad r0.x, r3.w, l(0.010000), -r0.x
  div r6.x, r2.x, r0.x
  mad r0.x, r2.y, l(1080.000000), -r3.z
  mad r0.x, -r4.z, l(0.500000), r0.x
  mad r2.x, r4.y, l(0.010000), -r3.z
  div r6.y, r0.x, r2.x
  if_nz cb0[5].x
    switch cb0[0].z
      case l(1)
      mov r0.x, l(3.555556)
      break 
      case l(2)
      mov r0.x, l(2.370370)
      break 
      case l(3)
      mov r0.x, l(1.777778)
      break 
      case l(4)
      mov r0.x, l(1.666667)
      break 
      case l(5)
      mov r0.x, l(1.600000)
      break 
      case l(6)
      mov r0.x, l(1.333333)
      break 
      case l(7)
      mov r0.x, l(1.250000)
      break 
      case l(8)
      mov r0.x, l(1.000000)
      break 
      case l(9)
      mov r0.x, l(0.800000)
      break 
      case l(10)
      mov r0.x, l(0.750000)
      break 
      default 
      mov r0.x, l(1.777778)
      break 
    endswitch 
    ge r2.x, r0.x, l(1.777778)
    div r4.y, l(1920.000000), r0.x
    mul r4.z, r0.x, l(1080.000000)
    mov r4.xw, l(1920.000000,0,0,1080.000000)
    movc r2.xy, r2.xxxx, r4.xyxx, r4.zwzz
    mul r3.z, r0.z, r0.x
    movc r4.x, cb0[0].x, r0.y, r3.z
    div r0.x, r4.x, r0.x
    movc r4.y, cb0[0].y, r0.z, r0.x
    movc r2.xy, r0.wwww, r2.xyxx, r4.xyxx
    switch cb0[1].y
      case l(0)
      div r0.x, r2.x, r2.y
      break 
      case l(1)
      mov r0.x, l(3.555556)
      break 
      case l(2)
      mov r0.x, l(2.370370)
      break 
      case l(3)
      mov r0.x, l(1.777778)
      break 
      case l(4)
      mov r0.x, l(1.666667)
      break 
      case l(5)
      mov r0.x, l(1.600000)
      break 
      case l(6)
      mov r0.x, l(1.333333)
      break 
      case l(7)
      mov r0.x, l(1.250000)
      break 
      case l(8)
      mov r0.x, l(1.000000)
      break 
      case l(9)
      mov r0.x, l(0.800000)
      break 
      case l(10)
      mov r0.x, l(0.750000)
      break 
      default 
      div r0.x, r2.x, r2.y
      break 
    endswitch 
    div r2.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    sincos r4.xy, r7.xy, cb0[8].xyxx
    switch cb0[0].z
      case l(1)
      mov r0.x, l(3.555556)
      break 
      case l(2)
      mov r0.x, l(2.370370)
      break 
      case l(3)
      mov r0.x, l(1.777778)
      break 
      case l(4)
      mov r0.x, l(1.666667)
      break 
      case l(5)
      mov r0.x, l(1.600000)
      break 
      case l(6)
      mov r0.x, l(1.333333)
      break 
      case l(7)
      mov r0.x, l(1.250000)
      break 
      case l(8)
      mov r0.x, l(1.000000)
      break 
      case l(9)
      mov r0.x, l(0.800000)
      break 
      case l(10)
      mov r0.x, l(0.750000)
      break 
      default 
      mov r0.x, l(1.777778)
      break 
    endswitch 
    ge r3.z, r0.x, l(1.777778)
    div r8.y, l(1920.000000), r0.x
    mul r8.z, r0.x, l(1080.000000)
    mov r8.xw, l(1920.000000,0,0,1080.000000)
    movc r3.zw, r3.zzzz, r8.xxxy, r8.zzzw
    mul r4.z, r0.z, r0.x
    movc r8.x, cb0[0].x, r0.y, r4.z
    div r0.x, r8.x, r0.x
    movc r8.y, cb0[0].y, r0.z, r0.x
    movc r3.zw, r0.wwww, r3.zzzw, r8.xxxy
    switch cb0[1].y
      case l(0)
      div r0.x, r3.z, r3.w
      break 
      case l(1)
      mov r0.x, l(3.555556)
      break 
      case l(2)
      mov r0.x, l(2.370370)
      break 
      case l(3)
      mov r0.x, l(1.777778)
      break 
      case l(4)
      mov r0.x, l(1.666667)
      break 
      case l(5)
      mov r0.x, l(1.600000)
      break 
      case l(6)
      mov r0.x, l(1.333333)
      break 
      case l(7)
      mov r0.x, l(1.250000)
      break 
      case l(8)
      mov r0.x, l(1.000000)
      break 
      case l(9)
      mov r0.x, l(0.800000)
      break 
      case l(10)
      mov r0.x, l(0.750000)
      break 
      default 
      div r0.x, r3.z, r3.w
      break 
    endswitch 
    div r8.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
    mul r3.zw, r4.xxxy, -cb0[7].zzzz
    div r4.zw, cb0[7].zzzw, cb0[7].wwwz
    mul r0.x, r7.x, r4.z
    mad r0.x, r0.x, r7.y, l(1.000000)
    div r6.zw, r3.zzzw, r0.xxxx
    dp2 r0.x, r6.zwzz, r6.zwzz
    mul r7.zw, cb0[7].wwwz, cb0[7].wwww
    mad r0.x, cb0[7].w, cb0[7].w, r0.x
    dp2 r4.z, r6.zwzz, r4.xyxx
    mul r9.x, r7.x, cb0[7].w
    mad r4.z, -r9.x, r7.y, r4.z
    mad r4.z, cb0[7].z, r4.z, -r7.z
    add r9.y, r4.z, r4.z
    mul r9.z, r0.x, l(4.000000)
    mul r7.w, r7.x, r7.w
    dp2 r7.w, r7.wwww, r7.yyyy
    mad r7.w, cb0[7].w, cb0[7].w, r7.w
    mul r9.z, r7.w, r9.z
    mad r9.y, r9.y, r9.y, -r9.z
    sqrt r9.y, r9.y
    mad r4.z, -r4.z, l(2.000000), -r9.y
    add r0.x, r0.x, r0.x
    div r0.x, r4.z, r0.x
    mad r6.zw, r0.xxxx, r6.zzzw, -r3.zzzw
    div r6.zw, r6.zzzw, cb0[7].zzzz
    div r9.yz, r4.xxyx, r7.xxyx
    div r10.xy, r6.zwzz, r7.xyxx
    dp2 r0.x, r9.yzyy, r9.yzyy
    add r0.x, r0.x, l(1.000000)
    dp2 r4.z, r10.xyxx, r9.yzyy
    mul r9.w, r4.z, l(-2.000000)
    mul r10.z, r0.x, l(4.000000)
    dp2 r10.x, r10.xyxx, r10.xyxx
    add r10.x, r10.x, l(-1.000000)
    mul r10.x, r10.x, r10.z
    mad r9.w, r9.w, r9.w, -r10.x
    sqrt r9.w, r9.w
    mad r4.z, -r4.z, l(-2.000000), r9.w
    add r0.x, r0.x, r0.x
    div r4.z, r4.z, r0.x
    add r9.w, -|r4.z|, l(1.000000)
    sqrt r9.w, r9.w
    mad r10.x, |r4.z|, l(-0.018729), l(0.074261)
    mad r10.x, r10.x, |r4.z|, l(-0.212114)
    mad r10.x, r10.x, |r4.z|, l(1.570729)
    mul r10.y, r9.w, r10.x
    mad r10.y, r10.y, l(-2.000000), l(3.141593)
    lt r10.w, r4.z, -r4.z
    and r10.y, r10.w, r10.y
    mad r9.w, r10.x, r9.w, r10.y
    mul r9.w, r9.w, cb0[7].z
    max r9.w, |r9.w|, l(0.000010)
    mad r6.zw, -r4.zzzz, r4.xxxy, r6.zzzw
    div r6.zw, r6.zzzw, r7.xxxy
    mul r6.zw, r9.wwww, r6.zzzw
    div r4.z, r9.w, cb0[7].z
    sincos r4.z, null, r4.z
    div r11.xy, r6.zwzz, r4.zzzz
    mov r8.xz, l(1.000000,0,0.500000,0)
    mul r12.y, r8.y, l(0.500000)
    mov r11.z, l(-0.500000)
    dp2 r4.z, r11.yzyy, r11.yzyy
    sqrt r4.z, r4.z
    div r6.z, r4.z, cb0[7].z
    sincos r10.x, r12.x, r6.z
    div r4.z, r10.x, r4.z
    mul r6.zw, r4.zzzz, r11.zzzy
    add r4.z, -r12.x, l(1.000000)
    mul r9.w, r4.x, r4.z
    mad r9.w, r6.z, r7.x, -r9.w
    mul r9.w, r9.w, cb0[7].w
    mul r4.z, r7.x, r4.z
    mad r4.z, r4.z, r7.y, r4.w
    dp2 r6.z, r6.zwzz, r4.xyxx
    add r4.z, r4.z, r6.z
    div r10.x, r9.w, r4.z
    mov r11.w, -r12.y
    dp2 r4.z, r11.xwxx, r11.xwxx
    sqrt r4.z, r4.z
    max r4.z, r4.z, l(0.000010)
    div r6.z, r4.z, cb0[7].z
    sincos r12.x, r13.x, r6.z
    div r4.z, r12.x, r4.z
    mul r6.zw, r4.zzzz, r11.xxxw
    add r4.z, -r13.x, l(1.000000)
    mul r9.w, r4.y, r4.z
    mad r9.w, r6.w, r7.y, -r9.w
    mul r9.w, r9.w, cb0[7].w
    mul r4.z, r7.x, r4.z
    mad r4.z, r4.z, r7.y, r4.w
    dp2 r6.z, r6.zwzz, r4.xyxx
    add r4.z, r4.z, r6.z
    div r10.y, r9.w, r4.z
    div r6.zw, r10.xxxy, r8.xxxy
    mov r8.w, r11.y
    dp2 r4.z, r8.zwzz, r8.zwzz
    sqrt r4.z, r4.z
    div r9.w, r4.z, cb0[7].z
    sincos r10.x, r12.x, r9.w
    div r4.z, r10.x, r4.z
    mul r8.zw, r4.zzzz, r8.zzzw
    add r4.z, -r12.x, l(1.000000)
    mul r9.w, r4.x, r4.z
    mad r9.w, r8.z, r7.x, -r9.w
    mul r9.w, r9.w, cb0[7].w
    mul r4.z, r7.x, r4.z
    mad r4.z, r4.z, r7.y, r4.w
    dp2 r8.z, r8.zwzz, r4.xyxx
    add r4.z, r4.z, r8.z
    div r10.x, r9.w, r4.z
    mov r12.z, r11.x
    dp2 r4.z, r12.yzyy, r12.yzyy
    sqrt r4.z, r4.z
    max r4.z, r4.z, l(0.000010)
    div r8.z, r4.z, cb0[7].z
    sincos r11.x, r12.x, r8.z
    div r4.z, r11.x, r4.z
    mul r8.zw, r4.zzzz, r12.zzzy
    add r4.z, -r12.x, l(1.000000)
    mul r9.w, r4.y, r4.z
    mad r9.w, r8.w, r7.y, -r9.w
    mul r9.w, r9.w, cb0[7].w
    mul r4.z, r7.x, r4.z
    mad r4.z, r4.z, r7.y, r4.w
    dp2 r4.w, r8.zwzz, r4.xyxx
    add r4.z, r4.w, r4.z
    div r10.y, r9.w, r4.z
    div r4.zw, r10.xxxy, r8.xxxy
    add r11.xy, r6.zwzz, r4.zwzz
    mul r11.z, r8.y, r11.y
    mul r8.xy, r11.xzxx, l(0.500000, 0.500000, 0.000000, 0.000000)
    add r4.zw, -r6.zzzw, r4.zzzw
    max r4.z, r4.w, r4.z
    add r6.zw, r6.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
    mov r2.x, l(1.000000)
    mul r6.zw, r2.xxxy, r6.zzzw
    mad r4.zw, r6.zzzw, r4.zzzz, r8.xxxy
    dp2 r6.z, r4.zwzz, r4.zwzz
    mad r6.z, cb0[7].w, cb0[7].w, r6.z
    dp2 r6.w, r4.zwzz, r4.xyxx
    mad r6.w, -r9.x, r7.y, r6.w
    mad r6.w, cb0[7].z, r6.w, -r7.z
    add r7.z, r6.w, r6.w
    mul r7.w, r6.z, r7.w
    mul r7.w, r7.w, l(4.000000)
    mad r7.z, r7.z, r7.z, -r7.w
    sqrt r7.z, r7.z
    mad r6.w, -r6.w, l(2.000000), -r7.z
    add r6.z, r6.z, r6.z
    div r6.z, r6.w, r6.z
    mad r3.zw, r6.zzzz, r4.zzzw, -r3.zzzw
    div r3.zw, r3.zzzw, cb0[7].zzzz
    div r4.zw, r3.zzzw, r7.xxxy
    dp2 r6.z, r4.zwzz, r9.yzyy
    mul r6.w, r6.z, l(-2.000000)
    dp2 r4.z, r4.zwzz, r4.zwzz
    add r4.z, r4.z, l(-1.000000)
    mul r4.z, r4.z, r10.z
    mad r4.z, r6.w, r6.w, -r4.z
    sqrt r4.z, r4.z
    mad r4.z, -r6.z, l(-2.000000), r4.z
    div r0.x, r4.z, r0.x
    add r4.z, -|r0.x|, l(1.000000)
    sqrt r4.z, r4.z
    mad r4.w, |r0.x|, l(-0.018729), l(0.074261)
    mad r4.w, r4.w, |r0.x|, l(-0.212114)
    mad r4.w, r4.w, |r0.x|, l(1.570729)
    mul r6.z, r4.z, r4.w
    mad r6.z, r6.z, l(-2.000000), l(3.141593)
    lt r6.w, r0.x, -r0.x
    and r6.z, r6.w, r6.z
    mad r4.z, r4.w, r4.z, r6.z
    mul r4.z, r4.z, cb0[7].z
    max r4.z, |r4.z|, l(0.000010)
    mad r3.zw, -r0.xxxx, r4.xxxy, r3.zzzw
    div r3.zw, r3.zzzw, r7.xxxy
    mul r3.zw, r4.zzzz, r3.zzzw
    div r0.x, r4.z, cb0[7].z
    sincos r0.x, null, r0.x
    div r3.zw, r3.zzzw, r0.xxxx
    div r2.xy, r3.zwzz, r2.xyxx
    add r6.xy, r2.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  endif 
  add r2.xy, -r6.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  min r2.xy, r2.xyxx, r6.xyxx
  switch cb0[0].z
    case l(1)
    mov r0.x, l(3.555556)
    break 
    case l(2)
    mov r0.x, l(2.370370)
    break 
    case l(3)
    mov r0.x, l(1.777778)
    break 
    case l(4)
    mov r0.x, l(1.666667)
    break 
    case l(5)
    mov r0.x, l(1.600000)
    break 
    case l(6)
    mov r0.x, l(1.333333)
    break 
    case l(7)
    mov r0.x, l(1.250000)
    break 
    case l(8)
    mov r0.x, l(1.000000)
    break 
    case l(9)
    mov r0.x, l(0.800000)
    break 
    case l(10)
    mov r0.x, l(0.750000)
    break 
    default 
    mov r0.x, l(1.777778)
    break 
  endswitch 
  ge r3.z, r0.x, l(1.777778)
  div r4.y, l(1920.000000), r0.x
  mul r4.z, r0.x, l(1080.000000)
  mov r4.xw, l(1920.000000,0,0,1080.000000)
  movc r3.zw, r3.zzzz, r4.xxxy, r4.zzzw
  mul r4.x, r0.z, r0.x
  movc r4.x, cb0[0].x, r0.y, r4.x
  div r0.x, r4.x, r0.x
  movc r4.y, cb0[0].y, r0.z, r0.x
  movc r3.zw, r0.wwww, r3.zzzw, r4.xxxy
  switch cb0[1].y
    case l(0)
    div r0.x, r3.z, r3.w
    break 
    case l(1)
    mov r0.x, l(3.555556)
    break 
    case l(2)
    mov r0.x, l(2.370370)
    break 
    case l(3)
    mov r0.x, l(1.777778)
    break 
    case l(4)
    mov r0.x, l(1.666667)
    break 
    case l(5)
    mov r0.x, l(1.600000)
    break 
    case l(6)
    mov r0.x, l(1.333333)
    break 
    case l(7)
    mov r0.x, l(1.250000)
    break 
    case l(8)
    mov r0.x, l(1.000000)
    break 
    case l(9)
    mov r0.x, l(0.800000)
    break 
    case l(10)
    mov r0.x, l(0.750000)
    break 
    default 
    div r0.x, r3.z, r3.w
    break 
  endswitch 
  div r4.y, l(1.000000, 1.000000, 1.000000, 1.000000), r0.x
  mov r4.xz, l(1.000000,0,1920.000000,0)
  mul r2.xy, r2.xyxx, r4.xyxx
  min r2.xy, r2.xyxx, cb0[8].zzzz
  add r2.xy, -r2.xyxx, cb0[8].zzzz
  dp2 r0.x, r2.xyxx, r2.xyxx
  sqrt r0.x, r0.x
  add r0.x, -r0.x, cb0[8].z
  mul_sat r0.x, r0.x, cb0[8].w
  switch cb0[0].z
    case l(1)
    mov r2.x, l(3.555556)
    break 
    case l(2)
    mov r2.x, l(2.370370)
    break 
    case l(3)
    mov r2.x, l(1.777778)
    break 
    case l(4)
    mov r2.x, l(1.666667)
    break 
    case l(5)
    mov r2.x, l(1.600000)
    break 
    case l(6)
    mov r2.x, l(1.333333)
    break 
    case l(7)
    mov r2.x, l(1.250000)
    break 
    case l(8)
    mov r2.x, l(1.000000)
    break 
    case l(9)
    mov r2.x, l(0.800000)
    break 
    case l(10)
    mov r2.x, l(0.750000)
    break 
    default 
    mov r2.x, l(1.777778)
    break 
  endswitch 
  ge r2.y, r2.x, l(1.777778)
  div r4.w, l(1920.000000), r2.x
  mul r7.x, r2.x, l(1080.000000)
  mov r7.yz, l(0,1080.000000,1920.000000,0)
  movc r3.zw, r2.yyyy, r4.zzzw, r7.xxxy
  mul r2.y, r0.z, r2.x
  movc r4.x, cb0[0].x, r0.y, r2.y
  div r2.x, r4.x, r2.x
  movc r4.y, cb0[0].y, r0.z, r2.x
  movc r2.xy, r0.wwww, r3.zwzz, r4.xyxx
  switch cb0[1].y
    case l(0)
    div r3.z, r2.x, r2.y
    break 
    case l(1)
    mov r3.z, l(3.555556)
    break 
    case l(2)
    mov r3.z, l(2.370370)
    break 
    case l(3)
    mov r3.z, l(1.777778)
    break 
    case l(4)
    mov r3.z, l(1.666667)
    break 
    case l(5)
    mov r3.z, l(1.600000)
    break 
    case l(6)
    mov r3.z, l(1.333333)
    break 
    case l(7)
    mov r3.z, l(1.250000)
    break 
    case l(8)
    mov r3.z, l(1.000000)
    break 
    case l(9)
    mov r3.z, l(0.800000)
    break 
    case l(10)
    mov r3.z, l(0.750000)
    break 
    default 
    div r3.z, r2.x, r2.y
    break 
  endswitch 
  switch cb0[1].x
    case l(0)
    mov r2.x, l(1.777778)
    break 
    case l(1)
    mov r2.x, l(3.555556)
    break 
    case l(2)
    mov r2.x, l(2.370370)
    break 
    case l(3)
    mov r2.x, l(1.777778)
    break 
    case l(4)
    mov r2.x, l(1.666667)
    break 
    case l(5)
    mov r2.x, l(1.600000)
    break 
    case l(6)
    mov r2.x, l(1.333333)
    break 
    case l(7)
    mov r2.x, l(1.250000)
    break 
    case l(8)
    mov r2.x, l(1.000000)
    break 
    case l(9)
    mov r2.x, l(0.800000)
    break 
    case l(10)
    mov r2.x, l(0.750000)
    break 
    default 
    mov r2.x, l(1.777778)
    break 
  endswitch 
  ge r2.y, r2.x, r3.z
  div r2.x, r2.x, r3.z
  div r2.x, l(1920.000000), r2.x
  movc r2.x, r2.y, r2.x, l(1920.000000)
  movc r2.x, cb0[0].w, l(1920.000000), r2.x
  mul r2.xy, r2.xxxx, cb0[11].xyxx
  mul r2.x, r2.x, l(0.010000)
  switch cb0[0].z
    case l(1)
    mov r3.z, l(3.555556)
    break 
    case l(2)
    mov r3.z, l(2.370370)
    break 
    case l(3)
    mov r3.z, l(1.777778)
    break 
    case l(4)
    mov r3.z, l(1.666667)
    break 
    case l(5)
    mov r3.z, l(1.600000)
    break 
    case l(6)
    mov r3.z, l(1.333333)
    break 
    case l(7)
    mov r3.z, l(1.250000)
    break 
    case l(8)
    mov r3.z, l(1.000000)
    break 
    case l(9)
    mov r3.z, l(0.800000)
    break 
    case l(10)
    mov r3.z, l(0.750000)
    break 
    default 
    mov r3.z, l(1.777778)
    break 
  endswitch 
  ge r3.w, r3.z, l(1.777778)
  div r7.w, l(1920.000000), r3.z
  mul r4.x, r3.z, l(1080.000000)
  mov r4.yz, l(0,1080.000000,1920.000000,0)
  movc r4.xy, r3.wwww, r7.zwzz, r4.xyxx
  mul r3.w, r0.z, r3.z
  movc r7.x, cb0[0].x, r0.y, r3.w
  div r3.z, r7.x, r3.z
  movc r7.y, cb0[0].y, r0.z, r3.z
  movc r3.zw, r0.wwww, r4.xxxy, r7.xxxy
  switch cb0[1].y
    case l(0)
    div r4.x, r3.z, r3.w
    break 
    case l(1)
    mov r4.x, l(3.555556)
    break 
    case l(2)
    mov r4.x, l(2.370370)
    break 
    case l(3)
    mov r4.x, l(1.777778)
    break 
    case l(4)
    mov r4.x, l(1.666667)
    break 
    case l(5)
    mov r4.x, l(1.600000)
    break 
    case l(6)
    mov r4.x, l(1.333333)
    break 
    case l(7)
    mov r4.x, l(1.250000)
    break 
    case l(8)
    mov r4.x, l(1.000000)
    break 
    case l(9)
    mov r4.x, l(0.800000)
    break 
    case l(10)
    mov r4.x, l(0.750000)
    break 
    default 
    div r4.x, r3.z, r3.w
    break 
  endswitch 
  switch cb0[1].x
    case l(0)
    mov r3.z, l(1.777778)
    break 
    case l(1)
    mov r3.z, l(3.555556)
    break 
    case l(2)
    mov r3.z, l(2.370370)
    break 
    case l(3)
    mov r3.z, l(1.777778)
    break 
    case l(4)
    mov r3.z, l(1.666667)
    break 
    case l(5)
    mov r3.z, l(1.600000)
    break 
    case l(6)
    mov r3.z, l(1.333333)
    break 
    case l(7)
    mov r3.z, l(1.250000)
    break 
    case l(8)
    mov r3.z, l(1.000000)
    break 
    case l(9)
    mov r3.z, l(0.800000)
    break 
    case l(10)
    mov r3.z, l(0.750000)
    break 
    default 
    mov r3.z, l(1.777778)
    break 
  endswitch 
  ge r3.w, r3.z, r4.x
  div r4.y, r4.x, r3.z
  movc r3.w, r3.w, l(1.000000), r4.y
  mul r3.z, r4.x, r3.z
  movc r3.z, cb0[0].w, r3.z, r3.w
  div r3.z, l(1080.000000), r3.z
  mul r3.zw, r3.zzzz, cb0[11].zzzw
  mul r3.z, r3.z, l(0.010000)
  switch cb0[0].z
    case l(1)
    mov r4.x, l(3.555556)
    break 
    case l(2)
    mov r4.x, l(2.370370)
    break 
    case l(3)
    mov r4.x, l(1.777778)
    break 
    case l(4)
    mov r4.x, l(1.666667)
    break 
    case l(5)
    mov r4.x, l(1.600000)
    break 
    case l(6)
    mov r4.x, l(1.333333)
    break 
    case l(7)
    mov r4.x, l(1.250000)
    break 
    case l(8)
    mov r4.x, l(1.000000)
    break 
    case l(9)
    mov r4.x, l(0.800000)
    break 
    case l(10)
    mov r4.x, l(0.750000)
    break 
    default 
    mov r4.x, l(1.777778)
    break 
  endswitch 
  ge r4.y, r4.x, l(1.777778)
  div r4.w, l(1920.000000), r4.x
  mul r7.x, r4.x, l(1080.000000)
  mov r7.yw, l(0,1080.000000,0,1.000000)
  movc r4.yz, r4.yyyy, r4.zzwz, r7.xxyx
  mul r4.w, r0.z, r4.x
  movc r7.x, cb0[0].x, r0.y, r4.w
  div r0.y, r7.x, r4.x
  movc r7.y, cb0[0].y, r0.z, r0.y
  movc r0.yz, r0.wwww, r4.yyzy, r7.xxyx
  switch cb0[1].y
    case l(0)
    div r0.w, r0.y, r0.z
    break 
    case l(1)
    mov r0.w, l(3.555556)
    break 
    case l(2)
    mov r0.w, l(2.370370)
    break 
    case l(3)
    mov r0.w, l(1.777778)
    break 
    case l(4)
    mov r0.w, l(1.666667)
    break 
    case l(5)
    mov r0.w, l(1.600000)
    break 
    case l(6)
    mov r0.w, l(1.333333)
    break 
    case l(7)
    mov r0.w, l(1.250000)
    break 
    case l(8)
    mov r0.w, l(1.000000)
    break 
    case l(9)
    mov r0.w, l(0.800000)
    break 
    case l(10)
    mov r0.w, l(0.750000)
    break 
    default 
    div r0.w, r0.y, r0.z
    break 
  endswitch 
  switch cb0[1].x
    case l(0)
    mov r0.y, l(1.777778)
    break 
    case l(1)
    mov r0.y, l(3.555556)
    break 
    case l(2)
    mov r0.y, l(2.370370)
    break 
    case l(3)
    mov r0.y, l(1.777778)
    break 
    case l(4)
    mov r0.y, l(1.666667)
    break 
    case l(5)
    mov r0.y, l(1.600000)
    break 
    case l(6)
    mov r0.y, l(1.333333)
    break 
    case l(7)
    mov r0.y, l(1.250000)
    break 
    case l(8)
    mov r0.y, l(1.000000)
    break 
    case l(9)
    mov r0.y, l(0.800000)
    break 
    case l(10)
    mov r0.y, l(0.750000)
    break 
    default 
    mov r0.y, l(1.777778)
    break 
  endswitch 
  ge r0.z, r0.y, r0.w
  div r7.z, r0.y, r0.w
  div r4.y, r0.w, r0.y
  mov r4.xz, l(1.000000,0,1.000000,0)
  movc r4.xy, r0.zzzz, r7.zwzz, r4.xyxx
  mul r4.w, r0.w, r0.y
  movc r0.yz, cb0[0].wwww, r4.zzwz, r4.xxyx
  div r0.yz, l(0.000000, 1920.000000, 1080.000000, 0.000000), r0.yyzy
  mul r4.xy, r0.yzyy, cb0[12].zwzz
  add r4.zw, r6.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
  mul r6.xy, cb0[12].xyxx, l(0.010000, 0.010000, 0.000000, 0.000000)
  div r4.zw, r4.zzzw, r6.xxxy
  add r4.zw, r4.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  mad r0.w, r2.y, l(0.010000), -r2.x
  mad r0.w, r4.z, r0.w, r2.x
  mad r0.w, r4.x, l(0.010000), r0.w
  div r2.y, r0.w, r0.y
  mad r0.y, r3.w, l(0.010000), -r3.z
  mad r0.y, r4.w, r0.y, r3.z
  mad r0.y, r4.y, l(0.010000), r0.y
  div r2.x, r0.y, r0.z
  div r0.yz, r2.yyxy, r2.zzwz
  add r3.zw, r2.yyyx, l(0.000000, 0.000000, -0.500000, -0.500000)
  div r2.zw, r3.zzzw, r2.zzzw
  add r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  movc r0.yz, cb0[0].zzzz, r2.zzwz, r0.yyzy
  mad r0.yz, r0.yyzy, r3.xxyx, l(0.000000, -0.500000, -0.500000, 0.000000)
  frc r2.zw, r0.yyyz
  round_ni r0.yz, r0.yyzy
  add r0.yz, r0.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)
  div r0.yz, r0.yyzy, r3.xxyx
  div r3.xy, cb0[4].zwzz, r1.zwzz
  add r0.yz, r0.yyzy, r3.xxyx
  add r3.xy, -r2.zwzz, l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r4.xyzw, r2.zzzz, l(1.000000, 1.000000, -1.000000, -1.000000), l(1.000000, 0.000000, 1.000000, 2.000000)
  mul r4.xyzw, r4.xyzw, l(3.141593, 3.141593, 3.141593, 3.141593)
  mad r6.xyzw, r2.wwww, l(1.000000, 1.000000, -1.000000, -1.000000), l(1.000000, 0.000000, 1.000000, 2.000000)
  mul r6.xyzw, r6.xyzw, l(3.141593, 3.141593, 3.141593, 3.141593)
  movc r4.xyzw, cb0[5].yyyy, r6.xyzw, r4.xyzw
  max r4.xyzw, r4.xyzw, l(0.000010, 0.000010, 0.000010, 0.000010)
  sincos r6.xyzw, null, r4.xyzw
  add r6.xyzw, r6.xyzw, r6.xyzw
  mul r7.xyzw, r4.xyzw, l(0.500000, 0.500000, 0.500000, 0.500000)
  sincos r7.xyzw, null, r7.xyzw
  mul r6.xyzw, r6.xyzw, r7.xyzw
  mul r4.xyzw, r4.xyzw, r4.xyzw
  div r4.xyzw, r6.xyzw, r4.xyzw
  dp4 r0.w, r4.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
  div r4.xyzw, r4.xyzw, r0.wwww
  ieq r3.zw, cb0[5].zzzz, l(0, 0, 1, 2)
  if_z cb0[5].y
    mov r6.x, -r5.x
    mov r6.y, l(0)
    add r6.xy, r0.yzyy, r6.xyxx
    sample_indexable(texture2d)(float,float,float,float) r6.xyz, r6.xyxx, t0.xyzw, s0
    log r6.xyz, |r6.xyzx|
    mul r6.xyz, r6.xyzx, cb0[7].xxxx
    exp r6.xyz, r6.xyzx
    sample_indexable(texture2d)(float,float,float,float) r7.xyz, r0.yzyy, t0.xyzw, s0
    log r7.xyz, |r7.xyzx|
    mul r7.xyz, r7.xyzx, cb0[7].xxxx
    exp r7.xyz, r7.xyzx
    mov r5.z, l(0)
    add r8.xyzw, r5.xzzy, r0.yzyz
    sample_indexable(texture2d)(float,float,float,float) r9.xyz, r8.xyxx, t0.xyzw, s0
    log r9.xyz, |r9.xyzx|
    mul r9.xyz, r9.xyzx, cb0[7].xxxx
    exp r9.xyz, r9.xyzx
    mul r5.w, r5.x, l(2.000000)
    add r10.xyzw, r5.wzxy, r0.yzyz
    sample_indexable(texture2d)(float,float,float,float) r11.xyz, r10.xyxx, t0.xyzw, s0
    log r11.xyz, |r11.xyzx|
    mul r11.xyz, r11.xyzx, cb0[7].xxxx
    exp r11.xyz, r11.xyzx
    mul r7.xyz, r4.yyyy, r7.xyzx
    mad r6.xyz, r4.xxxx, r6.xyzx, r7.xyzx
    mad r6.xyz, r4.zzzz, r9.xyzx, r6.xyzx
    mad_sat r6.xyz, r4.wwww, r11.xyzx, r6.xyzx
    mad r7.xyzw, r5.xyxy, l(-1.000000, 1.000000, 2.000000, 1.000000), r0.yzyz
    sample_indexable(texture2d)(float,float,float,float) r9.xyz, r7.xyxx, t0.xyzw, s0
    log r9.xyz, |r9.xyzx|
    mul r9.xyz, r9.xyzx, cb0[7].xxxx
    exp r9.xyz, r9.xyzx
    sample_indexable(texture2d)(float,float,float,float) r8.xyz, r8.zwzz, t0.xyzw, s0
    log r8.xyz, |r8.xyzx|
    mul r8.xyz, r8.xyzx, cb0[7].xxxx
    exp r8.xyz, r8.xyzx
    sample_indexable(texture2d)(float,float,float,float) r10.xyz, r10.zwzz, t0.xyzw, s0
    log r10.xyz, |r10.xyzx|
    mul r10.xyz, r10.xyzx, cb0[7].xxxx
    exp r10.xyz, r10.xyzx
    sample_indexable(texture2d)(float,float,float,float) r7.xyz, r7.zwzz, t0.xyzw, s0
    log r7.xyz, |r7.xyzx|
    mul r7.xyz, r7.xyzx, cb0[7].xxxx
    exp r7.xyz, r7.xyzx
    mul r8.xyz, r4.yyyy, r8.xyzx
    mad r8.xyz, r4.xxxx, r9.xyzx, r8.xyzx
    mad r8.xyz, r4.zzzz, r10.xyzx, r8.xyzx
    mad_sat r7.xyz, r4.wwww, r7.xyzx, r8.xyzx
    mul r8.xyz, r6.xyzx, r6.xyzx
    mul r8.xyz, r6.xyzx, r8.xyzx
    mad r8.xyz, r8.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), l(0.300000, 0.300000, 0.300000, 0.000000)
    div r9.xyz, r2.wwww, r8.xyzx
    add r0.w, cb0[6].w, l(-0.300000)
    mul r9.xyz, r9.xyzx, -r9.xyzx
    mul r9.xyz, r9.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
    exp r9.xyz, r9.xyzx
    mul r9.xyz, r0.wwww, r9.xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    mul r10.xyz, r7.xyzx, r7.xyzx
    mul r10.xyz, r7.xyzx, r10.xyzx
    mad r10.xyz, r10.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), l(0.300000, 0.300000, 0.300000, 0.000000)
    div r11.xyz, r3.yyyy, r10.xyzx
    mul r11.xyz, r11.xyzx, -r11.xyzx
    mul r11.xyz, r11.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
    exp r11.xyz, r11.xyzx
    mul r11.xyz, r0.wwww, r11.xyzx
    div r11.xyz, r11.xyzx, r10.xyzx
    if_nz cb0[6].y
      div r1.w, r1.x, r1.w
      mul r1.w, r1.w, cb0[6].z
      mad r2.w, r1.w, l(0.333333), r2.w
      div r12.xyz, r2.wwww, r8.xyzx
      mul r12.xyz, r12.xyzx, -r12.xyzx
      mul r12.xyz, r12.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r12.xyz, r12.xyzx
      mul r12.xyz, r0.wwww, r12.xyzx
      div r12.xyz, r12.xyzx, r8.xyzx
      add r12.xyz, r9.xyzx, r12.xyzx
      add r3.y, -r2.w, l(1.000000)
      div r13.xyz, |r3.yyyy|, r10.xyzx
      mul r13.xyz, r13.xyzx, -r13.xyzx
      mul r13.xyz, r13.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r13.xyz, r13.xyzx
      mul r13.xyz, r0.wwww, r13.xyzx
      div r13.xyz, r13.xyzx, r10.xyzx
      add r13.xyz, r11.xyzx, r13.xyzx
      mad r1.w, -r1.w, l(0.666667), r2.w
      div r14.xyz, |r1.wwww|, r8.xyzx
      mul r14.xyz, r14.xyzx, -r14.xyzx
      mul r14.xyz, r14.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r14.xyz, r14.xyzx
      mul r14.xyz, r0.wwww, r14.xyzx
      div r8.xyz, r14.xyzx, r8.xyzx
      mul r8.xyz, r8.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
      mad r9.xyz, r12.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r8.xyzx
      add r1.w, -r1.w, l(1.000000)
      div r8.xyz, |r1.wwww|, r10.xyzx
      mul r8.xyz, r8.xyzx, -r8.xyzx
      mul r8.xyz, r8.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r8.xyz, r8.xyzx
      mul r8.xyz, r0.wwww, r8.xyzx
      div r8.xyz, r8.xyzx, r10.xyzx
      mul r8.xyz, r8.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
      mad r11.xyz, r13.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r8.xyzx
    endif 
    mul r7.xyz, r7.xyzx, r11.xyzx
    mad r6.xyz, r6.xyzx, r9.xyzx, r7.xyzx
    mul r6.xyz, r0.xxxx, r6.xyzx
  else 
    mov r7.y, -r5.y
    mov r7.xz, l(0,0,0,0)
    add r5.zw, r0.yyyz, r7.xxxy
    sample_indexable(texture2d)(float,float,float,float) r8.xyz, r5.zwzz, t0.xyzw, s0
    log r8.xyz, |r8.xyzx|
    mul r8.xyz, r8.xyzx, cb0[7].xxxx
    exp r8.xyz, r8.xyzx
    sample_indexable(texture2d)(float,float,float,float) r9.xyz, r0.yzyy, t0.xyzw, s0
    log r9.xyz, |r9.xyzx|
    mul r9.xyz, r9.xyzx, cb0[7].xxxx
    exp r9.xyz, r9.xyzx
    mov r7.w, r5.y
    add r5.zw, r0.yyyz, r7.zzzw
    sample_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zwzz, t0.xyzw, s0
    log r7.xyz, |r7.xyzx|
    mul r7.xyz, r7.xyzx, cb0[7].xxxx
    exp r7.xyz, r7.xyzx
    add r10.y, r5.y, r5.y
    mov r10.x, l(0)
    add r5.zw, r0.yyyz, r10.xxxy
    sample_indexable(texture2d)(float,float,float,float) r10.xyz, r5.zwzz, t0.xyzw, s0
    log r10.xyz, |r10.xyzx|
    mul r10.xyz, r10.xyzx, cb0[7].xxxx
    exp r10.xyz, r10.xyzx
    mul r9.xyz, r4.yyyy, r9.xyzx
    mad r8.xyz, r4.xxxx, r8.xyzx, r9.xyzx
    mad r7.xyz, r4.zzzz, r7.xyzx, r8.xyzx
    mad_sat r7.xyz, r4.wwww, r10.xyzx, r7.xyzx
    mul r8.x, r5.x, l(1.000000)
    mad r5.zw, r5.xxxy, l(0.000000, 0.000000, 1.000000, -1.000000), r0.yyyz
    sample_indexable(texture2d)(float,float,float,float) r9.xyz, r5.zwzz, t0.xyzw, s0
    log r9.xyz, |r9.xyzx|
    mul r9.xyz, r9.xyzx, cb0[7].xxxx
    exp r9.xyz, r9.xyzx
    mov r8.z, l(0)
    add r5.zw, r0.yyyz, r8.xxxz
    sample_indexable(texture2d)(float,float,float,float) r8.xyz, r5.zwzz, t0.xyzw, s0
    log r8.xyz, |r8.xyzx|
    mul r8.xyz, r8.xyzx, cb0[7].xxxx
    exp r8.xyz, r8.xyzx
    add r5.zw, r5.xxxy, r0.yyyz
    sample_indexable(texture2d)(float,float,float,float) r10.xyz, r5.zwzz, t0.xyzw, s0
    log r10.xyz, |r10.xyzx|
    mul r10.xyz, r10.xyzx, cb0[7].xxxx
    exp r10.xyz, r10.xyzx
    mad r0.yz, r5.xxyx, l(0.000000, 1.000000, 2.000000, 0.000000), r0.yyzy
    sample_indexable(texture2d)(float,float,float,float) r0.yzw, r0.yzyy, t0.wxyz, s0
    log r0.yzw, |r0.yyzw|
    mul r0.yzw, r0.yyzw, cb0[7].xxxx
    exp r0.yzw, r0.yyzw
    mul r5.xyz, r4.yyyy, r8.xyzx
    mad r5.xyz, r4.xxxx, r9.xyzx, r5.xyzx
    mad r4.xyz, r4.zzzz, r10.xyzx, r5.xyzx
    mad_sat r0.yzw, r4.wwww, r0.yyzw, r4.xxyz
    mul r4.xyz, r7.xyzx, r7.xyzx
    mul r4.xyz, r4.xyzx, r7.xyzx
    mad r4.xyz, r4.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), l(0.300000, 0.300000, 0.300000, 0.000000)
    div r5.xyz, r2.zzzz, r4.xyzx
    add r1.w, cb0[6].w, l(-0.300000)
    mul r5.xyz, r5.xyzx, -r5.xyzx
    mul r5.xyz, r5.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
    exp r5.xyz, r5.xyzx
    mul r5.xyz, r1.wwww, r5.xyzx
    div r5.xyz, r5.xyzx, r4.xyzx
    mul r8.xyz, r0.yzwy, r0.yzwy
    mul r8.xyz, r0.yzwy, r8.xyzx
    mad r8.xyz, r8.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000), l(0.300000, 0.300000, 0.300000, 0.000000)
    div r9.xyz, r3.xxxx, r8.xyzx
    mul r9.xyz, r9.xyzx, -r9.xyzx
    mul r9.xyz, r9.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
    exp r9.xyz, r9.xyzx
    mul r9.xyz, r1.wwww, r9.xyzx
    div r9.xyz, r9.xyzx, r8.xyzx
    if_nz cb0[6].y
      div r1.z, r1.y, r1.z
      mul r1.z, r1.z, cb0[6].z
      mad r1.w, r1.z, l(0.333333), r2.z
      div r10.xyz, r1.wwww, r4.xyzx
      add r2.z, cb0[6].w, l(-0.300000)
      mul r10.xyz, r10.xyzx, -r10.xyzx
      mul r10.xyz, r10.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r10.xyz, r10.xyzx
      mul r10.xyz, r2.zzzz, r10.xyzx
      div r10.xyz, r10.xyzx, r4.xyzx
      add r10.xyz, r5.xyzx, r10.xyzx
      add r2.w, -r1.w, l(1.000000)
      div r11.xyz, |r2.wwww|, r8.xyzx
      mul r11.xyz, r11.xyzx, -r11.xyzx
      mul r11.xyz, r11.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r11.xyz, r11.xyzx
      mul r11.xyz, r2.zzzz, r11.xyzx
      div r11.xyz, r11.xyzx, r8.xyzx
      add r11.xyz, r9.xyzx, r11.xyzx
      mad r1.z, -r1.z, l(0.666667), r1.w
      div r12.xyz, |r1.zzzz|, r4.xyzx
      mul r12.xyz, r12.xyzx, -r12.xyzx
      mul r12.xyz, r12.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r12.xyz, r12.xyzx
      mul r12.xyz, r2.zzzz, r12.xyzx
      div r4.xyz, r12.xyzx, r4.xyzx
      mul r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
      mad r5.xyz, r10.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r4.xyzx
      add r1.z, -r1.z, l(1.000000)
      div r4.xyz, |r1.zzzz|, r8.xyzx
      mul r4.xyz, r4.xyzx, -r4.xyzx
      mul r4.xyz, r4.xyzx, l(1.442695, 1.442695, 1.442695, 0.000000)
      exp r4.xyz, r4.xyzx
      mul r4.xyz, r2.zzzz, r4.xyzx
      div r4.xyz, r4.xyzx, r8.xyzx
      mul r4.xyz, r4.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
      mad r9.xyz, r11.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000), r4.xyzx
    endif 
    mul r0.yzw, r0.yyzw, r9.xxyz
    mad r0.yzw, r7.xxyz, r5.xxyz, r0.yyzw
    mul r6.xyz, r0.yzwy, r0.xxxx
  endif 
  mul r0.xy, r1.xyxx, r2.xyxx
  movc r0.xy, cb0[5].yyyy, r0.xyxx, r0.yxyy
  or r0.z, r3.w, r3.z
  if_nz r0.z
    if_nz r3.w
      mul r0.zw, r0.xxxy, l(0.000000, 0.000000, 0.500000, 0.500000)
      sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.zwzz, t16.xyzw, s2
    else 
      sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.xyxx, t14.xyzw, s2
    endif 
    mul r0.y, cb0[5].w, l(1.200000)
    add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
    mad r0.yzw, r0.yyyy, r1.xxyz, l(0.000000, 1.000000, 1.000000, 1.000000)
    mul r0.yzw, r0.yyzw, r6.xxyz
  else 
    mad r0.x, r0.x, l(2.000000), l(1.000000)
    mul r1.x, r0.x, l(0.500000)
    frc r1.x, |r1.x|
    add r1.x, r1.x, r1.x
    lt r0.x, r0.x, l(0.000000)
    movc r0.x, r0.x, -r1.x, r1.x
    add r0.x, r0.x, l(-1.000000)
    add r0.x, |r0.x|, l(-0.500000)
    mad r0.x, r0.x, l(2.000000), l(0.500000)
    mov r1.xz, l(1.000000,0,1.000000,0)
    add r1.y, -cb0[5].w, l(1.000000)
    add r2.xyz, -r1.zyzz, r1.yzyy
    mad r1.xyz, r0.xxxx, r2.xyzx, r1.xyzx
    mul r0.yzw, r1.xxyz, r6.xxyz
  endif 
  div r0.x, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[7].y
  log r0.yzw, |r0.yyzw|
  mul r0.xyz, r0.yzwy, r0.xxxx
  exp o0.xyz, r0.xyzx
  mov o0.w, l(1.000000)
  ret 
endif 
ret 
// Approximately 2583 instruction slots used
