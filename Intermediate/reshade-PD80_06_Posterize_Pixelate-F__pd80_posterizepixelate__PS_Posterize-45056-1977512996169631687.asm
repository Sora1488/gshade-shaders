//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8 [unused]
//   int number_of_levels;              // Offset:    8 Size:     4
//   int pixel_size;                    // Offset:   12 Size:     4
//   float effect_strength;             // Offset:   16 Size:     4
//   float border_str;                  // Offset:   20 Size:     4
//   bool enable_dither;                // Offset:   24 Size:     4
//   bool dither_motion;                // Offset:   28 Size:     4
//   float dither_strength;             // Offset:   32 Size:     4
//   float2 pingpong;                   // Offset:   36 Size:     8
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// __V__pd80_posterizepixelate__texMipMe    texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 3
add r0.x, cb0[2].y, l(9.000000)
mul r0.x, r0.x, l(0.618034)
movc r0.x, cb0[1].w, r0.x, l(0.618034)
iadd r0.yz, cb0[0].wwzw, l(0, -1, -1, 0)
itof r0.yz, r0.yyzy
exp r0.w, r0.y
div r1.xy, l(1920.000000, 1080.000000, 0.000000, 0.000000), r0.wwww
rcp r0.w, r0.w
add r0.w, r0.w, l(-0.000010)
max r0.w, r0.w, l(0.000000)
round_ni r1.xy, r1.xyxx
mul r1.xy, r1.xyxx, v1.xyxx
mul r1.zw, r1.xxxy, l(0.000000, 0.000000, 0.001953, 0.001953)
frc r1.xy, r1.xyxx
ge r1.xy, r0.wwww, r1.xyxx
and r1.xy, r1.xyxx, l(0x3f800000, 0x3f800000, 0, 0)
add r0.w, r1.y, r1.x
min r0.w, r0.w, l(1.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t6.xyzw, s1
add r1.xyz, r0.xxxx, r1.xyzx
frc r1.xyz, r1.xyzx
mad r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
itof r0.x, cb0[0].z
div r1.w, cb0[2].x, r0.x
sample_l_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t10.xyzw, s2, r0.y
mad_sat r1.xyz, r1.xyzx, r1.wwww, r2.xyzx
movc r1.xyz, cb0[1].zzzz, r1.xyzx, r2.xyzx
mul r2.xyz, r0.xxxx, r1.xyzx
round_ni r2.xyz, r2.xyzx
div r2.xyz, r2.xyzx, r0.zzzz
mov_sat r0.y, r0.y
mul r0.x, r0.y, cb0[1].y
mul r0.xyz, -r2.xyzx, r0.xxxx
mad r0.xyz, r0.wwww, r0.xyzx, r2.xyzx
add r0.xyz, -r1.xyzx, r0.xyzx
mad o0.xyz, cb0[1].xxxx, r0.xyzx, r1.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 38 instruction slots used
