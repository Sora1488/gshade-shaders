//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Depth_Map;                     // Offset:    0 Size:     4
//   float Depth_Map_Adjust;            // Offset:    4 Size:     4
//   bool Depth_Map_Flip;               // Offset:    8 Size:     4
//   bool No_Depth_Map;                 // Offset:   12 Size:     4
//   float Sharpness;                   // Offset:   16 Size:     4
//   bool CAM_IOB;                      // Offset:   20 Size:     4
//   bool CA_Mask_Boost;                // Offset:   24 Size:     4
//   bool CA_Removal;                   // Offset:   28 Size:     4
//   int NLM_Grounding;                 // Offset:   32 Size:     4
//   bool Debug_View;                   // Offset:   36 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__DepthBufferTex               texture  float4          2d             t0      1 
// __V__BackBufferTex                texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 12
ieq r0.xy, cb0[2].xxxx, l(2, 1, 0, 0)
movc r0.yz, r0.yyyy, l(0,0.000651,0.001157,0), l(0,0.000521,0.000926,0)
movc r0.xy, r0.xxxx, l(0.000781,0.001389,0,0), r0.yzyy
mov r1.xyz, l(0,0,0,0)
mov r0.z, l(0)
mov r2.y, l(-1.000000)
loop 
  lt r0.w, l(1.000000), r2.y
  breakc_nz r0.w
  mul r0.w, r2.y, r2.y
  mov r3.xyz, r1.xyzx
  mov r1.w, r0.z
  mov r2.x, l(-1.000000)
  loop 
    lt r2.z, l(1.000000), r2.x
    breakc_nz r2.z
    mov r2.z, l(0)
    mov r4.y, l(-0.500000)
    loop 
      lt r2.w, l(0.500000), r4.y
      breakc_nz r2.w
      add r5.y, r2.y, r4.y
      mov r6.x, r2.z
      mov r6.y, l(-0.500000)
      loop 
        lt r2.w, l(0.500000), r6.y
        breakc_nz r2.w
        add r5.x, r2.x, r6.y
        mad r4.zw, r5.xxxy, r0.xxxy, v1.xxxy
        sample_l_indexable(texture2d)(float,float,float,float) r7.xyzw, r4.zwzz, t2.xyzw, s0, l(0.000000)
        mov_sat r7.xyzw, r7.xyzw
        mov r4.x, r6.y
        mad r4.xz, r4.xxyx, r0.xxyx, v1.xxyx
        sample_l_indexable(texture2d)(float,float,float,float) r8.xyzw, r4.xzxx, t2.xyzw, s0, l(0.000000)
        mov_sat r8.xyzw, r8.xyzw
        add r7.xyzw, -r7.xyzw, r8.xyzw
        dp4 r2.w, r7.xyzw, r7.xyzw
        add r6.x, r2.w, r6.x
        add r6.y, r6.y, l(1.000000)
      endloop 
      mov r2.z, r6.x
      add r4.y, r4.y, l(1.000000)
    endloop 
    mad r2.w, r2.x, r2.x, r0.w
    mul r2.w, r2.w, l(-0.200000)
    mad r2.w, r2.z, l(-1.250000), r2.w
    mul r2.w, r2.w, l(1.442695)
    exp r2.w, r2.w
    mad r4.xy, r2.xyxx, r0.xyxx, v1.xyxx
    sample_l_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t2.xyzw, s0, l(0.000000)
    mov_sat r4.xyz, r4.xyzx
    mad r3.xyz, r2.wwww, r4.xyzx, r3.xyzx
    add r1.w, r1.w, r2.w
    add r2.x, r2.x, l(1.000000)
  endloop 
  mov r1.xyz, r3.xyzx
  mov r0.z, r1.w
  add r2.y, r2.y, l(1.000000)
endloop 
mul_sat r0.w, cb0[1].x, l(0.500000)
add r1.w, -v1.y, l(1.000000)
movc r2.y, cb0[0].z, r1.w, v1.y
mov r2.x, v1.x
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t0.yzwx, s0
div r2.x, l(0.125000), cb0[0].y
add r2.y, -r1.w, l(1.000000)
add r2.z, r2.x, l(-1.000000)
mad r2.w, r1.w, r2.z, l(1.000000)
ieq r3.x, cb0[0].x, l(1)
mad r2.y, r2.y, r2.z, l(1.000000)
div r2.yw, r2.xxxx, r2.yyyw
movc r1.w, r3.x, r2.y, r1.w
movc_sat r4.x, cb0[0].x, r1.w, r2.w
add r2.yw, v1.xxxy, v1.xxxy
mad r1.w, v1.y, l(2.000000), l(-1.000000)
add r3.y, -r1.w, l(1.000000)
movc r5.y, cb0[0].z, r3.y, r1.w
mul r5.x, v1.x, l(2.000000)
sample_indexable(texture2d)(float,float,float,float) r1.w, r5.xyxx, t0.yzwx, s0
add r3.y, -r1.w, l(1.000000)
mad r3.z, r1.w, r2.z, l(1.000000)
mad r3.y, r3.y, r2.z, l(1.000000)
div r3.yz, r2.xxxx, r3.yyzy
movc r1.w, r3.x, r3.y, r1.w
movc_sat r4.y, cb0[0].x, r1.w, r3.z
movc r3.yz, cb0[0].wwww, l(0,0,0,0), r4.xxyx
if_z cb0[2].y
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t2.xyzw, s0
  div_sat r1.xyz, r1.xyzx, r0.zzzz
  add r1.xyz, -r1.xyzx, r4.xyzx
  mul r0.z, cb0[1].x, l(3.100000)
  mul r1.xyz, r0.zzzz, r1.xyzx
  add r5.xyzw, v1.xyxy, l(0.000000, -0.000926, -0.000521, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t2.xyzw, s0, l(0.000000)
  dp3 r0.z, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t2.xyzw, s0, l(0.000000)
  dp3 r1.w, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, v1.xyxx, t2.xyzw, s0, l(0.000000)
  dp3 r3.w, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  add r5.xyzw, v1.xyxy, l(0.000521, 0.000000, 0.000000, 0.000926)
  sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t2.xyzw, s0, l(0.000000)
  dp3 r4.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t2.xyzw, s0, l(0.000000)
  dp3 r5.x, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
  min r5.y, r3.w, r4.w
  min r5.y, r1.w, r5.y
  min r5.z, r0.z, r5.x
  min r5.y, r5.z, r5.y
  max r3.w, r3.w, r4.w
  max r1.w, r1.w, r3.w
  max r0.z, r0.z, r5.x
  max r0.z, r0.z, r1.w
  rcp r1.w, r0.z
  add r5.xz, -r0.zzzz, l(1.000000, 0.000000, 2.000000, 0.000000)
  min r5.xy, r5.xzxx, r5.yyyy
  mul_sat r5.xy, r1.wwww, r5.xyxx
  movc r0.z, cb0[1].y, r5.y, r5.x
  mad r1.w, r0.z, r0.z, -r0.z
  mad r1.w, r0.w, r1.w, r0.z
  movc_sat r0.z, cb0[1].z, r1.w, r0.z
  movc r0.z, cb0[1].w, l(1.000000), r0.z
  mov_sat r1.w, cb0[1].x
  mul r0.z, r0.z, r1.w
  mad r1.xyz, r0.zzzz, r1.xyzx, r4.xyzx
  add r4.xyz, -r1.xyzx, r4.xyzx
  mad o0.xyz, r3.yyyy, r4.xyzx, r1.xyzx
  ret 
else 
  mad r1.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
  mov r4.xyz, l(0,0,0,0)
  mov r0.z, l(0)
  mov r5.y, l(-1.000000)
  loop 
    lt r1.z, l(1.000000), r5.y
    breakc_nz r1.z
    mul r1.z, r5.y, r5.y
    mov r6.xyz, r4.xyzx
    mov r1.w, r0.z
    mov r5.x, l(-1.000000)
    loop 
      lt r3.y, l(1.000000), r5.x
      breakc_nz r3.y
      mov r3.y, l(0)
      mov r7.y, l(-0.500000)
      loop 
        lt r3.w, l(0.500000), r7.y
        breakc_nz r3.w
        add r8.y, r5.y, r7.y
        mov r9.x, r3.y
        mov r9.y, l(-0.500000)
        loop 
          lt r3.w, l(0.500000), r9.y
          breakc_nz r3.w
          add r8.x, r5.x, r9.y
          mad r5.zw, r8.xxxy, r0.xxxy, r1.xxxy
          sample_l_indexable(texture2d)(float,float,float,float) r10.xyzw, r5.zwzz, t2.xyzw, s0, l(0.000000)
          mov_sat r10.xyzw, r10.xyzw
          mov r7.x, r9.y
          mad r5.zw, r7.xxxy, r0.xxxy, r1.xxxy
          sample_l_indexable(texture2d)(float,float,float,float) r11.xyzw, r5.zwzz, t2.xyzw, s0, l(0.000000)
          mov_sat r11.xyzw, r11.xyzw
          add r10.xyzw, -r10.xyzw, r11.xyzw
          dp4 r3.w, r10.xyzw, r10.xyzw
          add r9.x, r3.w, r9.x
          add r9.y, r9.y, l(1.000000)
        endloop 
        mov r3.y, r9.x
        add r7.y, r7.y, l(1.000000)
      endloop 
      mad r3.w, r5.x, r5.x, r1.z
      mul r3.w, r3.w, l(-0.200000)
      mad r3.w, r3.y, l(-1.250000), r3.w
      mul r3.w, r3.w, l(1.442695)
      exp r3.w, r3.w
      mad r5.zw, r5.xxxy, r0.xxxy, r1.xxxy
      sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r5.zwzz, t2.xyzw, s0, l(0.000000)
      mov_sat r7.xyz, r7.xyzx
      mad r6.xyz, r3.wwww, r7.xyzx, r6.xyzx
      add r1.w, r1.w, r3.w
      add r5.x, r5.x, l(1.000000)
    endloop 
    mov r4.xyz, r6.xyzx
    mov r0.z, r1.w
    add r5.y, r5.y, l(1.000000)
  endloop 
  lt r0.xy, v1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  if_nz r0.y
    mad r0.y, -v1.y, l(2.000000), l(1.000000)
    movc r1.x, cb0[0].z, r0.y, r2.w
    mul r1.y, v1.x, l(2.000000)
    sample_indexable(texture2d)(float,float,float,float) r0.y, r1.yxyy, t0.yxzw, s0
    add r1.y, -r0.y, l(1.000000)
    mad r1.w, r0.y, r2.z, l(1.000000)
    mad r1.y, r1.y, r2.z, l(1.000000)
    div r1.yw, r2.xxxx, r1.yyyw
    movc r0.y, r3.x, r1.y, r0.y
    movc_sat r0.y, cb0[0].x, r0.y, r1.w
    mad r5.xyzw, v1.xyxy, l(2.000000, 2.000000, 2.000000, 2.000000), l(0.000000, -0.000926, -0.000521, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t2.xyzw, s0, l(0.000000)
    dp3 r1.y, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t2.xyzw, s0, l(0.000000)
    dp3 r1.w, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r2.ywyy, t2.xyzw, s0, l(0.000000)
    dp3 r2.y, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    mad r5.xyzw, v1.xyxy, l(2.000000, 2.000000, 2.000000, 2.000000), l(0.000521, 0.000000, 0.000000, 0.000926)
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyz, r5.xyxx, t2.xyzw, s0, l(0.000000)
    dp3 r2.w, r6.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r5.xyz, r5.zwzz, t2.xyzw, s0, l(0.000000)
    dp3 r3.y, r5.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
    min r3.w, r2.w, r2.y
    min r3.w, r1.w, r3.w
    min r4.w, r1.y, r3.y
    min r3.w, r3.w, r4.w
    max r2.y, r2.w, r2.y
    max r1.w, r1.w, r2.y
    max r1.y, r1.y, r3.y
    max r1.y, r1.y, r1.w
    rcp r1.w, r1.y
    add r2.yw, -r1.yyyy, l(0.000000, 1.000000, 0.000000, 2.000000)
    min r2.yw, r2.yyyw, r3.wwww
    mul_sat r1.yw, r1.wwww, r2.yyyw
    movc r1.y, cb0[1].y, r1.w, r1.y
    mad r1.w, r1.y, r1.y, -r1.y
    mad r0.w, r0.w, r1.w, r1.y
    movc_sat r0.w, cb0[1].z, r0.w, r1.y
    add r0.y, -r0.y, l(1.000000)
    add r0.w, r0.w, l(-1.000000)
    mad r0.y, r0.y, r0.w, l(1.000000)
    movc r0.y, cb0[1].w, l(1.000000), r0.y
    mad r1.z, v1.x, l(2.000000), l(-1.000000)
    sample_indexable(texture2d)(float,float,float,float) r0.w, r1.zxzz, t0.yzwx, s0
    add r1.x, -r0.w, l(1.000000)
    mad r1.y, r0.w, r2.z, l(1.000000)
    mad r1.x, r1.x, r2.z, l(1.000000)
    div r1.xy, r2.xxxx, r1.xyxx
    movc r0.w, r3.x, r1.x, r0.w
    movc_sat r0.w, cb0[0].x, r0.w, r1.y
    movc o0.xyz, r0.xxxx, r0.yyyy, r0.wwww
    ret 
  else 
    mad r0.yw, v1.xxxy, l(0.000000, 2.000000, 0.000000, 2.000000), l(0.000000, 0.000000, 0.000000, -1.000000)
    sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.ywyy, t2.xyzw, s0
    add r1.xyz, r1.xyzx, l(-1.000000, -0.000000, -1.000000, 0.000000)
    mad r1.xyz, r3.zzzz, r1.xyzx, l(1.000000, 0.000000, 1.000000, 0.000000)
    div_sat r0.yzw, r4.xxyz, r0.zzzz
    movc o0.xyz, r0.xxxx, r1.xyzx, r0.yzwy
    ret 
  endif 
endif 
ret 
// Approximately 250 instruction slots used
