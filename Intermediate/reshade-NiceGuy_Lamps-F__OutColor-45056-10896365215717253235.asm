//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__TexColor                     texture  float4          2d             t4      1 
// __V__BGColorTex                   texture  float4          2d            t16      1 
// __V__BlendedTex                   texture  float4          2d            t20      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t20
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 3
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t20.xyzw, s0
add r1.xyz, -r0.xyzx, l(1.001000, 1.001000, 1.001000, 0.000000)
div r0.xyz, r0.xyzx, r1.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t4.xyzw, s0
add r2.xyz, -r1.xyzx, l(1.001000, 1.001000, 1.001000, 0.000000)
div r2.xyz, r1.xyzx, r2.xyzx
mad r0.xyz, r0.xyzx, r1.xyzx, r2.xyzx
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t16.xyzw, s0
add r0.xyz, r0.xyzx, r1.xyzx
add r1.xyz, r0.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r0.xyz, r0.xyzx, r1.xyzx
add o0.xyz, r1.wwww, r0.xyzx
ret 
// Approximately 13 instruction slots used
