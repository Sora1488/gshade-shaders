//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t4      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t6      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t4.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t6.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div_sat r0.w, r0.w, r1.x
mov r1.xy, l(0,6,0,0)
loop 
  ige r1.z, l(0), r1.y
  breakc_nz r1.z
  itof r1.z, r1.y
  mul r1.z, r1.z, l(1.047197)
  sincos r2.x, r3.x, r1.z
  mov r3.y, r2.x
  mad r1.zw, r3.xxxy, l(0.000000, 0.000000, 0.050000, 0.088889), l(0.000000, 0.000000, 0.500000, 0.500000)
  sample_l_indexable(texture2d)(float,float,float,float) r1.z, r1.zwzz, t6.yzxw, s0, l(0.000000)
  mad r1.w, -r1.z, l(999.000000), l(1000.000000)
  div r1.z, r1.z, r1.w
  add r1.x, r1.z, r1.x
  iadd r1.y, r1.y, l(-1)
endloop 
mul_sat r1.x, r1.x, l(0.166667)
mad r1.y, r1.x, l(-2.000000), l(3.000000)
mul r1.x, r1.x, r1.x
mul r1.x, r1.x, r1.y
mad r1.y, r0.w, l(-2.000000), l(3.000000)
mul r0.w, r0.w, r0.w
mul r1.z, r0.w, r1.y
lt r1.z, r1.z, r1.x
mad r0.w, r1.y, r0.w, -r1.x
div r1.y, r0.w, r1.x
mul r1.x, r1.x, l(15.000000)
div_sat r0.w, r0.w, r1.x
movc r0.w, r1.z, r1.y, r0.w
mad_sat o0.w, r0.w, l(0.500000), l(0.500000)
mov o0.xyz, r0.xyzx
ret 
// Approximately 35 instruction slots used
