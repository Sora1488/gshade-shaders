//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 6
dcl_indexableTemp x0[16], 4
mov x0[0].x, l(4194304.000000)
mov x0[1].x, l(131200.000000)
mov x0[2].x, l(324.000000)
mov x0[3].x, l(330.000000)
mov x0[4].x, l(283712.000000)
mov x0[5].x, l(12650880.000000)
mov x0[6].x, l(4532768.000000)
mov x0[7].x, l(13191552.000000)
mov x0[8].x, l(10648704.000000)
mov x0[9].x, l(11195936.000000)
mov x0[10].x, l(15218734.000000)
mov x0[11].x, l(15255086.000000)
mov x0[12].x, l(15252014.000000)
mov x0[13].x, l(32294446.000000)
mov x0[14].x, l(15324974.000000)
mov x0[15].x, l(11512810.000000)
mul r0.xy, v1.xyxx, l(320.000000, 180.000000, 0.000000, 0.000000)
round_z r0.zw, r0.xxxy
frc r0.xy, r0.xyxx
mul r0.xy, r0.xyxx, l(6.000000, 6.000000, 0.000000, 0.000000)
round_z r0.xy, r0.xyxx
mad r1.xyzw, r0.zwzw, l(0.003125, 0.005556, 0.003125, 0.005556), l(0.000781, 0.001389, 0.001823, 0.003241)
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xwxx, t0.xyzw, s0
add r2.xyz, r2.xyzx, r3.xyzx
mad r3.zw, r0.zzzw, l(0.000000, 0.000000, 0.003125, 0.005556), l(0.000000, 0.000000, 0.000781, 0.005093)
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zwzz, t0.xyzw, s0
add r2.xyz, r2.xyzx, r4.xyzx
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r1.zyzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.zwzz, t0.xyzw, s0
add r2.xyz, r2.xyzx, r4.xyzx
add r1.xyz, r1.xyzx, r2.xyzx
mul r3.xy, r0.zwzz, l(0.003125, 0.005556, 0.000000, 0.000000)
mad r2.xyzw, r0.zwzw, l(0.003125, 0.005556, 0.003125, 0.005556), l(0.002865, 0.001389, 0.002865, 0.003241)
add r4.xyzw, r3.xyxw, l(0.002865, 0.005093, 0.001823, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r4.zwzz, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r4.xyz, r4.xyxx, t0.xyzw, s0
add r1.xyz, r1.xyzx, r5.xyzx
sample_indexable(texture2d)(float,float,float,float) r5.xyz, r2.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.xyz, r2.zwzz, t0.xyzw, s0
add r1.xyz, r1.xyzx, r5.xyzx
add r1.xyz, r2.xyzx, r1.xyzx
add r1.xyz, r4.xyzx, r1.xyzx
mul r1.xyz, r1.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000)
dp3 r0.z, r1.xyzx, l(0.212600, 0.715200, 0.072200, 0.000000)
dp2 r0.w, r3.xyxx, l(12.989800, 78.233002, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mad r0.w, r0.w, l(43758.542969), r3.y
frc r0.w, r0.w
mad r0.z, r0.w, l(0.125000), r0.z
add r0.z, r0.z, l(-0.062500)
ge r1.xyzw, r0.zzzz, l(0.125000, 0.187500, 0.250000, 0.312500)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
dp4 r0.w, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ftoi r0.w, r0.w
ge r1.xyzw, r0.zzzz, l(0.375000, 0.437500, 0.500000, 0.562500)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
dp4 r1.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ftoi r1.x, r1.x
iadd r0.w, r0.w, r1.x
ge r1.xyzw, r0.zzzz, l(0.625000, 0.687500, 0.750000, 0.812500)
and r1.xyzw, r1.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
dp4 r1.x, r1.xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
ftoi r1.x, r1.x
iadd r0.w, r0.w, r1.x
ge r1.xyz, r0.zzzz, l(0.875000, 0.937500, 1.000000, 0.000000)
and r1.xyz, r1.xyzx, l(0x3f800000, 0x3f800000, 0x3f800000, 0)
dp3 r1.x, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
ftoi r1.x, r1.x
iadd r0.w, r0.w, r1.x
mov r0.w, x0[r0.w + 0].x
mad r1.x, r0.y, l(5.000000), r0.x
ne r0.xy, r0.xyxx, r0.xyxx
or r0.x, r0.y, r0.x
add r0.y, -r1.x, l(-1.000000)
exp r0.y, r0.y
mul r0.y, r0.y, r0.w
frc r0.y, r0.y
ge r0.y, r0.y, l(0.500000)
ge r0.w, l(0.062500), r0.z
movc r0.w, r0.w, l(0), l(1.000000)
and r0.y, r0.w, r0.y
ne r0.y, l(0.000000, 0.000000, 0.000000, 0.000000), r0.y
movc r0.x, r0.x, l(0), r0.y
and r0.x, r0.z, r0.x
mov_sat o0.xyz, r0.xxxx
ret 
// Approximately 87 instruction slots used
