//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Sigma0;                      // Offset:    0 Size:     4 [unused]
//   float Sigma1;                      // Offset:    4 Size:     4 [unused]
//   int Anisotropy;                    // Offset:    8 Size:     4
//   float EdgeThreshold;               // Offset:   12 Size:     4 [unused]
//   float EdgeStrength;                // Offset:   16 Size:     4 [unused]
//   bool QuantizeLuma;                 // Offset:   20 Size:     4 [unused]
//   int LevelCount;                    // Offset:   24 Size:     4 [unused]
//   bool IgnoreSky;                    // Offset:   28 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__BackBuffer                   texture  float4          2d             t4      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   x           0   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t4
dcl_input_ps linear v1.xy
dcl_output o0.x
dcl_temps 5
ieq r0.x, cb0[0].z, l(2)
if_nz r0.x
  resinfo_indexable(texture2d)(float,float,float,float) r0.xy, l(0), t4.xyzw
  mul r0.zw, r0.xxxy, v1.xxxy
  frc r1.xy, r0.zwzz
  round_ni r0.zw, r0.zzzw
  mul r1.zw, r1.xxxy, r1.xxxy
  mul r2.xy, r1.xyxx, r1.zwzz
  mad r2.zw, r1.zzzw, r1.xxxy, r1.xxxy
  mad r2.zw, -r2.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000), r1.zzzw
  mul r3.xy, r1.zwzz, l(2.500000, 2.500000, 0.000000, 0.000000)
  mad r2.xy, r2.xyxx, l(1.500000, 1.500000, 0.000000, 0.000000), -r3.xyxx
  add r2.xy, r2.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
  mad r1.xy, r1.zwzz, r1.xyxx, -r1.zwzz
  mul r1.xy, r1.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
  add r1.zw, -r2.zzzw, l(0.000000, 0.000000, 1.000000, 1.000000)
  add r1.zw, -r2.xxxy, r1.zzzw
  add r2.zw, r2.xxxy, r2.zzzw
  div r2.xy, r2.xyxx, r2.zwzz
  div r1.xy, r1.xyxx, r1.zwzz
  add r2.xy, r0.zwzz, r2.xyxx
  add r2.xy, r2.xyxx, l(-1.500000, -1.500000, 0.000000, 0.000000)
  add r0.zw, r0.zzzw, r1.xxxy
  add r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.500000, 0.500000)
  div r3.zw, r2.xxxy, r0.xxxy
  div r3.xy, r0.zwzz, r0.xyxx
  sample_indexable(texture2d)(float,float,float,float) r0.xyz, r3.zwzz, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xwxx, t4.xyzw, s0
  mul r4.xyz, r1.zzzz, r4.xyzx
  mad r0.xyz, r0.xyzx, r2.zzzz, r4.xyzx
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r3.zyzz, t4.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r3.xyxx, t4.xyzw, s0
  mul r1.xyz, r1.zzzz, r3.xyzx
  mad r1.xyz, r4.xyzx, r2.zzzz, r1.xyzx
  mul r1.xyz, r1.wwww, r1.xyzx
  mad r0.xyz, r0.xyzx, r2.wwww, r1.xyzx
  dp3 o0.x, r0.xyzx, l(0.299000, 0.587000, 0.114000, 0.000000)
else 
  discard_nz l(-1)
  mov o0.x, l(0)
endif 
ret 
// Approximately 42 instruction slots used
