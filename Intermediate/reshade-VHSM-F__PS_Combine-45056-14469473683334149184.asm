//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Timer;                       // Offset:    0 Size:     4
//   int TAPE_SELECT;                   // Offset:    4 Size:     4
//   int CHROMA_SHIFT;                  // Offset:    8 Size:     4
//   int SHIFT_MODE;                    // Offset:   12 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s1                              sampler      NA          NA             s1      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__TexBlur1                     texture  float4          2d            t10      1 
// __V__TexVHSLUTs                   texture  float4          2d            t14      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s1, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t14
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 6
itof r0.xy, cb0[0].zyzz
if_z cb0[0].w
  mad r1.x, r0.x, l(0.000020), v1.x
  mov r1.yw, v1.yyyy
  sample_indexable(texture2d)(float,float,float,float) r2.x, r1.xyxx, t10.xyzw, s1
  sample_indexable(texture2d)(float,float,float,float) r2.y, v1.xyxx, t10.xyzw, s1
  mad r1.z, -r0.x, l(0.000020), v1.x
  sample_indexable(texture2d)(float,float,float,float) r2.z, r1.zwzz, t10.xyzw, s1
else 
  ieq r0.z, cb0[0].w, l(1)
  if_nz r0.z
    mad r1.x, -r0.x, l(0.000020), v1.x
    mov r1.yw, v1.yyyy
    sample_indexable(texture2d)(float,float,float,float) r2.x, r1.xyxx, t10.xyzw, s1
    mad r1.z, r0.x, l(0.000020), v1.x
    sample_indexable(texture2d)(float,float,float,float) r2.y, r1.zwzz, t10.xyzw, s1
    sample_indexable(texture2d)(float,float,float,float) r2.z, v1.xyxx, t10.xyzw, s1
  else 
    ieq r0.z, cb0[0].w, l(2)
    if_nz r0.z
      sample_indexable(texture2d)(float,float,float,float) r2.x, v1.xyxx, t10.xyzw, s1
      mad r1.x, -r0.x, l(0.000020), v1.x
      mov r1.yw, v1.yyyy
      sample_indexable(texture2d)(float,float,float,float) r2.y, r1.xyxx, t10.xyzw, s1
      mad r1.z, r0.x, l(0.000020), v1.x
      sample_indexable(texture2d)(float,float,float,float) r2.z, r1.zwzz, t10.xyzw, s1
    else 
      mov r2.xyz, l(0,0,0,0)
    endif 
  endif 
endif 
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v1.xyxx, t10.xyzw, s1
dp3 r0.x, r1.xyzx, l(0.212395, 0.701049, 0.086556, 0.000000)
add r0.xzw, -r0.xxxx, r2.xxyz
add r0.xzw, r1.wwww, r0.xxzw
mad_sat r0.xzw, r0.xxzw, l(0.858824, 0.000000, 0.858824, 0.858824), l(0.062745, 0.000000, 0.062745, 0.062745)
log r0.xzw, r0.xxzw
mul r0.xzw, r0.xxzw, l(0.800000, 0.000000, 0.800000, 0.800000)
exp r0.xzw, r0.xxzw
mul r1.x, r0.w, l(31.000000)
mad r0.xz, r0.xxzx, l(31.000000, 0.000000, 31.000000, 0.000000), l(0.500000, 0.000000, 0.500000, 0.000000)
mul r0.xz, r0.xxzx, l(0.000977, 0.000000, 0.006250, 0.000000)
mad r2.y, r0.y, l(0.200000), r0.z
frc r0.y, r1.x
mad r0.z, r0.w, l(31.000000), -r0.y
mad r2.x, r0.z, l(0.031250), r0.x
sample_indexable(texture2d)(float,float,float,float) r0.xzw, r2.xyxx, t14.xwyz, s2
add r2.z, r2.x, l(0.031250)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r2.zyzz, t14.xyzw, s2
add r1.xyz, -r0.xzwx, r1.xyzx
mad r0.xyz, r0.yyyy, r1.xyzx, r0.xzwx
add r1.xy, v1.xyxx, cb0[0].xxxx
dp2 r0.w, r1.xyxx, l(25.979601, 156.466003, 0.000000, 0.000000)
sincos r0.w, null, r0.w
mul r0.w, r0.w, l(43758.542969)
frc r1.z, r0.w
mov r1.xy, v1.xyxx
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r0.w, r1.x, l(34.000000), l(1.000000)
mul r0.w, r1.x, r0.w
mul r1.x, r0.w, l(289.000000)
ge r1.x, r1.x, -r1.x
movc r1.xw, r1.xxxx, l(289.000000,0,0,0.003460), l(-289.000000,0,0,-0.003460)
mul r0.w, r0.w, r1.w
frc r0.w, r0.w
mad r0.w, r1.x, r0.w, r1.y
mad r1.x, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, l(289.000000)
ge r1.x, r1.x, -r1.x
movc r1.xy, r1.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r1.y
frc r0.w, r0.w
mad r0.w, r1.x, r0.w, r1.z
mad r1.x, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, l(289.000000)
ge r1.x, r1.x, -r1.x
movc r1.xy, r1.xxxx, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r1.y
frc r0.w, r0.w
mul r0.w, r0.w, r1.x
mul r1.x, r0.w, l(0.024390)
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r2.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r2.y
frc r0.w, r0.w
mul r0.w, r0.w, r2.x
mul r1.w, r0.w, l(0.024390)
frc r2.x, r1.w
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r1.w, r0.w, l(0.024390)
frc r1.xy, r1.xwxx
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r1.w, r0.w, l(0.024390)
frc r2.y, r1.w
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r1.w, r0.w, l(0.024390)
frc r1.z, r1.w
mad r1.w, r0.w, l(34.000000), l(1.000000)
mul r0.w, r0.w, r1.w
mul r1.w, r0.w, l(289.000000)
ge r1.w, r1.w, -r1.w
movc r3.xy, r1.wwww, l(289.000000,0.003460,0,0), l(-289.000000,-0.003460,0,0)
mul r0.w, r0.w, r3.y
frc r0.w, r0.w
mul r0.w, r0.w, r3.x
mul r0.w, r0.w, l(0.024390)
frc r2.z, r0.w
mul_sat r3.xyz, r0.xyzx, l(509.999969, 509.999969, 509.999969, 0.000000)
add r4.xyz, r0.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)
mul_sat r4.xyz, r4.xyzx, l(-509.992279, -509.992279, -509.992279, 0.000000)
add r5.xyz, r1.xyzx, l(-0.500000, -0.500000, -0.500000, 0.000000)
add r1.xyz, r1.xyzx, -r2.xyzx
min r2.xyz, r3.xyzx, r4.xyzx
add r1.xyz, -r5.xyzx, r1.xyzx
mad r1.xyz, r2.xyzx, r1.xyzx, r5.xyzx
mad o0.xyz, r1.xyzx, l(0.003922, 0.003922, 0.003922, 0.000000), r0.xyzx
ret 
// Approximately 143 instruction slots used
