//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float uSigma;                      // Offset:    0 Size:     4
//   float uThreshold;                  // Offset:    4 Size:     4
//   float uKSigma;                     // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
mul r0.xyz, cb0[0].xxyx, cb0[0].zxyz
round_ne r0.x, r0.x
div r0.yz, l(0.000000, 0.500000, 0.500000, 0.000000), r0.yyzy
mul r0.w, r0.y, l(0.318310)
div r1.x, l(0.398942), cb0[0].y
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t0.xyzw, s0
mov r3.xyzw, l(0,0,0,0)
mov r1.y, l(0)
mov r4.x, -r0.x
loop 
  lt r1.z, r0.x, r4.x
  breakc_nz r1.z
  mul r1.z, r4.x, r4.x
  mad r1.z, r0.x, r0.x, -r1.z
  sqrt r1.z, r1.z
  mov r5.xyzw, r3.xyzw
  mov r1.w, r1.y
  mov r4.y, -r1.z
  loop 
    lt r4.z, r1.z, r4.y
    breakc_nz r4.z
    mad r4.zw, r4.xxxy, l(0.000000, 0.000000, 0.000521, 0.000926), v1.xxxy
    sample_l_indexable(texture2d)(float,float,float,float) r6.xyzw, r4.zwzz, t0.xyzw, s0, l(0.000000)
    add r7.xyzw, -r2.xyzw, r6.xyzw
    dp4 r4.z, r7.xyzw, r7.xyzw
    mul r4.z, r0.z, -r4.z
    mul r4.z, r4.z, l(1.442695)
    exp r4.z, r4.z
    mul r4.z, r1.x, r4.z
    dp2 r4.w, r4.xyxx, r4.xyxx
    mul r4.w, r0.y, -r4.w
    mul r4.w, r4.w, l(1.442695)
    exp r4.w, r4.w
    mul r4.w, r0.w, r4.w
    mul r7.x, r4.w, r4.z
    mad r1.w, r4.z, r4.w, r1.w
    mad r5.xyzw, r7.xxxx, r6.xyzw, r5.xyzw
    add r4.y, r4.y, l(1.000000)
  endloop 
  mov r3.xyzw, r5.xyzw
  mov r1.y, r1.w
  add r4.x, r4.x, l(1.000000)
endloop 
div o0.xyzw, r3.xyzw, r1.yyyy
ret 
// Approximately 45 instruction slots used
