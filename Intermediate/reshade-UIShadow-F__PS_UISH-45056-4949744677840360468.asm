//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
mov r0.zw, l(0,0,0,0)
mul r1.xy, v1.xyxx, l(1920.000000, 1080.000000, 0.000000, 0.000000)
ftoi r1.xy, r1.xyxx
iadd r2.xyzw, r1.xyxy, l(1, -1, -1, 1)
mov r0.xy, r2.zwzz
ld_indexable(texture2d)(float,float,float,float) r0.x, r0.xyzw, t0.wxyz
add r3.xyzw, v1.xyxy, l(-0.000260, -0.000463, 0.000260, 0.000463)
gather4_indexable(texture2d)(float,float,float,float) r0.yzw, r3.xyxx, t0.yxzw, s0.w
gather4_indexable(texture2d)(float,float,float,float) r3.xyz, r3.zwzz, t0.xyzw, s0.w
max r0.xy, r0.xzxx, r0.wyww
max r0.x, r0.x, r0.y
mov r2.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r2.xyzw, t0.xwyz
max r0.y, r0.y, r3.z
max r0.z, r3.y, r3.x
max r0.y, r0.y, r0.z
max r0.x, r0.x, r0.y
ge r0.x, r0.x, l(1.000000)
mov r1.zw, l(0,0,0,0)
ld_indexable(texture2d)(float,float,float,float) r0.y, r1.xyzw, t0.xwyz
lt r0.y, r0.y, l(1.000000)
and r0.x, r0.x, r0.y
and o0.x, r0.x, l(0x3f800000)
mov o0.yzw, l(0,0,0,0)
ret 
// Approximately 25 instruction slots used
