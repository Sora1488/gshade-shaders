//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__Spatial_IIR_Bilateral__BackBuffer    texture  float4          2d             t0      1 
// V__Spatial_IIR_Bilateral__wTemp1        UAV  float4          2d             u1      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_resource_texture2d (float,float,float,float) t0
dcl_uav_typed_texture2d (float,float,float,float) u1
dcl_input vThreadID.xy
dcl_temps 8
dcl_thread_group 1, 64, 1
ult r0.x, vThreadID.x, l(15)
if_nz r0.x
  ishl r0.x, vThreadID.x, l(7)
  utof r0.x, r0.x
  utof r0.y, vThreadID.y
  add r0.xyz, r0.xyxx, l(0.500000, 0.500000, -31.500000, 0.000000)
  ftoi r1.yz, r0.zzyz
  mov r1.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r1.yzww, t0.xyzw
  ftoi r3.y, r0.y
  mov r3.zw, l(0,0,0,0)
  mov r0.yzw, r2.xxyz
  mov r1.y, l(-31)
  loop 
    ige r1.w, r1.y, l(128)
    breakc_nz r1.w
    itof r1.w, r1.y
    add r1.w, r0.x, r1.w
    ftoi r3.x, r1.w
    ld_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyzw, t0.xyzw
    add r5.xyz, -r0.yzwy, r4.xyzx
    add r5.xyz, -|r5.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r5.xyz, |r5.xyzx|, |r5.xyzx|
    mul r6.xyz, r5.xyzx, r5.xyzx
    mul r5.xyz, r5.xyzx, r6.xyzx
    mul r6.xyz, r6.xyzx, r6.xyzx
    mul r5.xyz, r5.xyzx, r6.xyzx
    mul r6.xyz, r6.xyzx, r6.xyzx
    mul r5.xyz, r5.xyzx, r6.xyzx
    add r6.xyz, r0.yzwy, -r4.xyzx
    mad r0.yzw, r5.xxyz, r6.xxyz, r4.xxyz
    ige r2.w, r1.y, l(0)
    lt r3.x, r1.w, l(1920.000000)
    and r2.w, r2.w, r3.x
    if_nz r2.w
      ftoi r1.x, r1.w
      store_uav_typed u1.xyzw, r1.xzzz, r0.yzwy
    endif 
    iadd r1.y, r1.y, l(1)
  endloop 
else 
  ishl r0.x, vThreadID.x, l(7)
  iadd r0.x, r0.x, l(-1792)
  utof r0.x, r0.x
  utof r0.y, vThreadID.y
  add r0.xyzw, r0.xyxx, l(0.500000, 0.500000, 32.500000, 1920.500000)
  ftoi r1.yz, r0.zzyz
  mov r1.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r1.yzww, t0.xyzw
  ftoi r3.y, r0.y
  mov r3.zw, l(0,0,0,0)
  mov r4.xyz, r2.xyzx
  mov r0.y, l(31)
  loop 
    ige r0.z, l(-128), r0.y
    breakc_nz r0.z
    itof r0.z, r0.y
    add r1.y, r0.z, r0.x
    ftoi r3.x, r1.y
    ld_indexable(texture2d)(float,float,float,float) r5.xyz, r3.xyzw, t0.xyzw
    add r6.xyz, -r4.xyzx, r5.xyzx
    add r6.xyz, -|r6.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    mul r6.xyz, |r6.xyzx|, |r6.xyzx|
    mul r7.xyz, r6.xyzx, r6.xyzx
    mul r6.xyz, r6.xyzx, r7.xyzx
    mul r7.xyz, r7.xyzx, r7.xyzx
    mul r6.xyz, r6.xyzx, r7.xyzx
    mul r7.xyz, r7.xyzx, r7.xyzx
    mul r6.xyz, r6.xyzx, r7.xyzx
    add r7.xyz, r4.xyzx, -r5.xyzx
    mad r4.xyz, r6.xyzx, r7.xyzx, r5.xyzx
    ige r1.y, l(0), r0.y
    if_nz r1.y
      add r0.z, r0.z, r0.w
      ftoi r1.x, r0.z
      store_uav_typed u1.xyzw, r1.xzzz, r4.xyzx
    endif 
    iadd r0.y, r0.y, l(-1)
  endloop 
endif 
ret 
// Approximately 81 instruction slots used
