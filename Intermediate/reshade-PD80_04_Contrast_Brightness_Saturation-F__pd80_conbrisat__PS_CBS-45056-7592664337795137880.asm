//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float2 pp;                         // Offset:    0 Size:     8
//   bool enable_dither;                // Offset:    8 Size:     4
//   float dither_strength;             // Offset:   12 Size:     4
//   float tint;                        // Offset:   16 Size:     4
//   float exposureN;                   // Offset:   20 Size:     4
//   float contrast;                    // Offset:   24 Size:     4
//   float brightness;                  // Offset:   28 Size:     4
//   float saturation;                  // Offset:   32 Size:     4
//   float vibrance;                    // Offset:   36 Size:     4
//   float huemid;                      // Offset:   40 Size:     4
//   float huerange;                    // Offset:   44 Size:     4
//   float sat_custom;                  // Offset:   48 Size:     4
//   float sat_r;                       // Offset:   52 Size:     4
//   float sat_y;                       // Offset:   56 Size:     4
//   float sat_g;                       // Offset:   60 Size:     4
//   float sat_a;                       // Offset:   64 Size:     4
//   float sat_b;                       // Offset:   68 Size:     4
//   float sat_p;                       // Offset:   72 Size:     4
//   float sat_m;                       // Offset:   76 Size:     4
//   bool enable_depth;                 // Offset:   80 Size:     4
//   bool display_depth;                // Offset:   84 Size:     4
//   float depthStart;                  // Offset:   88 Size:     4
//   float depthEnd;                    // Offset:   92 Size:     4
//   float depthCurve;                  // Offset:   96 Size:     4
//   float exposureD;                   // Offset:  100 Size:     4
//   float contrastD;                   // Offset:  104 Size:     4
//   float brightnessD;                 // Offset:  108 Size:     4
//   float saturationD;                 // Offset:  112 Size:     4
//   float vibranceD;                   // Offset:  116 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__texNoiseRGB                  texture  float4          2d             t6      1 
// __V__texGaussNoise                texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 9
add r0.x, cb0[0].x, l(6.000000)
mul r0.yz, v1.xxyx, l(0.000000, 3.750000, 2.109375, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, r0.yzyy, t6.xyzw, s1
sample_indexable(texture2d)(float,float,float,float) r0.y, r0.yzyy, t8.yxzw, s1
frc r0.y, r0.y
mad r0.y, r0.y, l(2.000000), l(-1.000000)
mad r0.xzw, r0.xxxx, l(0.618034, 0.000000, 0.618034, 0.618034), r1.xxyz
frc r0.xzw, r0.xxzw
mad r0.xzw, r0.xxzw, l(2.000000, 0.000000, 2.000000, 2.000000), l(-1.000000, 0.000000, -1.000000, -1.000000)
mul r0.xzw, r0.xxzw, l(0.500000, 0.000000, 0.500000, 0.500000)
mul r1.x, cb0[0].w, l(0.003922)
mul r0.xzw, r0.xxzw, r1.xxxx
movc r0.xzw, cb0[0].zzzz, r0.xxzw, l(0,0,0,0)
sample_indexable(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s0
add_sat r0.xzw, r0.xxzw, r1.xxyz
dp3 r1.x, r0.xwzx, l(0.333333, 0.333333, 0.333334, 0.000000)
add r1.yzw, r1.xxxx, l(0.000000, 0.457333, 0.065333, -0.522667)
add r2.xyz, r1.xxxx, l(-0.455000, -0.090000, 0.545000, 0.000000)
dp3 r1.x, r1.ywzy, l(0.333333, 0.333333, 0.333334, 0.000000)
add r3.xyz, -r1.xxxx, r1.yzwy
mul r3.xyz, r1.xxxx, r3.xyzx
min r2.w, r1.z, r1.y
min r2.w, r1.w, r2.w
add r3.w, r1.x, -r2.w
lt r2.w, r2.w, l(0.000000)
div r3.xyz, r3.xyzx, r3.wwww
add r3.xyz, r1.xxxx, r3.xyzx
movc r3.xyz, r2.wwww, r3.xyzx, r1.yzwy
add r4.xyz, -r1.xxxx, r3.xyzx
add r2.w, -r1.x, l(1.000000)
mul r4.xyz, r2.wwww, r4.xyzx
max r1.y, r1.z, r1.y
max r1.y, r1.w, r1.y
add r1.z, -r1.x, r1.y
lt r1.y, l(1.000000), r1.y
div r4.xyz, r4.xyzx, r1.zzzz
add r1.xzw, r1.xxxx, r4.xxyz
movc r1.xyz, r1.yyyy, r1.xzwx, r3.xyzx
add r1.xyz, -r0.xzwx, r1.xyzx
mad r1.xyz, cb0[1].xxxx, r1.xyzx, r0.xzwx
dp3 r1.w, r2.xzyx, l(0.333333, 0.333333, 0.333334, 0.000000)
add r3.xyz, -r1.wwww, r2.xyzx
mul r3.xyz, r1.wwww, r3.xyzx
min r2.w, r2.y, r2.x
add r3.w, r1.w, -r2.w
lt r2.w, r2.w, l(0.000000)
div r3.xyz, r3.xyzx, r3.wwww
add r3.xyz, r1.wwww, r3.xyzx
movc r3.xyz, r2.wwww, r3.xyzx, r2.xyzx
add r4.xyz, -r1.wwww, r3.xyzx
add r2.w, -r1.w, l(1.000000)
mul r4.xyz, r2.wwww, r4.xyzx
max r2.x, r2.y, r2.x
max r2.x, r2.z, r2.x
add r2.y, -r1.w, r2.x
lt r2.x, l(1.000000), r2.x
div r2.yzw, r4.xxyz, r2.yyyy
add r2.yzw, r1.wwww, r2.yyzw
movc r2.xyz, r2.xxxx, r2.yzwy, r3.xyzx
add r2.xyz, -r0.xzwx, r2.xyzx
mad r0.xzw, |cb0[1].xxxx|, r2.xxyz, r0.xxzw
lt r2.xyzw, cb0[1].xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
movc r0.xzw, r2.xxxx, r0.xxzw, r1.xxyz
add r1.xyz, -r0.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
lt r3.xyz, cb0[6].yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.xyz, cb0[6].yzwy, l(0.333000, 0.500000, 0.500000, 0.000000)
movc r3.xyz, r3.xyzx, r4.xyzx, cb0[6].yzwy
mad r4.xyz, r3.xxxx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul_sat r4.xyz, r0.xzwx, r4.xyzx
add r5.xyz, -r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r6.xyz, r4.xyzx, r4.xyzx
mul r5.xyz, r5.xyzx, r6.xyzx
sqrt r7.xyz, r4.xyzx
mad r8.xyz, r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r5.xyz, r7.xyzx, r8.xyzx, r5.xyzx
mul r7.xyz, r4.xyzx, r4.xyzx
mad r8.xyz, -r4.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mul r7.xyz, r7.xyzx, r8.xyzx
mad r6.xyz, r6.xyzx, r4.xyzx, r7.xyzx
lt r7.xyz, r4.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
movc r5.xyz, r7.xyzx, r6.xyzx, r5.xyzx
add r5.xyz, -r4.xyzx, r5.xyzx
mad_sat r3.xyw, r3.yyyy, r5.xyxz, r4.xyxz
add r4.xyz, -r3.xywx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r4.xyz, -r4.xyzx, r4.xyzx, -r3.xywx
add r4.xyz, r4.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad_sat r3.xyz, r3.zzzz, r4.xyzx, r3.xywx
dp3 r1.w, r3.xyzx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r3.xyz, -r1.wwww, r3.xyzx
add r2.x, cb0[7].x, l(1.000000)
mad_sat r3.xyz, r2.xxxx, r3.xyzx, r1.wwww
min r1.w, r3.y, r3.x
min r1.w, r3.z, r1.w
max r2.x, r3.y, r3.x
max r2.x, r3.z, r2.x
add r1.w, -r1.w, r2.x
add r1.w, -r1.w, l(1.000000)
mad r1.w, cb0[7].y, r1.w, l(1.000000)
dp3 r2.x, r3.xyzx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r3.xyz, -r2.xxxx, r3.xyzx
mad_sat r3.xyz, r1.wwww, r3.xyzx, r2.xxxx
mul r4.xyz, cb0[1].yzwy, l(0.333000, 0.500000, 0.500000, 0.000000)
movc r2.xyz, r2.yzwy, r4.xyzx, cb0[1].yzwy
mad r1.xyz, r2.xxxx, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul_sat r0.xzw, r0.xxzw, r1.xxyz
add r1.xyz, -r0.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r4.xyz, r0.xzwx, r0.xzwx
mul r1.xyz, r1.xyzx, r4.xyzx
sqrt r5.xyz, r0.xzwx
mad r6.xyz, r0.xzwx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
mad r1.xyz, r5.xyzx, r6.xyzx, r1.xyzx
mul r5.xyz, r0.xzwx, r0.xzwx
mad r6.xyz, -r0.xzwx, l(2.000000, 2.000000, 2.000000, 0.000000), l(1.000000, 1.000000, 1.000000, 0.000000)
mul r5.xyz, r5.xyzx, r6.xyzx
mad r4.xyz, r4.xyzx, r0.xzwx, r5.xyzx
lt r5.xyz, r0.xzwx, l(0.500000, 0.500000, 0.500000, 0.000000)
movc r1.xyz, r5.xyzx, r4.xyzx, r1.xyzx
add r1.xyz, -r0.xzwx, r1.xyzx
mad_sat r0.xzw, r2.yyyy, r1.xxyz, r0.xxzw
add r1.xyz, -r0.xzwx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad r1.xyz, -r1.xyzx, r1.xyzx, -r0.xzwx
add r1.xyz, r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mad_sat r0.xzw, r2.zzzz, r1.xxyz, r0.xxzw
dp3 r1.x, r0.xzwx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r0.xzw, r0.xxzw, -r1.xxxx
add r1.y, cb0[2].x, l(1.000000)
mad_sat r0.xzw, r1.yyyy, r0.xxzw, r1.xxxx
min r1.x, r0.z, r0.x
min r1.x, r0.w, r1.x
max r1.y, r0.z, r0.x
max r1.y, r0.w, r1.y
add r1.x, -r1.x, r1.y
add r1.x, -r1.x, l(1.000000)
mad r1.x, cb0[2].y, r1.x, l(1.000000)
dp3 r1.y, r0.xzwx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r0.xzw, r0.xxzw, -r1.yyyy
mad_sat r0.xzw, r1.xxxx, r0.xxzw, r1.yyyy
add r1.xyz, -r0.xzwx, r3.xyzx
sample_l_indexable(texture2d)(float,float,float,float) r1.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r2.x, -r1.w, l(999.000000), l(1000.000000)
div r1.w, r1.w, r2.x
add r1.w, r1.w, -cb0[5].z
add r2.x, -cb0[5].z, cb0[5].w
div r2.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
mul_sat r1.w, r1.w, r2.x
mad r2.x, r1.w, l(-2.000000), l(3.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, r2.x
log r1.w, r1.w
mul r1.w, r1.w, cb0[6].x
exp r1.w, r1.w
mad_sat r0.y, r0.y, l(0.003922), r1.w
movc r1.w, cb0[5].x, l(1.000000), l(0)
mul r1.w, r0.y, r1.w
mad r0.xzw, r1.wwww, r1.xxyz, r0.xxzw
dp3 r1.x, r0.xzwx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r1.yzw, r0.xxzw, -r1.xxxx
max r2.xyw, r0.zwzx, l(0.000001, 0.000001, 0.000000, 0.000001)
lt r0.x, r2.x, r2.y
mov r3.xy, r2.yxyy
mov r4.xy, r3.yxyy
mov r3.zw, l(0,0,-1.000000,0.666667)
mov r4.zw, l(0,0,0,-0.333333)
movc r3.xyzw, r0.xxxx, r3.xyzw, r4.xyzw
lt r0.x, r2.w, r3.x
mov r2.xyz, r3.xywx
mov r3.xyw, r2.wywx
movc r2.xyzw, r0.xxxx, r2.xyzw, r3.xyzw
min r0.x, r2.y, r2.w
add r0.x, -r0.x, r2.x
mad r0.x, r0.x, l(6.000000), l(0.000001)
add r0.z, -r2.y, r2.w
div r0.x, r0.z, r0.x
add r0.x, r2.z, r0.x
mad r0.z, -|r0.x|, l(6.000000), l(1.000000)
max r0.z, r0.z, l(0.000000)
mul r0.w, r0.z, r0.z
mad r0.z, -r0.z, l(2.000000), l(3.000000)
add r2.xyzw, |r0.xxxx|, l(-1.000000, -0.166667, -0.333333, -0.500000)
mul r3.xyzw, r2.xyzw, l(6.000000, 6.000000, 6.000000, 6.000000)
add r2.x, r2.x, -cb0[2].z
add r3.xyzw, -|r3.xyzw|, l(1.000000, 1.000000, 1.000000, 1.000000)
max r3.xyzw, r3.xyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r4.xyzw, r3.xyzw, r3.xyzw
mad r3.xyzw, -r3.xyzw, l(2.000000, 2.000000, 2.000000, 2.000000), l(3.000000, 3.000000, 3.000000, 3.000000)
mul r3.xyzw, r3.xyzw, r4.xyzw
mad r0.z, r0.w, r0.z, r3.x
mad r0.z, cb0[3].y, r0.z, l(1.000000)
max r0.z, r0.z, l(0.000000)
min r0.z, r0.z, l(2.000000)
mul r1.yzw, r1.yyzw, r0.zzzz
mad r0.zw, cb0[3].zzzw, r3.yyyz, l(0.000000, 0.000000, 1.000000, 1.000000)
mad r2.y, cb0[4].x, r3.w, l(1.000000)
max r2.y, r2.y, l(0.000000)
min r2.y, r2.y, l(2.000000)
max r0.zw, r0.zzzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r0.zw, r0.zzzw, l(0.000000, 0.000000, 2.000000, 2.000000)
mul r1.yzw, r1.yyzw, r0.zzzz
mul r1.yzw, r0.wwww, r1.yyzw
mul r1.yzw, r1.yyzw, r2.yyyy
add r2.yzw, |r0.xxxx|, l(0.000000, -0.666667, -0.750000, -0.833333)
add r0.x, |r0.x|, -cb0[2].z
mul r2.yzw, r2.yyzw, l(0.000000, 6.000000, 6.000000, 6.000000)
add r2.yzw, -|r2.yyzw|, l(0.000000, 1.000000, 1.000000, 1.000000)
max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
mul r3.xyz, r2.yzwy, r2.yzwy
mad r2.yzw, -r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000), l(0.000000, 3.000000, 3.000000, 3.000000)
mul r2.yzw, r2.yyzw, r3.xxyz
mad r2.yzw, cb0[4].yyzw, r2.yyzw, l(0.000000, 1.000000, 1.000000, 1.000000)
max r2.yzw, r2.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)
min r2.yzw, r2.yyzw, l(0.000000, 2.000000, 2.000000, 2.000000)
mul r1.yzw, r1.yyzw, r2.yyyy
mul r1.yzw, r1.yyzw, r2.zzzz
mad_sat r1.xyz, r2.wwww, r1.yzwy, r1.xxxx
dp3 r0.z, r1.xyzx, l(0.212656, 0.715158, 0.072186, 0.000000)
add r1.xyz, -r0.zzzz, r1.xyzx
rcp r0.w, cb0[2].w
mul r1.w, r0.w, r2.x
add r1.w, -|r1.w|, l(1.000000)
max r2.z, r1.w, l(0.000000)
add r1.w, r0.x, l(1.000000)
mul r0.x, r0.w, r0.x
mul r0.w, r0.w, r1.w
add r0.xw, -|r0.xxxw|, l(1.000000, 0.000000, 0.000000, 1.000000)
max r2.xy, r0.xwxx, l(0.000000, 0.000000, 0.000000, 0.000000)
dp3 r0.x, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
mul r0.w, r0.x, r0.x
mad r0.x, -r0.x, l(2.000000), l(3.000000)
mul r0.x, r0.x, r0.w
mad r0.x, r0.x, cb0[3].x, l(1.000000)
max r0.x, r0.x, l(0.000000)
min r0.x, r0.x, l(2.000000)
mad_sat r0.xzw, r0.xxxx, r1.xxyz, r0.zzzz
movc o0.xyz, cb0[5].yyyy, r0.yyyy, r0.xzwx
mov o0.w, l(1.000000)
ret 
// Approximately 236 instruction slots used
