//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__Copyright_Texture_Gauss_Out    texture  float4          2d            t10      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { 0, 0.132980, 0, 0},
                              { 1.458430, 0.232276, 0, 0},
                              { 3.403985, 0.135326, 0, 0},
                              { 5.351806, 0.051156, 0, 0},
                              { 7.302941, 0.012539, 0, 0},
                              { 9.258160, 0.001991, 0, 0} }
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 2
sample_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t10.wxyz, s0
mul r0.x, r0.x, l(0.132980)
mov r1.y, l(0)
mov r0.y, r0.x
mov r0.z, l(1)
loop 
  ige r0.w, r0.z, l(6)
  breakc_nz r0.w
  mul r1.x, l(0.000157), icb[r0.z + 0].x
  add r1.zw, r1.xxxy, v1.xxxy
  sample_l_indexable(texture2d)(float,float,float,float) r0.w, r1.zwzz, t10.xyzw, s0, l(0.000000)
  mad r0.w, r0.w, icb[r0.z + 0].y, r0.y
  add r1.xz, -r1.xxyx, v1.xxyx
  sample_l_indexable(texture2d)(float,float,float,float) r1.x, r1.xzxx, t10.wxyz, s0, l(0.000000)
  mad r0.y, r1.x, icb[r0.z + 0].y, r0.w
  iadd r0.z, r0.z, l(1)
endloop 
mov o0.w, r0.y
mov o0.xyz, l(0,0,0,0)
ret 
// Approximately 20 instruction slots used
