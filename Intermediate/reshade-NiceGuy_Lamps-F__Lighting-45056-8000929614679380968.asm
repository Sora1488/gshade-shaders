//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Frame;                       // Offset:    0 Size:     4
//   int Hints;                         // Offset:    4 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__LampIcon                     texture  float4          2d             t6      1 
// __V__NormTex                      texture  float4          2d             t8      1 
// __V__NGLa_BlueNoise               texture  float4          2d            t24      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
// SV_TARGET                2   x           2   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t6
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t24
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_output o1.xyzw
dcl_output o2.x
dcl_temps 8
mad r0.xy, v1.xyxx, l(2.000000, 2.000000, 0.000000, 0.000000), l(-1.000000, -1.000000, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, v1.xyxx, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
div r0.z, r0.z, r0.w
mul r1.xw, r0.zzzz, l(523.598816, 0.000000, 0.000000, 1000.000000)
mul r1.xy, r0.xyxx, r1.xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v1.xyxx, t8.xyzw, s0
mul r1.z, r1.x, l(1.777778)
mul r3.xyz, r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000)
dp3 r0.w, r1.zywz, r3.xyzx
rsq r0.w, r0.w
mul r4.xyz, r0.wwww, r3.xyzx
dp3 r0.w, r2.xyzx, -r4.xyzx
mul r1.z, r2.w, r2.w
mad r5.xyz, r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), l(-0.000000, -0.000000, -31.250000, 0.000000)
dp3 r2.w, r5.xyzx, r5.xyzx
div r2.w, l(1.000000, 1.000000, 1.000000, 1.000000), r2.w
mad r5.xyz, -r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), l(0.000000, 0.000000, 31.250000, 0.000000)
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r6.xyz, r3.wwww, r5.xyzx
mad r5.xyz, r5.xyzx, r3.wwww, -r4.xyzx
dp3 r3.w, r5.xyzx, r5.xyzx
rsq r3.w, r3.w
mul r5.xyz, r3.wwww, r5.xyzx
dp3 r3.w, r2.xyzx, r5.xyzx
dp3 r4.x, -r4.xyzx, r5.xyzx
dp3 r4.y, r2.xyzx, r6.xyzx
dp3 r2.x, -r6.xyzx, r2.xyzx
lt r2.x, l(0.000000), r2.x
if_nz r2.x
  mul r5.xyzw, v1.xyxy, l(1920.000000, 1080.000000, 245760.000000, 138240.000000)
  ge r6.xyzw, r5.zwzw, -r5.zwzw
  movc r6.xyzw, r6.xyzw, l(128.000000,128.000000,0.007812,0.007812), l(-128.000000,-128.000000,-0.007812,-0.007812)
  mul r2.yz, r5.xxyx, r6.zzwz
  frc r2.yz, r2.yyzy
  mul r4.z, cb0[0].x, l(64.000000)
  ge r4.z, r4.z, -r4.z
  movc r4.zw, r4.zzzz, l(0,0,64.000000,0.015625), l(0,0,-64.000000,-0.015625)
  mul r4.w, r4.w, cb0[0].x
  frc r4.w, r4.w
  mul r4.z, r4.w, r4.z
  mul r5.xy, r4.zzzz, l(8.000000, 0.125000, 0.000000, 0.000000)
  ge r4.w, r5.x, -r5.x
  movc r5.xz, r4.wwww, l(8.000000,0,0.125000,0), l(-8.000000,0,-0.125000,0)
  mul r4.z, r4.z, r5.z
  frc r4.z, r4.z
  mul r4.z, r4.z, r5.x
  ftoi r7.x, r4.z
  round_ni r4.z, r5.y
  mul r4.w, r4.z, l(8.000000)
  ge r4.w, r4.w, -r4.w
  movc r5.xy, r4.wwww, l(8.000000,0.125000,0,0), l(-8.000000,-0.125000,0,0)
  mul r4.z, r4.z, r5.y
  frc r4.z, r4.z
  mul r4.z, r4.z, r5.x
  ftoi r7.y, r4.z
  ishl r4.zw, r7.xxxy, l(0, 0, 7, 7)
  itof r4.zw, r4.zzzw
  mad r2.yz, r6.xxyx, r2.yyzy, r4.zzwz
  mul r2.yz, r2.yyzy, l(0.000000, 0.000977, 0.000977, 0.000000)
  sample_indexable(texture2d)(float,float,float,float) r2.y, r2.yzyy, t24.yxzw, s1
  sample_l_indexable(texture2d)(float,float,float,float) r2.z, l(0.500000, 0.500000, 0.000000, 0.000000), t2.yzxw, s0, l(0.000000)
  mad r4.z, -r2.z, l(999.000000), l(1000.000000)
  div r2.z, r2.z, r4.z
  ge r2.z, r2.z, l(31.250000)
  if_nz r2.z
    min r5.x, r0.z, l(31.250000)
  else 
    mov r5.x, l(31.250000)
  endif 
  mov r5.y, l(0)
  mad r6.xyz, -r1.xywx, l(1.777778, 1.000000, 1.000000, 0.000000), r5.yyxy
  dp3 r2.z, r6.xyzx, r6.xyzx
  rsq r2.z, r2.z
  mul r6.xyz, r2.zzzz, r6.xyzx
  mad r1.xyw, r1.xyxw, l(1.777778, 1.000000, 0.000000, 1.000000), -r5.yyyx
  dp3 r1.x, r1.xywx, r1.xywx
  sqrt r1.x, r1.x
  min r1.x, r1.x, l(1000.000000)
  mul r1.x, r1.x, l(0.062500)
  mul r5.xyz, r1.xxxx, r6.xyzx
  add r1.y, r2.y, l(1.000000)
  mad r3.xyz, r5.xyzx, r1.yyyy, r3.xyzx
  mov r1.yw, l(0,0,0,0)
  mov r5.xyz, r3.xyzx
  loop 
    ge r2.y, r1.y, l(16.000000)
    breakc_nz r2.y
    mul r2.y, r5.z, l(0.523599)
    mul r4.zw, r5.xxxy, l(0.000000, 0.000000, 0.562500, 1.000000)
    div r2.yz, r4.zzwz, r2.yyyy
    mad r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000), l(0.000000, 0.500000, 0.500000, 0.000000)
    sample_l_indexable(texture2d)(float,float,float,float) r2.y, r2.yzyy, t2.yxzw, s0, l(0.000000)
    mad r2.z, -r2.y, l(999.000000), l(1000.000000)
    div r2.y, r2.y, r2.z
    mad r2.y, r2.y, l(1000.000000), -r5.z
    lt r2.z, r2.y, l(0.000000)
    lt r2.y, l(-3.000000), r2.y
    and r2.y, r2.y, r2.z
    if_nz r2.y
      mov r1.w, l(1.000000)
      break 
    endif 
    mad r5.xyz, r6.xyzx, r1.xxxx, r5.xyzx
    add r1.y, r1.y, l(1.000000)
    mov r1.w, l(0)
  endloop 
  add r1.x, -r1.w, l(1.000000)
else 
  mov r1.x, l(1.000000)
endif 
mul r1.y, r2.w, l(5000.000000)
add r1.w, -r4.y, l(1.000000)
mul r1.y, r1.w, r1.y
and r1.w, r2.x, l(0x3f800000)
mul r1.yz, r1.yyzy, r1.wwzw
mad r1.w, r3.w, r1.z, -r3.w
mad r1.w, r1.w, r3.w, l(1.000000)
mul r1.w, r1.w, r1.w
mul r1.w, r1.w, l(3.141593)
div r1.w, r1.z, r1.w
mul r2.x, r0.w, r0.w
mad r2.y, -r0.w, r0.w, l(1.000000)
mul r2.y, r1.z, r2.y
div r2.x, r2.y, r2.x
add r2.x, r2.x, l(1.000000)
sqrt r2.x, r2.x
add r2.x, r2.x, l(-1.000000)
mul r2.x, r2.x, l(0.500000)
mul r2.y, r4.y, r4.y
mad r2.z, -r4.y, r4.y, l(1.000000)
mul r1.z, r1.z, r2.z
div r1.z, r1.z, r2.y
add r1.z, r1.z, l(1.000000)
sqrt r1.z, r1.z
add r1.z, r1.z, l(-1.000000)
mad r1.z, r1.z, l(0.500000), r2.x
add r1.z, r1.z, l(1.000000)
div r1.z, l(1.000000, 1.000000, 1.000000, 1.000000), r1.z
add r2.x, -r4.x, l(1.000000)
mul r2.y, r2.x, r2.x
mul r2.y, r2.y, r2.y
mul r2.x, r2.y, r2.x
mad r2.x, r2.x, l(0.992000), l(0.008000)
mul r1.z, r1.z, r1.w
mul r1.z, r2.x, r1.z
mul r0.w, r0.w, r4.y
mul r0.w, r0.w, l(4.000000)
max r0.w, r0.w, l(0.000000)
div r0.w, r1.z, r0.w
mul r0.w, r4.y, r0.w
mul r0.w, r2.w, r0.w
mul r0.w, r1.x, r0.w
mul r1.zw, r0.xxxy, l(0.000000, 0.000000, 15.528251, 8.734641)
mad r0.xy, r0.xyxx, l(15.528251, 8.734641, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.x, r0.xyxx, t6.xyzw, s0
add r2.x, -r2.x, l(1.000000)
lt r0.z, r0.z, l(0.031250)
mul r2.y, r2.x, l(0.100000)
movc r0.z, r0.z, r2.y, r2.x
lt r2.xy, l(1.000000, 1.000000, 0.000000, 0.000000), r0.xyxx
or r2.x, r2.y, r2.x
lt r0.xy, r0.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
or r0.x, r0.x, r2.x
or r0.x, r0.y, r0.x
movc o1.w, r0.x, l(0), r0.z
dp2 r0.x, r1.zwzz, r1.zwzz
div o1.xyz, l(33.333336, 33.333336, 33.333336, 0.000000), r0.xxxx
mul r0.x, r0.w, l(500.000000)
min r0.x, r0.x, l(0.000000)
mad r0.x, r1.y, r1.x, -r0.x
add r0.y, r0.x, l(1.000000)
div o0.xyz, r0.xxxx, r0.yyyy
mov o2.x, r1.x
ret 
// Approximately 176 instruction slots used
