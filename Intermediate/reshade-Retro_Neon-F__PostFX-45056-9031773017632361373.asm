//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float GLOW_COLOR;                  // Offset:    0 Size:     4 [unused]
//   bool USE_PING;                     // Offset:    4 Size:     4 [unused]
//   float LENS_DISTORT;                // Offset:    8 Size:     4
//   float CHROMA_SHIFT;                // Offset:   12 Size:     4
//   float EDGES_AMT;                   // Offset:   16 Size:     4 [unused]
//   bool DEBUG_CHEAT_MASK;             // Offset:   20 Size:     4 [unused]
//   bool DEBUG_LINE_MODE;              // Offset:   24 Size:     4 [unused]
//   bool DEBUG_FADE_MULT;              // Offset:   28 Size:     4 [unused]
//   float FRAME_TIME;                  // Offset:   32 Size:     4 [unused]
//   int FRAME_COUNT;                   // Offset:   36 Size:     4 [unused]
//   float timer;                       // Offset:   40 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__qUINT__BackBufferTex         texture  float4          2d             t0      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 2   xyz         2     NONE   float       
// TEXCOORD                 3   xyz         3     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 4
mov r0.w, l(17.000000)
mad r1.xy, cb0[0].zwzz, l(0.900000, 0.008000, 0.000000, 0.000000), l(0.500000, 1.000000, 0.000000, 0.000000)
add r1.zw, v1.xxxy, l(0.000000, 0.000000, -0.500000, -0.500000)
dp2 r2.x, r1.zwzz, r1.zwzz
mul r2.x, r2.x, r2.x
mad r1.x, r2.x, -r1.x, l(1.000000)
mul r2.xy, r1.yyyy, r1.zwzz
mad r3.xyzw, r1.zwzw, r1.xxxx, l(0.499219, 0.499537, 0.499740, 0.501389)
sample_indexable(texture2d)(float,float,float,float) r1.y, r3.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r2.z, r3.zwzz, t0.xzyw, s0
mul r1.y, r1.y, l(4.000000)
mad r3.xyzw, r1.zwzw, r1.xxxx, l(0.500000, 0.500000, 0.500781, 0.500463)
sample_indexable(texture2d)(float,float,float,float) r2.w, r3.zwzz, t0.xzwy, s0
sample_indexable(texture2d)(float,float,float,float) r3.x, r3.xyxx, t0.yxzw, s0
mad r1.y, r2.w, l(4.000000), r1.y
mad r1.y, r2.z, l(4.000000), r1.y
mad r2.zw, r1.zzzw, r1.xxxx, l(0.000000, 0.000000, 0.500260, 0.498611)
sample_indexable(texture2d)(float,float,float,float) r2.z, r2.zwzz, t0.xzyw, s0
mad r1.y, r2.z, l(4.000000), r1.y
add r0.y, r3.x, r1.y
mad r3.xyzw, r2.xyxy, r1.xxxx, l(0.499219, 0.499537, 0.499740, 0.501389)
sample_indexable(texture2d)(float,float,float,float) r1.y, r3.xyxx, t0.xzyw, s0
sample_indexable(texture2d)(float,float,float,float) r2.z, r3.zwzz, t0.xyzw, s0
mul r1.y, r1.y, l(4.000000)
mad r3.xyzw, r2.xyxy, r1.xxxx, l(0.500000, 0.500000, 0.500781, 0.500463)
mad r2.xy, r2.xyxx, r1.xxxx, l(0.500260, 0.498611, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.xyxx, t0.zxyw, s0
sample_indexable(texture2d)(float,float,float,float) r2.y, r3.zwzz, t0.xzyw, s0
sample_indexable(texture2d)(float,float,float,float) r2.w, r3.xyxx, t0.xywz, s0
mad r1.y, r2.y, l(4.000000), r1.y
mad r1.y, r2.z, l(4.000000), r1.y
mad r1.y, r2.x, l(4.000000), r1.y
add r0.z, r2.w, r1.y
mad r1.y, -cb0[0].w, l(0.008000), l(1.000000)
mul r1.yz, r1.yyyy, r1.zzwz
mad r2.xyzw, r1.yzyz, r1.xxxx, l(0.499219, 0.499537, 0.499740, 0.501389)
sample_indexable(texture2d)(float,float,float,float) r1.w, r2.xyxx, t0.yzwx, s0
sample_indexable(texture2d)(float,float,float,float) r2.x, r2.zwzz, t0.xyzw, s0
mul r1.w, r1.w, l(4.000000)
mad r3.xyzw, r1.yzyz, r1.xxxx, l(0.500000, 0.500000, 0.500781, 0.500463)
mad r1.xy, r1.yzyy, r1.xxxx, l(0.500260, 0.498611, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r1.x, r1.xyxx, t0.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.y, r3.zwzz, t0.yxzw, s0
sample_indexable(texture2d)(float,float,float,float) r1.z, r3.xyxx, t0.yzxw, s0
mad r1.y, r1.y, l(4.000000), r1.w
mad r1.y, r2.x, l(4.000000), r1.y
mad r1.x, r1.x, l(4.000000), r1.y
add r0.x, r1.z, r1.x
div o0.xyzw, r0.xyzw, l(17.000000, 17.000000, 17.000000, 17.000000)
ret 
// Approximately 50 instruction slots used
